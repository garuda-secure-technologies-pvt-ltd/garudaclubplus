/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BillReversal.java
 *
 * Created on Mar 10, 2009, 10:31:29 AM
 */
package com.openbravo.pos.sales;

import com.openbravo.basic.BasicException;
import com.openbravo.data.loader.Datas;
import com.openbravo.data.loader.PreparedSentence;
import com.openbravo.data.loader.SentenceExec;
import com.openbravo.data.loader.SerializerReadBasic;
import com.openbravo.data.loader.SerializerReadString;
import com.openbravo.data.loader.SerializerWriteBasic;
import com.openbravo.data.loader.SerializerWriteString;
import com.openbravo.data.loader.StaticSentence;
import com.openbravo.data.loader.Transaction;
import com.openbravo.pos.clubmang.DataLogicFacilities;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.BeanFactoryApp;
import com.openbravo.pos.forms.BeanFactoryException;
import com.openbravo.pos.forms.DataLogicSales;
import com.openbravo.pos.forms.JPanelView;
import com.openbravo.pos.forms.LookupUtilityImpl;
import com.openbravo.pos.ticket.ProductInfoExt;
import com.openbravo.pos.ticket.TaxInfo;
import com.openbravo.pos.ticket.TicketLineInfo;
import com.openbravo.pos.ticket.TicketTaxInfo;
import java.util.Date;
import java.util.List;
import java.util.UUID;
import javax.swing.JComponent;
import javax.swing.JOptionPane;

/**
 *
 * @author swathi
 */
public class BillReversal extends javax.swing.JPanel implements JPanelView, BeanFactoryApp {

    /** Creates new form BillReversal */
    private AppView m_App;
    private String user;
    private BillReversalTableModel rbillmodel;
    private DataLogicSales dlsales;
    private BillLogic blogic;
    private DataLogicFacilities dlfac;

    public BillReversal() {
        initComponents();
    }

    public void init(AppView app) throws BeanFactoryException {
        // List rbillList
        m_App = app;
        dlsales = (DataLogicSales) m_App.getBean("com.openbravo.pos.forms.DataLogicSalesCreate");
        dlfac = (DataLogicFacilities) app.getBean("com.openbravo.pos.clubmang.DataLogicFacilitiesCreate");
        setbuttons();
    }

    public Object getBean() {
        return this;
    }

    public JComponent getComponent() {
        return this;
    }

    public String getTitle() {
        return "Discount";
    }

    public void activate() throws BasicException {
        loadData();
    }

    public boolean deactivate() {
        // se me debe permitir cancelar el deactivate
        return true;
    }

    private void loadData() throws BasicException {
        setbuttons();
        rbillmodel = BillReversalTableModel.loadInstance(m_App);
        jTable1.setModel(rbillmodel.getdiscountTableModel());

    }

    private void setbuttons() {
        blogic = LookupUtilityImpl.getInstance(null).getDataLogicBill();
        user = m_App.getAppUserView().getUser().getName();
        boolean permtemp = (m_App.getAppUserView().getUser().hasPermission("discount.request"));
        if (user.equals("Administrator") || permtemp) {
            jButton1.setVisible(true);
            jButton2.setVisible(true);
            jButton1.setEnabled(true);
            jButton2.setEnabled(true);
            jButton3.setEnabled(false);
            jButton3.setVisible(false);

        } else {
            jButton1.setEnabled(false);
            jButton2.setEnabled(false);
            jButton1.setVisible(false);
            jButton2.setVisible(false);
            jButton3.setVisible(true);
            jButton3.setEnabled(true);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Bill Id", "Customer", "user", "Product", "Qty", "Rate", "Amount", "Authorised", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Allow");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Reject");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 759, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(175, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectedRowCount() == 1) {
            int r = jTable1.getSelectedRow();
            String id = (String) rbillmodel.getdiscountTableModel().getValueAt(r, 0);
            String product = (String) rbillmodel.getdiscountTableModel().getValueAt(r, 10);
            String rid = (String) rbillmodel.getdiscountTableModel().getValueAt(r, 11);
            try {
                new StaticSentence(m_App.getSession(), "UPDATE REVERSEDBILL SET AUTHORISED = FALSE WHERE ID=? AND AUTHORISED IS NULL ", new SerializerWriteBasic(new Datas[]{Datas.STRING})).exec(new Object[]{rid});
                loadData();
            } catch (Exception e) {
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select one product at a time", "Error", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int del = jTable1.getSelectedRowCount();
        if (jTable1.getSelectedRowCount() == 1) {
            int r = jTable1.getSelectedRow();
            String id = (String) rbillmodel.getdiscountTableModel().getValueAt(r, 0);
            String product = (String) rbillmodel.getdiscountTableModel().getValueAt(r, 10);

            try {
                new StaticSentence(m_App.getSession(), "DELETE FROM REVERSEDBILL WHERE BILLID = ? AND PRODUCT =? AND CREATEDBY=? AND AUTHORISED IS NULL ", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.STRING, Datas.STRING})).exec(new Object[]{id, product, m_App.getAppUserView().getUser().getName()});
                loadData();
            } catch (Exception e) {
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select one product at a time", "Error", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            if (jTable1.getSelectedRowCount() == 1) {
                Transaction t = new Transaction(m_App.getSession()) {

                    @Override
                    protected Object transact() throws BasicException {
                        Date dnow = new Date();
                        int r = jTable1.getSelectedRow();
                        String id = (String) rbillmodel.getdiscountTableModel().getValueAt(r, 0);
                        String product = (String) rbillmodel.getdiscountTableModel().getValueAt(r, 10);
                        String qty = rbillmodel.getdiscountTableModel().getValueAt(r, 4).toString();
                        String rate = rbillmodel.getdiscountTableModel().getValueAt(r, 5).toString();
                        String user = rbillmodel.getdiscountTableModel().getValueAt(r, 2).toString();
                        Double qty1 = Double.parseDouble(qty);
                        Double rate1 = Double.parseDouble(rate);
                        
                        int count = new StaticSentence(m_App.getSession(), "UPDATE REVERSEDBILL SET AUTHORISED = TRUE,CRDATE=? WHERE BILLID = ? AND PRODUCT =? AND AUTHORISED IS NULL ", new SerializerWriteBasic(new Datas[]{Datas.TIMESTAMP, Datas.STRING, Datas.STRING})).exec(new Object[]{dnow, id, product});
                        if (count > 0) {
                            //praveen:changes start--bill reversal
                        ProductInfoExt prd = dlsales.getProductInfo(product);
                        TaxInfo tax = dlsales.getTaxListById(prd.getTaxCategoryID());
//                        TicketLineInfo t = new TicketLineInfo(prd, qty1, rate1, tax, (java.util.Properties) (prd.getProperties().clone()));
//                        TaxesLogic tlogic = new TaxesLogic(dlsales.getTaxList().list());
//                        List<TicketTaxInfo> tline = tlogic.calculateTaxes(t);
                        String custCurrentAccount = null;
                        Object objware = new StaticSentence(m_App.getSession(), "select l.customercurrentaccount from locations l,bill b where b.warehouse=l.id and b.id=?", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).find(id);
                        if (objware != null) {
                            custCurrentAccount = objware.toString();
                        }
                         //praveen:changes end--bill reversal
                            List<BillLineInfo> binfo = blogic.getBillLineList(id);
                            Object obj1 = new PreparedSentence(m_App.getSession(), "SELECT CLOSESALESEQ FROM BILL WHERE ID=?", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).find(id);
                            int line = binfo.size();
                            line++;
                            Double total = rate1 * qty1;
                            Object[] value = new Object[]{UUID.randomUUID().toString(), line, id, product, qty1, rate1, total};
                            // Datas type[]=new Datas{Datas.STRING,};
                            new PreparedSentence(m_App.getSession(), "INSERT INTO BILLITEM (ID, LINE ,PARENTID, PRODUCT, DMULTIPLY, RATE,TOTAL) VALUES (?, ?, ?, ?, ?, ?,?)", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.INT, Datas.STRING, Datas.STRING, Datas.DOUBLE, Datas.DOUBLE, Datas.DOUBLE})).exec(value);
                            // dlsales.updateStockVolume1(-qty1, product);
                            Double taxrate = 0.0;

                            for (BillLineInfo bltemp : binfo) {
                                if (bltemp.getProduct().getID().equals(product)) {
                                    bltemp.setTaxInfo(tax);
                                    taxrate = bltemp.getTaxRate();
                                    //tax=bltemp.getTaxInfo();
                                }
                            }
                            taxrate = (rate1) * taxrate *(qty1 * -1);
                            Double amt = rate1 * (qty1 * -1);
                            taxrate = dlfac.roundTwoDecimals(taxrate);
                            amt = dlfac.roundTwoDecimals(amt);
                            String taxAccount = tax.getTaxCustCategoryID();
                             //praveen:changes start--bill reversal
                            String tid = UUID.randomUUID().toString();
                            String narration = "Tax amount for the reversed bill :" + id;
                           // for (TicketTaxInfo tl : tline) {
                                if (obj1!=null) {
                                     new PreparedSentence(m_App.getSession(), "INSERT INTO TAXLINES (ID, RECEIPT, TAXID, BASE, AMOUNT)  VALUES (?, ?, ?, ?, ?)", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.STRING, Datas.STRING, Datas.DOUBLE, Datas.DOUBLE}), null).exec(new Object[]{UUID.randomUUID().toString(), id, tax.getId(), amt, (taxrate * -1)});
                                     Object[] cvalue = new Object[]{UUID.randomUUID().toString(), tid, null, dnow, "D", "Bill reverse", id, taxrate, dnow, true, m_App.getAppUserView().getUser().getName(), m_App.getProperties().getHost(), narration, taxAccount, 0.0, dnow, null, true};
                                    dlfac.insertintoaccjoutnal2(cvalue);
                                    Object[] dvalue = new Object[]{UUID.randomUUID().toString(), tid, null, dnow, "C", "Bill reverse", id, taxrate, dnow, true, m_App.getAppUserView().getUser().getName(), m_App.getProperties().getHost(), narration, custCurrentAccount, 0.0, dnow, null, true};
                                    dlfac.insertintoaccjoutnal2(dvalue);
                                }else{
                                   new PreparedSentence(m_App.getSession(), "INSERT INTO TAXLINES (ID, RECEIPT, TAXID, BASE, AMOUNT)  VALUES (?, ?, ?, ?, ?)", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.STRING, Datas.STRING, Datas.DOUBLE, Datas.DOUBLE}), null).exec(new Object[]{UUID.randomUUID().toString(), id, tax.getId(), amt, (taxrate * -1)});
                                   }
                          //  }
                             //praveen:changes end--bill reversal
                            
                            new StaticSentence(m_App.getSession(), "UPDATE BILL SET AMOUNT = (AMOUNT - ?),TAXTOTAL=(TAXTOTAL-?) WHERE ID = ? ", new SerializerWriteBasic(new Datas[]{Datas.DOUBLE, Datas.DOUBLE, Datas.STRING})).exec(new Object[]{amt, taxrate, id});
                            int qline = 0;
                            String qt = "";
                            Object[] obj = (Object[]) new StaticSentence(m_App.getSession(), "SELECT QT.ID,MAX(Q.LINE) FROM QTICKET QT,QTITEMS Q WHERE Q.PARENTID = QT.ID AND QT.BILLREF = ? GROUP BY Q.PARENTID,QT.ID", SerializerWriteString.INSTANCE, new SerializerReadBasic(new Datas[]{Datas.STRING, Datas.INT})).find(id);
                            if (obj != null) {
                                qt = obj[0].toString();
                                qline = Integer.parseInt(obj[1].toString());
                                qline++;
                            }

                            Object value1 = new Object[]{UUID.randomUUID().toString(), qline, qt, product, qty1, rate1};
                            new PreparedSentence(m_App.getSession(), "INSERT INTO QTITEMS (ID, LINE ,PARENTID, PRODUCT, DMULTIPLY, RATE) VALUES (?, ?, ?, ?, ?, ?)", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.INT, Datas.STRING, Datas.STRING, Datas.DOUBLE, Datas.DOUBLE})).exec(value1);
                            dlsales.updateStockVolume1((qty1 * -1), product);
                        /*        Object[] obj1=dlsales.getlocationFromStkCurrent(product);
                        if(obj1!=null){
                        dlsales.updateStockVolume1(qty1, product);

                        SentenceExec sent=  dlsales.getStockDiaryInsertinpdt();
                        Date d=new Date();
                        //-8 indicates discount accepted
                        Object[] values= new Object[]{UUID.randomUUID().toString(),d,-8,obj1[0].toString(),product,qty1,0.0,"Bill Discount",user};
                        sent.exec(values);
                        }*/
                        }
                        return null;
                    }
                };
                t.execute();
                loadData();

            } else {
                JOptionPane.showMessageDialog(this, "Please select one product at a time", "Error", JOptionPane.OK_OPTION);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
