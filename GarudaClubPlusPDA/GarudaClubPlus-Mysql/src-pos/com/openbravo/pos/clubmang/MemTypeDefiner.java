/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MemTypeDefiner.java
 *
 * Created on Apr 3, 2009, 3:28:40 PM
 */

package com.openbravo.pos.clubmang;

import com.openbravo.basic.BasicException;
import com.openbravo.data.gui.ComboBoxValModel;
import com.openbravo.data.loader.Datas;
import com.openbravo.data.loader.PreparedSentence;
import com.openbravo.data.loader.SerializerReadInteger;
import com.openbravo.data.loader.SerializerWriteBasic;
import com.openbravo.data.loader.SerializerWriteString;
import com.openbravo.data.loader.StaticSentence;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.BeanFactoryApp;
import com.openbravo.pos.forms.BeanFactoryException;
import com.openbravo.pos.forms.JPanelView;
import java.awt.Color;
import java.awt.Component;
import java.util.Date;
import java.util.List;
import java.util.UUID;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author swathi
 */
public class MemTypeDefiner extends javax.swing.JPanel implements JPanelView,BeanFactoryApp{

    /** Creates new form MemTypeDefiner */
  //  private ComboBoxValModel amodel;
  //  private ComboBoxValModel rpmodel;
    private ComboBoxValModel pmodel;
    private DataLogicFacilities dlfac;
    private AppView m_App;
    private MemTypeTableModel tablemodel;

    public MemTypeDefiner() {
        initComponents();
    }

    public void init(AppView app) throws BeanFactoryException {
        m_App=app;
        dlfac=(DataLogicFacilities) app.getBean("com.openbravo.pos.clubmang.DataLogicFacilitiesCreate");
    }

     public String getTitle() {
       return null;
    }

    public void activate() throws BasicException {
     //   List acc=dlfac.getaccounts();
     //   acc.add(0,null);
     //   amodel=new ComboBoxValModel(acc);
       // accounttype.setModel(amodel);
        List periodlist=dlfac.getPeriodicity().list();
        periodlist.add(0, null);
      //  rpmodel=new ComboBoxValModel(periodlist);
      //  rperiod.setModel(rpmodel);
        pmodel=new ComboBoxValModel(periodlist);
        period.setModel(pmodel);
        reset();
    }
    private void reset(){
       name.setText(null);
      // accounttype.setSelectedIndex(0);
       period.setSelectedIndex(0);
       maxdebt.setText(null);
      // rperiod.setSelectedIndex(0);
    }

    public boolean deactivate() {
        return true;
    }

    public JComponent getComponent() {
       return this;
    }

    public Object getBean() {
       return this;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        period = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        maxdebt = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 =  new javax.swing.JTable(){public Component prepareRenderer(TableCellRenderer renderer,
            int rowIndex, int vColIndex) {
            Component c = super.prepareRenderer(renderer, rowIndex, vColIndex);
            if (c instanceof JComponent) {
                JComponent jc = (JComponent)c;
                jc.setToolTipText(String.valueOf(getValueAt(rowIndex, vColIndex)));

                if (rowIndex % 2 == 0 && !isCellSelected(rowIndex, vColIndex)) {
                    jc.setBackground(Color.lightGray);
                }
                else {
                    jc.setBackground(Color.white);
                }
                if(isCellSelected(rowIndex, vColIndex))
                jc.setBackground(Color.cyan);
            }
            return c;
        }};
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();

        setLayout(null);

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jPanel1.setLayout(null);

        jLabel1.setText("Name");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(30, 40, 70, 14);
        jPanel1.add(name);
        name.setBounds(140, 40, 190, 20);

        jLabel3.setText("Period");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(30, 80, 70, 14);

        jPanel1.add(period);
        period.setBounds(140, 80, 190, 20);

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(450, 3, 70, 30);

        jLabel2.setText("Max Debt");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(30, 120, 70, 14);
        jPanel1.add(maxdebt);
        maxdebt.setBounds(140, 120, 90, 20);

        jTabbedPane1.addTab("Create New", jPanel1);

        jPanel2.setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(10, 40, 770, 500);

        jCheckBox1.setText("Show All");
        jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox1StateChanged(evt);
            }
        });
        jPanel2.add(jCheckBox1);
        jCheckBox1.setBounds(690, 10, 81, 23);

        jButton2.setText("Deactivate");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);
        jButton2.setBounds(680, 550, 100, 23);

        jTabbedPane1.addTab("List View", jPanel2);

        add(jTabbedPane1);
        jTabbedPane1.setBounds(0, 0, 800, 610);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(name.getText().length()>0 && period.getSelectedIndex()!= 0 && maxdebt.getText().length()>0){
          try{
             // Periodicity r=(Periodicity)rperiod.getSelectedItem();//renewal period
               int count=Integer.valueOf(new StaticSentence(m_App.getSession()
                    , "SELECT COUNT(*) FROM MEMTYPE WHERE NAME=? AND ACTIVE=TRUE"
                    ,SerializerWriteString.INSTANCE
                    ,SerializerReadInteger.INSTANCE).find(name.getText()).toString());
            if(count==0){
              Periodicity p=(Periodicity)period.getSelectedItem();
            //  AccountMaster account=(AccountMaster) accounttype.getSelectedItem();
              Object[] values=new Object[]{UUID.randomUUID().toString(),name.getText(),true,p.getid(),m_App.getAppUserView().getUser().getName(),new Date(),Double.parseDouble(maxdebt.getText())};
              new PreparedSentence(m_App.getSession()
                     ,"INSERT INTO MEMTYPE(ID,NAME,ACTIVE,PERIOD,CREATEDBY,DATE,DEBTMAX) VALUES (?,?,?,?,?,?,?)"
                     , new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.STRING,Datas.BOOLEAN,Datas.STRING,Datas.STRING,Datas.TIMESTAMP,Datas.DOUBLE})).exec(values);
            }
               reset();
            }
          catch(Exception e){
              e.printStackTrace();
          }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        // TODO add your handling code here:
        javax.swing.JTabbedPane tabpane=(javax.swing.JTabbedPane)evt.getSource();
       int tabno=tabpane.getSelectedIndex();
       if(tabno==1){
        try{
         if(jCheckBox1.isSelected()==true){
             tablemodel=MemTypeTableModel.loadInstance(m_App,2);
           jTable1.setModel(tablemodel.getTableModel());
        }else
        {
           tablemodel=MemTypeTableModel.loadInstance(m_App,1);
           jTable1.setModel(tablemodel.getTableModel());
        }
        }
        catch(Exception e){
         e.printStackTrace();
        }
       }

    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jCheckBox1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox1StateChanged
        // TODO add your handling code here:
        try{
        if(jCheckBox1.isSelected()==true){
             tablemodel=MemTypeTableModel.loadInstance(m_App,2);
           jTable1.setModel(tablemodel.getTableModel());
        }else
        {
           tablemodel=MemTypeTableModel.loadInstance(m_App,1);
           jTable1.setModel(tablemodel.getTableModel());
        }
        }
        catch(Exception e){
         e.printStackTrace();
        }
    }//GEN-LAST:event_jCheckBox1StateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         try{
            int row=jTable1.getSelectedRow();
            if(row < jTable1.getRowCount() && row >= 0){
               String id=jTable1.getModel().getValueAt(row, 7).toString();
              String name=jTable1.getModel().getValueAt(row,0).toString();
               if(JOptionPane.showConfirmDialog(this, "Do you want to deactivate "+name+" Member Type ?",null ,JOptionPane.YES_NO_OPTION )==JOptionPane.YES_OPTION){
               new PreparedSentence(m_App.getSession()
                             ,"UPDATE MEMTYPE SET ACTIVE=FALSE,DEACTIVATEDBY =?,DEACTIVATEDDATE=? WHERE ID=?"
                             , new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.TIMESTAMP,Datas.STRING})).exec(new Object[]{m_App.getAppUserView().getUser().getName(),new Date(),id});

               }
            }
        }
        catch(Exception e){
           e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField maxdebt;
    private javax.swing.JTextField name;
    private javax.swing.JComboBox period;
    // End of variables declaration//GEN-END:variables



}
