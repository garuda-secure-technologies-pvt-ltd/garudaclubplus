/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CaluculateFacilityMatrix.java
 *
 * Created on 28-Jun-2011, 09:54:48
 */
package com.openbravo.pos.clubmang;

import com.openbravo.basic.BasicException;
import com.openbravo.data.loader.DataRead;
import com.openbravo.data.loader.Datas;
import com.openbravo.data.loader.PreparedSentence;
import com.openbravo.data.loader.SerializableRead;
import com.openbravo.data.loader.SerializerReadClass;
import com.openbravo.data.loader.SerializerWriteBasic;
import com.openbravo.data.loader.StaticSentence;
import com.openbravo.pos.customers.CustomerInfo;
import com.openbravo.pos.customers.CustomerInfoExt;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.BeanFactoryApp;
import com.openbravo.pos.forms.BeanFactoryException;
import com.openbravo.pos.forms.DataLogicSales;
import com.openbravo.pos.forms.JPanelView;
import java.io.Serializable;
import java.util.Date;
import java.util.List;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JOptionPane;

/**
 *
 * @author swathi
 */
public class CaluculateFacilityMatrix extends javax.swing.JPanel implements JPanelView, BeanFactoryApp {

    private AppView m_app;
    private CaluculateLimit climit;
    private DataLogicFacilities dlfac;
    private DataLogicSales dlsales;

    /** Creates new form CaluculateFacilityMatrix */
    public CaluculateFacilityMatrix() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jButton1.setText("CalculateFacilityLimitToAll");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jButton2)))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jButton1)
                .addGap(33, 33, 33)
                .addComponent(jButton2)
                .addContainerGap(159, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        try {
             new PreparedSentence(m_app.getSession(), "DELETE FROM FACILITYLIMITMASTER").exec();
            climit = new CaluculateLimit();
             climit.calculateFacilityLimitToAll(m_app.getSession());
            JOptionPane.showMessageDialog(this, "caluculated successfully");

        } catch (BasicException ex) {
            //JOptionPane.showMessageDialog(this,"something happened");
            ex.printStackTrace();
        }



    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            //praveen:added function to add facilities to all existing members.....
            // TODO add your handling code here:
            List<customer> cinf = loadcustomer();
            Date d = new Date();
            Object[] obj = null;
            for (customer c : cinf) {
                obj = new Object[]{UUID.randomUUID().toString(), c.getId(), true, "2cda1c10-3b44-4a63-8c6b-426cf0f7bac7", 0, d, m_app.getAppUserView().getUser().getName(), d};
                AssignFacilityToMember(obj);
                obj = new Object[]{UUID.randomUUID().toString(), c.getId(), true, "dcfc2052-97fa-482d-bc99-1399539b8473", 0, d, m_app.getAppUserView().getUser().getName(), d};
                AssignFacilityToMember(obj);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    public List<customer> loadcustomer() throws BasicException{
        return new StaticSentence(m_app.getSession()//praveen:changed status to status_
                , "select id,searchkey,name from customers where visible=true",
                null,new SerializerReadClass(customer.class)).list();
    }

    public void AssignFacilityToMember(Object[] Values) throws BasicException {
        new PreparedSentence(m_app.getSession()//praveen:changed status to status_
                , "INSERT INTO MEMFACILITYUSAGE(ID,MEMNO,ACTIVE,FACILITYTYPE,STATUS_,SDATE,CREATEDBY,CRDATE) VALUES (?,?,?,?,?,?,?,?)", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.STRING, Datas.BOOLEAN, Datas.STRING, Datas.INT, Datas.TIMESTAMP, Datas.STRING, Datas.TIMESTAMP})).exec(Values);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables

    public String getTitle() {
        return "CalculateFacilityLimit";
    }

    public void activate() throws BasicException {
    }

    public boolean deactivate() {
        return true;
    }

    public JComponent getComponent() {
        return this;
    }

    public void init(AppView app) throws BeanFactoryException {
        jButton2.setVisible(false);//dont display this button.......
        m_app = app;
        dlfac = (DataLogicFacilities) app.getBean("com.openbravo.pos.clubmang.DataLogicFacilitiesCreate");
        dlsales = (DataLogicSales) app.getBean("com.openbravo.pos.forms.DataLogicSalesCreate");

    }

    public Object getBean() {
        return this;
    }

    public static class customer implements SerializableRead{
        private String id;
        private String searchkey;
        private String name;

        public void readValues(DataRead dr) throws BasicException {
            id = dr.getString(1);
            searchkey = dr.getString(2);
            name = dr.getString(3);
        }

        public String getId() {
            return id;
        }

        public void setId(String id) {
            this.id = id;
        }

        public String getName() {
            return name;
        }

        public void setName(String name) {
            this.name = name;
        }

        public String getSearchkey() {
            return searchkey;
        }

        public void setSearchkey(String searchkey) {
            this.searchkey = searchkey;
        }

    }
}
