/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * serialNumber.java
 *
 * Created on 13-Aug-2010, 10:27:02
 */

package serialNumber;

/**
 *
 * @author swathi
 */
import bci.Property;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

public class serialNumber extends javax.swing.JDialog {

    /** Creates new form serialNumber */
    public static String licencekey;
    public static String serialnumber;
    public static String DateCheck;
    public static String checkvalue;
    public static int count = 0;
    public static macDialog Mdialog;
    public static StringBuffer stringMacBuff = new StringBuffer();
    public String serialnumberTextfield;
    public String licenseTextfiled;

    public serialNumber(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        serialnumberTextfield = jTextField1.getText();
        licenseTextfiled = jTextField2.getText();
    }
    public serialNumber(){
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField3 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();

        jTextField3.setText("jTextField3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("License");

        jLabel1.setText("Serial Number");

        jLabel2.setText("licence key");

        jButton1.setText("SKIP");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("UPDATE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Installation Key");

        jTextField4.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)))
                        .addGap(254, 254, 254))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       try{
           String serialval = jTextField1.getText();
           String licensekeyval = jTextField2.getText();
           if(serialval.equals("123456789") && licensekeyval.equals("0000-0000-0000") ){
               if(count >= 15){
                   JOptionPane.showMessageDialog(null, "Your license expired!!");
                   System.exit(0);
               }
               dispose();
           }else{
               if(serialval.equals("") && licensekeyval.equals("")){
                   JOptionPane.showMessageDialog(null, "please fill the fields!!");
               }else{
                   jButton1.setEnabled(false);
               }
           }
       }catch(Exception e){
           System.out.println("Skip button error!!"+ e);
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try{
            String serialval = jTextField1.getText();
            String licensekeyval = jTextField2.getText();
            if(serialval.equals("") && licensekeyval.equals("")){
                JOptionPane.showMessageDialog(null, "please fill the fields!!");
            }else{
                   int firstval = stringMacBuff.indexOf("-");
                   String splitedvalue = stringMacBuff.substring(0, firstval);
                   splitedvalue = splitedvalue.substring(0, splitedvalue.length());
                   int convertedval = Integer.parseInt(splitedvalue);
                   convertedval += convertedval;
                   convertedval += convertedval;
                   serialval = serialval.substring(5, serialval.length());
                   int convertedSerialno = Integer.parseInt(serialval);
                   long licenseKeyfinal = convertedval * convertedSerialno;
                   String licenseCheckval = Long.toString(licenseKeyfinal);
                   System.out.println(licenseKeyfinal);
                   System.out.println(licensekeyval);
                if(licensekeyval.equals(licenseCheckval)){
                Property prop = new Property();
                prop.setSerailNumber(serialval);
                prop.setLicenseKey(licenseCheckval);
                prop.setcountcheckval("True");
                prop.storeLicenseKey();
                   JOptionPane.showMessageDialog(null, "License key updated!!");
                   dispose();
                }else{
                    JOptionPane.showMessageDialog(null, "License key is not valid!!");
                }
            }  
         }catch(Exception e){
            System.out.println("Save button error" + e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    public static void macDialog() throws UnknownHostException, SocketException{
        try {

               InetAddress add = InetAddress.getLocalHost();
               NetworkInterface ni1 = NetworkInterface.getByInetAddress(add);
            if (ni1 != null) {
                byte[] mac1 = ni1.getHardwareAddress();
                if (mac1 != null) {

                    for (int k = 0; k < mac1.length; k++) {
                        stringMacBuff.append(mac1[k]);
                    }
                } else {
                    System.out.println("Address doesn't exist ");
                }
            } else {
                System.out.println("address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        }
    }
    /**
    * @param args the command line arguments
    */
    public static void callSerialNumber(){
        licRead();
        sysDate();
        try {
            macDialog();
        } catch (UnknownHostException ex) {
            System.out.println("Unknown host"+ex);
        } catch (SocketException ex) {
            System.out.println("Unknown socket"+ex);
        }
        final serialNumber dialog = new serialNumber(new javax.swing.JFrame(), true);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setLocationRelativeTo(null);
                dialog.setVisible(true);
            }
        });
        dialog.setTextvalues();
        dialog.getTextvalues();
    }
    public static void licRead(){
        try{
             DateFormat Dformat = new SimpleDateFormat("yyyy-MM-dd");
             Date date = new Date();
             DateCheck = Dformat.format(date);

            Property pr = new Property();
            pr.readLicence();
        /*    pr.setLicenseKey("1234567891");
            pr.setSerailNumber("0000-0000-0000");
            pr.setcountcheckval("True");
            pr.storeLicenseKey();   */
            
            licencekey = pr.getLicenseKey();
            serialnumber = pr.getSerailNumber();
            checkvalue = pr.getcountcheckval();
        }catch(Exception e){
            System.out.println("licence file read error"+e);
        }
    }
    public void setTextvalues(){
        try{
            jTextField1.setText(serialnumber);
            jTextField2.setText(licencekey);
            jTextField4.setText(stringMacBuff.toString());
        }catch(Exception e){
            System.out.println("TextBox setext error"+ e);
        }
    }
    public void getTextvalues(){
        try{
            String serialval = jTextField1.getText();
            String licval = jTextField2.getText();
            int countminus = 15;
            countminus = countminus - count;
            if(serialval.equals("123456789") && licval.equals("0000-0000-0000")){
                jLabel3.setText("Your License will expire with in "+ countminus + " days !!");
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    public static void sysDate(){
        try{
            File file = new File("inig.txt");
            if(!file.exists()){
                file.createNewFile();
            }
            hide(file);
            RandomAccessFile randfile = new RandomAccessFile(file, "rw");
            randfile.seek(randfile.length());
            BufferedReader Breader = new BufferedReader(new FileReader(file));
            String lastvalue = null, val;
            while ((val = Breader.readLine()) != null) {
                count ++;
                lastvalue = val;
            }
            if(count == 0){
                randfile.writeBytes(DateCheck + "\r\n");
            }
            if(!lastvalue.equals(DateCheck )){
                randfile.writeBytes(DateCheck + "\r\n");
            }
            
        }catch(Exception e){
            e.printStackTrace();
        }
    }

    public static void hide(File src) throws InterruptedException, IOException {
        try{
            Process p = Runtime.getRuntime().exec("attrib +h " + src.getPath());
            p.waitFor();
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables

}
