/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FacilityApprovalManager.java
 *
 * Created on 27-Jun-2011, 19:41:02
 */
package com.openbravo.pos.clubmang;

import com.openbravo.basic.BasicException;
import com.openbravo.data.loader.Datas;
import com.openbravo.data.loader.PreparedSentence;
import com.openbravo.data.loader.SerializerWriteBasic;
import com.openbravo.data.loader.SerializerWriteString;
import com.openbravo.data.loader.StaticSentence;
import com.openbravo.pos.customers.DataLogicCustomers;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.BeanFactoryApp;
import com.openbravo.pos.forms.BeanFactoryException;
import com.openbravo.pos.forms.DataLogicSales;
import com.openbravo.pos.forms.JPanelView;
import java.awt.Window;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JOptionPane;

/**
 *
 * @author swathi
 */
public class FacilityApprovalManager extends javax.swing.JPanel implements JPanelView, BeanFactoryApp {

    private AppView m_App;
    private FacilityApprovalModel dbmodel = null;
    private DataLogicFacilities dmang;
    private DataLogicCustomers dlCustomers;
    private DataLogicSales m_dlSales;
    private boolean  bool=true;

    /** Creates new form FacilityApprovalManager */
    public FacilityApprovalManager() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        allow = new javax.swing.JButton();
        disallow = new javax.swing.JButton();
        history = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        back = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jreason = new javax.swing.JTextField();

        allow.setText("Allow");
        allow.setName("allow"); // NOI18N
        allow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allowActionPerformed(evt);
            }
        });

        disallow.setText("DisAllow");
        disallow.setName("disallow"); // NOI18N
        disallow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disallowActionPerformed(evt);
            }
        });

        history.setText("History");
        history.setName("history"); // NOI18N
        history.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historyActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setName("jTable1"); // NOI18N
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        back.setText("Back");
        back.setName("back"); // NOI18N
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jLabel1.setText("Reason");
        jLabel1.setName("jLabel1"); // NOI18N

        jreason.setName("jreason"); // NOI18N
        jreason.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jreasonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(history, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(allow, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(disallow, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jreason, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jreason, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(disallow)
                            .addComponent(allow)
                            .addComponent(history)
                            .addComponent(back)))
                    .addComponent(jLabel1))
                .addContainerGap(72, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public String getTitle() {
        return "FacilityApprovalManager";
    }

    public void activate() throws BasicException {
        load();
    }

    public boolean deactivate() {
        return true;
    }

    public JComponent getComponent() {
        return this;
    }

    public void init(AppView app) throws BeanFactoryException {
        m_App = app;
        dmang = (DataLogicFacilities) app.getBean("com.openbravo.pos.clubmang.DataLogicFacilitiesCreate");
        dlCustomers = (DataLogicCustomers) app.getBean("com.openbravo.pos.customers.DataLogicCustomersCreate");
        m_dlSales = (DataLogicSales) m_App.getBean("com.openbravo.pos.forms.DataLogicSalesCreate");

    }

    public Object getBean() {
        return this;
    }

    public void load() throws BasicException {
        boolean flag=false;
        jLabel1.setVisible(flag);
        jreason.setVisible(flag);
        jreason.setText(null);
        history.setVisible(flag);
        back.setVisible(flag);
        allow.setVisible(flag);
        disallow.setVisible(flag);
        try {
            dbmodel = FacilityApprovalModel.loadinstance(m_App, m_App.getAppUserView().getUser().getRole());
            jTable1.setModel(dbmodel.getApprovalTableModel1());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void historyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historyActionPerformed
        // TODO add your handling code here:        
        try {
            bool=false;
            jLabel1.setVisible(false);
            jreason.setVisible(false);
            back.setVisible(true);
            allow.setVisible(false);
            disallow.setVisible(false);
            int row = jTable1.getSelectedRow();
            String memid = (String) dbmodel.getApprovalTableModel().getValueAt(row, 10);
            dbmodel = FacilityApprovalModel.loadinstancehistory(m_App, memid);
            jTable1.setModel(dbmodel.getApprovalTableModel());            
            history.setVisible(false);
            
        } catch (BasicException ex) {
            ex.printStackTrace();
        }

}//GEN-LAST:event_historyActionPerformed

    private void allowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allowActionPerformed
        // TODO add your handling code here:

        try {
            int row = jTable1.getSelectedRow();
            String reason = null;
            String id = (String) dbmodel.getApprovalTableModel().getValueAt(row, 11);
            String approvedby = m_App.getAppUserView().getUser().getName();
            
                if (jreason.getText().length() > 0) {
                    reason = jreason.getText();

                    int i = new StaticSentence(m_App.getSession(), "UPDATE FACILITYLIMITAPPROVAL SET APPROVEDBY=?,STATUS_=?,APPROVEDDATE=?,AUTREASON=? WHERE ID=?",
                            new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.BOOLEAN, Datas.TIMESTAMP, Datas.STRING, Datas.STRING})).exec(new Object[]{approvedby, true, new Date(), reason, id});
                load();
                } else {
                    JOptionPane.showMessageDialog(this, "give reason....");
                    
                }
            
           
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_allowActionPerformed

    private void disallowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disallowActionPerformed
        // TODO add your handling code here:

        try {
            int row = jTable1.getSelectedRow();
            String reason = null;
            String id = (String) dbmodel.getApprovalTableModel().getValueAt(row, 11);
            String approvedby = m_App.getAppUserView().getUser().getName();
            
                if (jreason.getText().length() > 0) {
                    reason = jreason.getText();
                    int i = new StaticSentence(m_App.getSession(), "UPDATE FACILITYLIMITAPPROVAL SET APPROVEDBY=?,STATUS_=?,APPROVEDDATE=?,AUTREASON=? WHERE ID=?",
                            new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.BOOLEAN, Datas.TIMESTAMP, Datas.STRING, Datas.STRING})).exec(new Object[]{approvedby, false, new Date(), reason, id});
                 load();
                } else {
                    JOptionPane.showMessageDialog(this, "give reason....");
                    
                }
            
            
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_disallowActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        try {
            bool=true;
            jLabel1.setVisible(false);
            jreason.setVisible(false);
            load();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_backActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        if(bool){
                jLabel1.setVisible(true);
        jreason.setVisible(true);
        jreason.setText(null);
        allow.setVisible(true);
        disallow.setVisible(true);
        history.setVisible(true);
        }else{
             jLabel1.setVisible(false);
             jreason.setText(null);
        jreason.setVisible(false);
        allow.setVisible(false);
        disallow.setVisible(false);
        history.setVisible(false);
        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void jreasonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jreasonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jreasonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton allow;
    private javax.swing.JButton back;
    private javax.swing.JButton disallow;
    private javax.swing.JButton history;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jreason;
    // End of variables declaration//GEN-END:variables
}
