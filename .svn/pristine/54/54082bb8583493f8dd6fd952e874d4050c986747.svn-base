package com.openbravo.pos.clubmang;

import com.openbravo.basic.BasicException;
import com.openbravo.data.gui.ComboBoxValModel;
import com.openbravo.data.gui.MessageInf;
import com.openbravo.data.loader.Datas;
import com.openbravo.data.loader.PreparedSentence;
import com.openbravo.data.loader.SerializerReadBasic;
import com.openbravo.data.loader.SerializerWriteBasic;
import com.openbravo.data.loader.SerializerWriteString;
import com.openbravo.data.loader.StaticSentence;
import com.openbravo.data.loader.Transaction;
import com.openbravo.pos.customers.CustomerInfo;
import com.openbravo.pos.customers.DataLogicCustomers;
import com.openbravo.pos.customers.JCustomerFinder;
import com.openbravo.pos.forms.AppLocal;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.BeanFactoryApp;
import com.openbravo.pos.forms.BeanFactoryException;
import com.openbravo.pos.forms.JPanelView;
import java.util.Date;
import java.util.List;
import java.util.UUID;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumnModel;

public class StopMinimumUsage extends javax.swing.JPanel implements JPanelView, BeanFactoryApp {

    private DataLogicCustomers dlCustomers;
    private DataLogicFacilities dmang;
    private CustomerInfo customerInfo;
    private MembersFacilityTableModel mfmodel;
    private AppView m_App;
    private TableColumnModel cmodel;
    private ComboBoxValModel minusagetypemodel;

    /** Creates new form StopMinimumUsage */
    public StopMinimumUsage() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setLayout(null);

        jLabel1.setText("Member No"); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        add(jLabel1);
        jLabel1.setBounds(30, 50, 80, 14);

        jTextField1.setName("jTextField1"); // NOI18N
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        add(jTextField1);
        jTextField1.setBounds(120, 50, 130, 20);

        jLabel2.setText("Member Name"); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        add(jLabel2);
        jLabel2.setBounds(30, 100, 90, 14);

        jTextField2.setName("jTextField2"); // NOI18N
        add(jTextField2);
        jTextField2.setBounds(120, 100, 210, 20);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/kdmconfig.png"))); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(350, 100, 55, 31);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.setName("jComboBox1"); // NOI18N
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        add(jComboBox1);
        jComboBox1.setBounds(120, 150, 130, 20);

        jButton2.setText("Deactivate");
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2);
        jButton2.setBounds(120, 200, 130, 23);

        jLabel3.setText("UsageType");
        jLabel3.setName("jLabel3"); // NOI18N
        add(jLabel3);
        jLabel3.setBounds(30, 150, 80, 14);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        if (evt.getKeyText(evt.getKeyCode()).equals("Enter")) {
            try {
                Object[] obj = dmang.getMamberbySkey(jTextField1.getText().toUpperCase());

                if (obj == null) {
                    JOptionPane.showMessageDialog(this, AppLocal.getIntString("message.custnotpresent"), AppLocal.getIntString("message.custtitle"), JOptionPane.WARNING_MESSAGE);
                } else {
                    customerInfo = new CustomerInfo(obj[0].toString());
                    customerInfo.setName(obj[1].toString());
                    customerInfo.setSearchkey(jTextField1.getText().toUpperCase());
                    customerInfo.setMobile(String.valueOf(obj[3]));
                    jTextField2.setText(obj[1].toString());
                    jButton2.setVisible(true);
                }
            } catch (Exception e) {
            }
        } else {
            jTextField2.setText(null);
            customerInfo = null;
        }
}//GEN-LAST:event_jTextField1KeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JCustomerFinder finder = JCustomerFinder.getCustomerFinder(this, dlCustomers);
        finder.setVisible(true);
        customerInfo = finder.getSelectedCustomer();
        if (customerInfo != null) {
            try {
                jTextField2.setText(customerInfo.toString());
                jTextField1.setText(customerInfo.getSearchkey());
                jButton2.setVisible(true);
            //load();
            } catch (Exception e) {
                MessageInf msg = new MessageInf(MessageInf.SGN_WARNING, AppLocal.getIntString("message.cannotfindcustomer"), e);
                msg.show(this);
            }
        }
}//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            Minusage usage = (Minusage) jComboBox1.getSelectedItem();
            if(usage!=null){
            String minusageid = usage.getid();
            String memberid = customerInfo.getId();
            Object[] obj = (Object[]) new StaticSentence(m_App.getSession(), "SELECT ID FROM MEMMINUSAGE WHERE MEMNO=? AND USAGETYPE=?", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.STRING}), new SerializerReadBasic(new Datas[]{Datas.STRING})).find(new Object[]{memberid, minusageid});
            if (obj != null) {
                if (obj[0] != null) {
                    sendStopRequestForMinUsage(obj[0].toString());
                }
            }
            }else{
                JOptionPane.showMessageDialog(this, "Select Usage type", null, JOptionPane.PLAIN_MESSAGE);
            }

        } catch (Exception e) {
            //JOptionPane.showMessageDialog(this, "Select Usage type", null, JOptionPane.PLAIN_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    public String getTitle() {
        return "Stop Minimum Usage";
    }

    public void activate() throws BasicException {
        loadData();

    }

    public boolean deactivate() {
        return true;
    }

    public JComponent getComponent() {
        return this;
    }

    public void init(AppView app) throws BeanFactoryException {
        m_App = app;
        dlCustomers = (DataLogicCustomers) app.getBean("com.openbravo.pos.customers.DataLogicCustomersCreate");
        dmang = (DataLogicFacilities) app.getBean("com.openbravo.pos.clubmang.DataLogicFacilitiesCreate");

    }

    public Object getBean() {
        return this;
    }

    private void loadData() throws BasicException {
        jButton2.setVisible(false);
        jTextField1.setText(null);
        jTextField2.setText(null);
        List list = dmang.getMinUsage();
        minusagetypemodel = new ComboBoxValModel(list);
        jComboBox1.setModel(minusagetypemodel);
    }    

    public void sendStopRequestForMinUsage(final String id) {
        try {
            if (JOptionPane.showConfirmDialog(this, "Are you sure you want to stop the Minimum usage for this member ", null, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                Transaction t = new Transaction(m_App.getSession()) {

                    @Override
                    protected Object transact() throws BasicException {
                        Object[] Values = new Object[]{UUID.randomUUID().toString(), id, 5, new Date(), m_App.getAppUserView().getUser().getName(), new Date()};
                        insertIntoFacilityManager(Values);
                        return null;
                    }
                };
                t.execute();
                JOptionPane.showMessageDialog(this, "The request is sent for processing", null, JOptionPane.PLAIN_MESSAGE);
                loadData();
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void insertIntoFacilityManager(Object[] val) throws BasicException {

        new PreparedSentence(m_App.getSession(), "INSERT INTO FACILITYMANAGER(ID,MFUID,TYPE_,FROM_,INITIATEDBY,INITIATEDDATE) VALUES(?,?,?,?,?,?)", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.STRING, Datas.INT, Datas.TIMESTAMP, Datas.STRING, Datas.TIMESTAMP})).exec(val);
        //updatememminusage((String) val[1],(String) val[0]);
    }
    public void updatememminusage(String id,String facmanref) throws BasicException{
         new PreparedSentence(m_App.getSession()
                   ,"UPDATE MEMMINUSAGE SET FACMANREF=? WHERE ID=?"
                   ,new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.STRING})
                   ).exec(new Object[]{facmanref,id});
    }
}
