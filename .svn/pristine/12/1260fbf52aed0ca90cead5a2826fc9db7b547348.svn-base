/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ProfileEditorRequests.java
 *
 * Created on Oct 4, 2009, 12:35:19 PM
 */

package com.openbravo.pos.clubmang;

import com.openbravo.basic.BasicException;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.BeanFactoryApp;
import com.openbravo.pos.forms.BeanFactoryException;
import com.openbravo.pos.forms.JPanelView;
import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import javax.swing.JComponent;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author swathi
 */
public class ProfileEditorRequests extends javax.swing.JPanel implements JPanelView,BeanFactoryApp{

    /** Creates new form ProfileEditorRequests */
    private ProfileEditReqTableModel preqmodel;
    private AppView m_App;
    private List lablelist;
    private List olddatalist;
    private List newdatalist;
    public ProfileEditorRequests() {
        initComponents();
    }

    public String getTitle() {
        return null;
    }

    public void activate() throws BasicException {
        preqmodel=ProfileEditReqTableModel.loadData(m_App);
        jTable1.setModel(preqmodel.getTableModel());
    }

    public boolean deactivate() {
        return true;
    }

    public JComponent getComponent() {
       return this;
    }

    public void init(AppView app) throws BeanFactoryException {
          m_App=app;
    }

    public Object getBean() {
        return this;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 =  new javax.swing.JTable(){public Component prepareRenderer(TableCellRenderer renderer,
            int rowIndex, int vColIndex) {
            Component c = super.prepareRenderer(renderer, rowIndex, vColIndex);
            if (c instanceof JComponent) {
                JComponent jc = (JComponent)c;
                jc.setToolTipText(String.valueOf(getValueAt(rowIndex, vColIndex)));

                if (rowIndex % 2 == 0 && !isCellSelected(rowIndex, vColIndex)) {
                    jc.setBackground(Color.cyan);
                }
                else {
                    jc.setBackground(Color.white);
                }
                if(isCellSelected(rowIndex, vColIndex))
                jc.setBackground(Color.lightGray);
            }
            return c;
        }};
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();

        jLabel1.setText("List Of Profile Edit Request :");
        jLabel1.setName("jLabel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        jSeparator1.setName("jSeparator1"); // NOI18N

        jButton1.setText("Detail");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(38, 38, 38)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jSeparator1))))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(173, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         int row=jTable1.getSelectedRow();
         if(row>=0){
             List<Dependents> list=new ArrayList<Dependents>();
             lablelist=new ArrayList();
             olddatalist=new ArrayList();
             newdatalist=new ArrayList();
             List allow=new ArrayList();
            /* List deplist=new ArrayList();
             List depidlist=new ArrayList();
             List lablelist1=new ArrayList();
             List olddatalist1=new ArrayList();
             List newdatalist1=new ArrayList();
             List<Boolean> allow1=new ArrayList();*/
             ProfileEditReqTableModel.RequestLine rline =preqmodel.getProfileEditRequestList().get(row);
             String data=rline.getChangedData();
             if(data!=null){
             String[] darray=data.split(" # ");
             Dependents de1;
             for(int i=0;i<darray.length;i++){
                String line=darray[i];
               // if(!line.startsWith("dep :")){
                    String[] line1=line.split(" : ");
                    de1=new Dependents(null, null, line1[0], true, line1[1], line1[2]);
                    /*lablelist.add(line1[0]);
                    if(line1[1]==null || line1[1].equals("null"))
                        olddatalist.add("");
                    else
                        olddatalist.add(line1[1]);
                    if(line1[2]==null || line1[2].equals("null"))
                        newdatalist.add("");
                    else
                        newdatalist.add(line1[2]);
                    allow.add(true);*/
                    list.add(de1);
                //}
                }
             }
             String data1=rline.getDepData();
             if(data1!=null){
             String[] darray1=data1.split(" # ");
             for(int i=0;i<darray1.length;i++){
                String line=darray1[i];
                String[] line1=line.split(" : ");
                  if(line1[0].equals("new")){
                      String id=UUID.randomUUID().toString();
                      List<DependentsData> dlist=new ArrayList<DependentsData>();
                      DependentsData ddata=new DependentsData("Name", "", line1[1], id, true);
                      dlist.add(ddata);
                      DependentsData ddata1=new DependentsData("Type", "", line1[2], id, true);
                      dlist.add(ddata1);
                      DependentsData ddata2=new DependentsData("DOB", "", line1[3], id, true);
                      dlist.add(ddata2);
                      DependentsData ddata3=new DependentsData("DOJ", "", line1[4], id, true);
                      dlist.add(ddata3);
                      Dependents d1=new Dependents(line1[1], id, "New Entry", true,dlist );
                      list.add(d1);
                    /*  allow1.add(true);
                      deplist.add(line1[1]);
                      depidlist.add(null);
                      olddatalist1.add("");
                      newdatalist1.add(line1[1]);
                      lablelist1.add("Name");
                      allow1.add(true);
                      depidlist.add(null);
                      deplist.add(line1[1]);
                      olddatalist1.add("");
                      newdatalist1.add(line1[2]);
                      lablelist1.add("Type");
                      allow1.add(true);
                      depidlist.add(null);
                      deplist.add(line1[1]);
                      olddatalist1.add("");
                      newdatalist1.add(line1[3]);
                      lablelist1.add("DOB");
                      allow1.add(true);
                      depidlist.add(null);
                      deplist.add(line1[1]);
                      olddatalist1.add("");
                      newdatalist1.add(line1[4]);
                      lablelist1.add("DOJ");*/
                      //allow1.add(true);
                  }else if(line1[0].equals("edited")){
                      List<DependentsData> dlist=new ArrayList<DependentsData>();
                      String id=null;
                      id=line1[1];
                      String name=line1[3];
                      for(int k=2;k<line1.length;k++){
                         if(!(line1[k+1]==null && line1[k+2]==null) &&( line1[k+1]==null || line1[k+2]==null || !line1[k+1].toString().equals(line1[k+2]))){
                         /*allow1.add(true);
                         deplist.add(line1[3]);
                         depidlist.add(line1[2]);
                         lablelist1.add(line1[k]);*/
                         
                         String label=line1[k],old=null,newdata=null;
                         k++;
                         if(line1[k]==null || line1[k].equals("null"))
                             old="";
                         else
                             old=line1[k];
                         k++;
                         if(line1[k]==null || line1[k].equals("null"))
                            newdata="";
                         else
                            newdata=line1[k];
                          DependentsData ddata=new DependentsData(label, old, newdata, id, true);
                          dlist.add(ddata);
                         }else{
                           k+=2;
                         }
                      }
                      if(dlist.size()>0){
                         Dependents d1=new Dependents(name, id, "Edited", true,dlist );
                         list.add(d1);
                      }

                  }else if(line1[0].equals("deactivate")){
                      List<DependentsData> dlist=new ArrayList<DependentsData>();
                      Dependents d1=new Dependents(line1[1], line1[2], "Request for Deactivation", true,dlist );
                         list.add(d1);
                         /*allow1.add(true);
                         deplist.add(line1[1]);
                         deplist.add(line1[2]);
                         lablelist1.add("Deactivated the dependent");
                         olddatalist1.add("");
                         newdatalist1.add("");*/
                  }
                   /* lablelist.add(line1[0]);
                    if(line1[1]==null || line1[1].equals("null"))
                        olddatalist.add("");
                    else
                        olddatalist.add(line1[1]);
                    if(line1[2]==null || line1[2].equals("null"))
                        newdatalist.add("");
                    else
                        newdatalist.add(line1[2]);
                    allow.add(true);*/
                //}
                }
             }
             ProfileEditDetail pedetail=ProfileEditDetail.getDialog(this,m_App);
             pedetail.showDialog(lablelist,olddatalist,newdatalist,allow,rline.getMemID(),list);
            }
         

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables



}
