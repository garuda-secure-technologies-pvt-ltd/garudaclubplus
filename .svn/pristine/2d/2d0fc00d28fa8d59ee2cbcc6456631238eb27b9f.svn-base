/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LoginSettings.java
 *
 * Created on Feb 11, 2009, 10:51:14 AM
 */

package com.openbravo.pos.panels;

import com.openbravo.basic.BasicException;
import com.openbravo.data.gui.ComboBoxValModel;
import com.openbravo.data.loader.Datas;
import com.openbravo.data.loader.SentenceList;
import com.openbravo.data.loader.SerializerReadBasic;
import com.openbravo.data.loader.SerializerWriteBasic;
import com.openbravo.data.loader.SerializerWriteString;
import com.openbravo.data.loader.StaticSentence;
import com.openbravo.pos.admin.RoleInfo;
import com.openbravo.pos.forms.AppUser;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.BeanFactoryApp;
import com.openbravo.pos.forms.DataLogicSales;
import com.openbravo.pos.forms.DataLogicSystem;
import com.openbravo.pos.forms.JPanelView;
import javax.swing.JComponent;
import com.openbravo.pos.forms.BeanFactoryException;
import java.util.ArrayList;
/**
 *
 * @author swathi
 */
public class LoginSettings  extends javax.swing.JPanel implements JPanelView, BeanFactoryApp  {

     private DataLogicSales m_dlSales;
     private AppView m_App;
    private DataLogicSystem m_dlSystem;
    private ComboBoxValModel m_user;
     private SentenceList m_userlist;

    /** Creates new form LoginSettings */
    public LoginSettings() {
        initComponents();
    }
     public void init(AppView app) throws BeanFactoryException {

        m_App = app;
        m_dlSystem = (DataLogicSystem) m_App.getBean("com.openbravo.pos.forms.DataLogicSystemCreate");
        m_dlSales = (DataLogicSales) m_App.getBean("com.openbravo.pos.forms.DataLogicSalesCreate");
      /*  java.util.List people=new ArrayList();
        java.util.List people1=new ArrayList();
        java.util.List roles=new ArrayList();
        try{
            roles=m_dlSales.getRoleList().list();
         people = m_dlSystem.listPeopleVisible();
         String roleid="";
         int deli=people.size();
         for(int i=0;i<people.size();i++){
            AppUser name=(AppUser)people.get(i);
             Object[] obj=(Object[])   new StaticSentence(m_App.getSession()
                        , "SELECT NAME FROM ROLES WHERE ID = ? "
                       ,SerializerWriteString.INSTANCE
                       ,new SerializerReadBasic(new Datas[] { Datas.STRING})).find(name.getRole());
             if(obj!=null && obj[0]!=null)
                 roleid=obj[0].toString();
            for(int j=0;j<roles.size();j++)
            {
                String dels=name.getRole();
                String rname=roles.get(j).toString();
               if( m_App.getAppUserView().getUser().hasPermission(rname))
               {
                   if(rname.equals(roleid))
                    people1.add(name.getName());
               }
            }
        }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
         m_user = new ComboBoxValModel(people1);*/
     }
       public Object getBean() {
        return this;
    }

    public JComponent getComponent() {
        return this;
    }

   public String getTitle() {
        return "Login Reset";
    }

    public void activate() throws BasicException {
        loadData();
    }
 private void loadData() throws BasicException {
       java.util.List<AppUser> people=new ArrayList<AppUser>();
       java.util.List<AppUser> people1=new ArrayList<AppUser>();
       java.util.List<RoleInfo> roles=new ArrayList<RoleInfo>();
        try{
           roles=m_dlSales.getRoleList().list();
           people = m_dlSystem.listPeopleVisible();
         for(int i=0;i<people.size();i++){
            AppUser name=(AppUser)people.get(i);
             
            for(int j=0;j<roles.size();j++)
            {
                String rname=roles.get(j).getName();
                String rid=roles.get(j).getID();
               if( m_App.getAppUserView().getUser().hasPermission(rname))
               {
                   if(rid.equals(name.getRole()))
                    people1.add(name);
               }
            }
        }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
         m_user = new ComboBoxValModel(people1);
    userlist.setModel(m_user);
    userlist.setSelectedIndex(-1);

 }
  public boolean deactivate() {
        // se me debe permitir cancelar el deactivate
        return true;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        userlist = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();

        jLabel1.setText("User   :");

        jButton1.setText("Allow");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userlist, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(293, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(userlist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(401, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        AppUser name=(AppUser)userlist.getSelectedItem();
        try{
          new StaticSentence(m_App.getSession()
                , "UPDATE PEOPLE SET LOGINTIME = ?,IPADDR=? WHERE ID = ?"
                ,new SerializerWriteBasic(new Datas[]{Datas.NULL,Datas.NULL,Datas.STRING})).exec(new Object[] {null,null,name.getId()});

        }
        catch(Exception e){
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox userlist;
    // End of variables declaration//GEN-END:variables

}
