/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UpdateCardNumber.java
 *
 * Created on 18-Oct-2011, 10:36:10
 */
package com.openbravo.pos.clubmang;

import com.openbravo.basic.BasicException;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.BeanFactoryApp;
import com.openbravo.pos.forms.BeanFactoryException;
import com.openbravo.pos.forms.JPanelView;
import java.sql.Connection;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import com.openbravo.data.gui.MessageInf;
import com.openbravo.data.loader.Datas;
import com.openbravo.data.loader.PreparedSentence;
import com.openbravo.data.loader.SerializerReadString;
import com.openbravo.data.loader.SerializerWriteBasic;
import com.openbravo.data.loader.SerializerWriteString;
import com.openbravo.pos.customers.CustomerInfo;
import com.openbravo.pos.customers.DataLogicCustomers;
import com.openbravo.pos.customers.JCustomerFinder;
import com.openbravo.pos.forms.AppLocal;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class UpdateCardNumber extends javax.swing.JPanel implements JPanelView, BeanFactoryApp {

    private AppView m_App;
    private DataLogicFacilities dmang;
    private DataLogicCustomers dlCustomers;
    private CustomerInfo customerInfo;
    private String msz = "false";
    private String cardnum;
    private boolean sp;

    public UpdateCardNumber() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        mno = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        mname = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jButton4 = new javax.swing.JButton();

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("All");
        jRadioButton1.setName("jRadioButton1"); // NOI18N
        jRadioButton1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                AllStateChanged(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Individual");
        jRadioButton2.setName("jRadioButton2"); // NOI18N
        jRadioButton2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                IndividualStateChanged(evt);
            }
        });

        jButton1.setText("Update");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Member No");
        jLabel1.setName("jLabel1"); // NOI18N

        mno.setName("mno"); // NOI18N
        mno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                memnoKeyPressed(evt);
            }
        });

        jButton2.setText("Update");
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("MemberName");
        jLabel2.setName("jLabel2"); // NOI18N

        mname.setName("mname"); // NOI18N

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/kdmconfig32.png"))); // NOI18N
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButton3);
        jRadioButton3.setText("Member");
        jRadioButton3.setName("jRadioButton3"); // NOI18N
        jRadioButton3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                memberItenStateChanged(evt);
            }
        });

        buttonGroup2.add(jRadioButton4);
        jRadioButton4.setText("Spouse");
        jRadioButton4.setName("jRadioButton4"); // NOI18N
        jRadioButton4.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spouseItemStateChanged(evt);
            }
        });

        jButton4.setText("jButton4");
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton2))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton1)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton4))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(37, 37, 37)
                                            .addComponent(mname, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(mno, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(112, 112, 112)))
                            .addComponent(jButton2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(jRadioButton3)
                        .addGap(58, 58, 58)
                        .addComponent(jRadioButton4)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jRadioButton1)
                                    .addComponent(jButton1)
                                    .addComponent(jButton4))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jRadioButton2)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(mname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(141, 141, 141)
                                .addComponent(jButton3))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButton4)
                            .addComponent(jRadioButton3))))
                .addContainerGap(101, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void AllStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_AllStateChanged
        // TODO add your handling code here:
        if (jRadioButton1.isSelected()) {
            jButton1.setVisible(true);
            jButton2.setVisible(false);
            jButton3.setVisible(false);
            jLabel1.setVisible(false);
            jLabel2.setVisible(false);
            mno.setVisible(false);
            mname.setVisible(false);

        }
    }//GEN-LAST:event_AllStateChanged

    private void IndividualStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_IndividualStateChanged
        // TODO add your handling code here:
        if (jRadioButton2.isSelected()) {
            jButton1.setVisible(false);
            jButton2.setVisible(true);
            jButton3.setVisible(true);
            jLabel1.setVisible(true);
            jLabel2.setVisible(true);
            mno.setVisible(true);
            mname.setVisible(true);
            mno.setText(null);
            mname.setText(null);
        }
    }//GEN-LAST:event_IndividualStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String res = null;
        if (JOptionPane.showConfirmDialog(this, "Do you want update card number to all members", "Confirm card updation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            try {
                res = updateAll();
                if ("success".equals(res)) {
                    JOptionPane.showMessageDialog(this, "Card Numbers Updated successfully.");
                    jButton1.setVisible(false);
                }
            } catch (BasicException ex) {
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Card Number Not Updated");
            jButton1.setVisible(false);
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String res = null;
        try {
            if (customerInfo != null && customerInfo.getId() != null) {
                if (JOptionPane.showConfirmDialog(this, "Do you want to update cardnumber to this member", "Confirm cardnumber updation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                    String search = customerInfo.getSearchkey();
                    res = updateIndividual(customerInfo);
                    if ("success".equals(res)) {
                        JOptionPane.showMessageDialog(this, "Card Number Updated successfully.");
                        jButton2.setVisible(true);
                        jButton3.setVisible(true);
                        jLabel1.setVisible(true);
                        jLabel2.setVisible(true);
                        mno.setVisible(true);
                        mname.setVisible(true);
                        mno.setText(null);
                        mname.setText(null);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Card Number Not Updated");
                    jButton2.setVisible(false);
                    jButton3.setVisible(false);
                    jLabel1.setVisible(false);
                    jLabel2.setVisible(false);
                    mno.setVisible(false);
                    mname.setVisible(false);
                }
                customerInfo = null;
            } else {
                JOptionPane.showMessageDialog(this, "Select member to update card number");
            }



        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        JCustomerFinder finder = JCustomerFinder.getCustomerFinder(this, dlCustomers);
        finder.setVisible(true);
        customerInfo = finder.getSelectedCustomer();
        if (customerInfo != null) {
            try {
                mname.setText(customerInfo.toString());
                mno.setText(customerInfo.getSearchkey());
            } catch (Exception e) {
                MessageInf msg = new MessageInf(MessageInf.SGN_WARNING, AppLocal.getIntString("message.cannotfindcustomer"), e);
                msg.show(this);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void memnoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_memnoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyText(evt.getKeyCode()).equals("Enter")) {

            try {
                Object[] obj = dmang.getMamberbySkey(mno.getText().toUpperCase());

                if (obj == null) {
                    JOptionPane.showMessageDialog(this, AppLocal.getIntString("message.custnotpresent"), AppLocal.getIntString("message.custtitle"), JOptionPane.WARNING_MESSAGE);
                } else {
                    customerInfo = new CustomerInfo(obj[0].toString());
                    customerInfo.setName(obj[1].toString());
                    customerInfo.setSearchkey(mno.getText().toUpperCase());
                    mname.setText(obj[1].toString());
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            mname.setText(null);
            customerInfo = null;
        }

    }//GEN-LAST:event_memnoKeyPressed

    private void memberItenStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_memberItenStateChanged
        // TODO add your handling code here:
        if (jRadioButton3.isSelected()) {
            jRadioButton1.setVisible(true);
            jRadioButton2.setVisible(true);
            jButton1.setVisible(false);
            jButton2.setVisible(false);
            jButton3.setVisible(false);
            jLabel1.setVisible(false);
            jLabel2.setVisible(false);
            mno.setVisible(false);
            mname.setVisible(false);

        }
    }//GEN-LAST:event_memberItenStateChanged

    private void spouseItemStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spouseItemStateChanged
        // TODO add your handling code here:
        if (jRadioButton4.isSelected()) {
            jLabel1.setVisible(true);
            jButton2.setVisible(true);
            mno.setVisible(true);
            mno.setText(null);
            jRadioButton1.setVisible(false);
            jRadioButton2.setVisible(false);
            jButton1.setVisible(false);
            jButton3.setVisible(false);
            jLabel2.setVisible(false);
            mname.setVisible(false);
            sp = true;
        }
    }//GEN-LAST:event_spouseItemStateChanged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Connection con = EsslDBConnection.getEsslDBConnection(m_App);
        String memno = null;
        String depname;
        String sear;
        //int i = 0;
        String dno;
        String type;
        String type1;
//        try{
//             if (con != null) {
//                List<CustomerInfo> custinfo = dlCustomers.getCustomerList1().list();
//                for (CustomerInfo c : custinfo) {
////                    System.out.println("Connection established");
//                    Statement st = con.createStatement();
//                    ResultSet rs1 = st.executeQuery("select memnumber,memname,cardnumbermain,memtype from MemberMasters where memnumber like '" + c.getSearchkey() + " - M' and memtype!='Z'");
//                    while (rs1.next()) {
//                            memno = rs1.getString(1);
//                            type1 = rs1.getString(4);
//                            //sear = cin.getSearchkey()+" - M";
//                            depname = rs1.getString(2);
//                            cardnum = rs1.getString(3);
//                            //String searchkey = memno.substring(0, memno.length() - 4);
//                            if (type1.equals("M")) {
//                                updateCard(c.getId(), cardnum);
//                            }
//                        }
//                        i = 0;
//                        msz = "success";
//                    }
//
//            }
//        }catch(Exception e){
//            e.printStackTrace();
//        }
        try {
            Statement st = con.createStatement();
            Statement st1;
            Statement st2;
            ResultSet rs1;
            String str;
            String str1;
            String str2;
            boolean bool=true;
            List<String> list = new ArrayList<String>();
            while(bool){
            ResultSet rs = st.executeQuery("select nor,dc from (select count(id) as nor,devicestaffcode as dc from staffbiometricdetails group by devicestaffcode) as jshfkjgh where nor>1");
            while (rs.next()) {
                str = rs.getString(2);
                list.add(str);
            }
            st1 = con.createStatement();
            if(list.size()<=0){
                bool = false;
            }
            for (int i = 0; i < list.size(); i++) {
                rs1 = st.executeQuery("select id,devicestaffcode from staffbiometricdetails where devicestaffcode='" + list.get(i) + "'");
                 while (rs1.next()) {
                    str1 = rs1.getString(1);
                    str2 = rs1.getString(2);
                    st2 = con.createStatement();
                    int j = st2.executeUpdate("delete from staffbiometricdetails where id='" + str1 + "'");
                    System.out.println(i + " : " + str2);
                    break;
                }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        //msz = "";

//        try {
//            String memno = null;
//            String depname;
//            String sear;
//            int i = 0;
//            String dno;
//            String type;
//            String type1;
//            List<CustomerInfo> custinfo = dlCustomers.getCustomerList().list();
//            if (con != null && custinfo != null) {
//                for (CustomerInfo cin : custinfo) {
//                    try {
//                        Statement st = con.createStatement();
//                        ResultSet rs = st.executeQuery("select memnumber,memname,cardnumbermain,memtype from MemberMasters where memnumber like '" + cin.getSearchkey() + "%' and memtype!='Z';");
//                        //ResultSet rs = st.executeQuery("select memnumber,memname,cardnumbermain,memtype from MemberMasters where memnumber like 'A-0047%' and memtype!='Z';");
//                        while (rs.next()) {
//                            memno = rs.getString(1);
//                            type1 = rs.getString(4);
//                            //sear = cin.getSearchkey()+" - M";
//                            depname = rs.getString(2);
//                            cardnum = rs.getString(3);
//                            //String searchkey = memno.substring(0, memno.length() - 4);
//                            if (!type1.equals("M")) {
//                                if (type1.equals("S")) {
//                                    type = "Spouse";
//                                } else {
//                                    type = "Son";
//                                }
//                                dno = cin.getSearchkey() + "\\" + i;
//                                updatSpouseAndDep(cin.getId(), cardnum, depname, type, dno);
//                                i++;
//                            }
//                        }
//                        i = 0;
//                    } catch (Exception e) {
//                        System.out.println(cin.getSearchkey() + " : " + cin.getName());
//                    }
//                }
//            }
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
    }//GEN-LAST:event_jButton4ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JTextField mname;
    private javax.swing.JTextField mno;
    // End of variables declaration//GEN-END:variables

    public String getTitle() {
        return "Update Card Number";
    }

    public void activate() throws BasicException {
        jButton3.setVisible(false);
       //jButton4.setVisible(false);
        jButton4.setText("Update All Dependents");
       loadData();
    }

    public boolean deactivate() {
        return true;
    }

    public JComponent getComponent() {
        return this;
    }

    public void init(AppView app) throws BeanFactoryException {
        m_App = app;
        dmang = (DataLogicFacilities) app.getBean("com.openbravo.pos.clubmang.DataLogicFacilitiesCreate");
        dlCustomers = (DataLogicCustomers) app.getBean("com.openbravo.pos.customers.DataLogicCustomersCreate");
    }

    public Object getBean() {
        return this;
    }

    private void loadData() throws BasicException {
        jRadioButton1.setVisible(false);
        jRadioButton2.setVisible(false);
        jButton1.setVisible(false);
        jButton2.setVisible(false);
        jButton3.setVisible(false);
        jLabel1.setVisible(false);
        jLabel2.setVisible(false);
        mno.setVisible(false);
        mname.setVisible(false);
        reset();
    }

    private void reset() {
        mno.setText(null);
        mname.setText(null);

    }

    private String updateAll() throws BasicException {
        Connection con = EsslDBConnection.getEsslDBConnection(m_App);
        String memno = null;
        String depname;
        String sear;
        int i = 0;
        String dno;
        String type;
        String type1;
        //msz = "";
        try {
            if (con != null) {
                List<CustomerInfo> custinfo = dlCustomers.getCustomerList1().list();
                for (CustomerInfo c : custinfo) {
                    System.out.println("Connection established");
                    Statement st = con.createStatement();
                    ResultSet rs1 = st.executeQuery("select memnumber,memname,cardnumbermain,memtype from MemberMasters where memnumber like '" + c.getSearchkey() + "%' and memtype!='Z' and active = 1");
                    while (rs1.next()) {
                            memno = rs1.getString(1);
                            type1 = rs1.getString(4);
                            //sear = cin.getSearchkey()+" - M";
                            depname = rs1.getString(2);
                            cardnum = rs1.getString(3);
                            //String searchkey = memno.substring(0, memno.length() - 4);
                            if (type1.equals("M")) {
                                updateCard(c.getId(), cardnum);
                            } else {
                                if (type1.equals("S")) {
                                    type = "Spouse";
                                } else {
                                    type = "Son";
                                }
                                dno = c.getSearchkey() + "\\" + i;
                                updatSpouseAndDep(c.getId(), cardnum, depname, type, dno);
                                i++;
                            }
                        }
                        i = 0;
                        msz = "success";
                    }
               
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Connection To Essl DB Failed", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        return msz;
    }

    private int updateCard(String id, String cardnum) {
        int c = 0;
        try {
            Object obj[] = new Object[]{cardnum, id};
            c = new PreparedSentence(m_App.getSession(), "UPDATE CUSTOMERS SET CARD=? WHERE ID=?", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.STRING})).exec(obj);

        } catch (BasicException ex) {
            JOptionPane.showMessageDialog(this, "Error in Updating Card Number", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();

        }
        return c;
    }

    private void updatSpouseAndDep(String memid, String cardnum, String depname, String type, String dno) throws BasicException {

        Object obj[] = new Object[]{UUID.randomUUID().toString(), true, memid, depname, type, dno, m_App.getAppUserView().getUser().getId(), cardnum};
        new PreparedSentence(m_App.getSession(), "INSERT INTO MEMDEPENDENT(ID,ACTIVE,MEMNO,DNAME,DTYPE,DMEMNO,CREATEDBY,CARD) values(?,?,?,?,?,?,?,?)", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.BOOLEAN, Datas.STRING, Datas.STRING, Datas.STRING, Datas.STRING, Datas.STRING, Datas.STRING})).exec(obj);


    }

    private String updateIndividual(CustomerInfo cinfo) throws BasicException {
        Connection con = EsslDBConnection.getEsslDBConnection(m_App);
        String memno = null;
        String depname;
        String sear;
        int i = 0;
        String dno;
        String type;
        String type1;

        try {
            if (con != null) {
                System.out.println("Connection established");
                Statement st = con.createStatement();
                //ResultSet rs = st.executeQuery("select cardnumbermain from MemberMasters where memnumber='" + cinfo.getSearchkey() + " - M'");
                String str="select memnumber,memname,cardnumbermain,memtype from MemberMasters where memnumber like '" + cinfo.getSearchkey() + "%' and memtype!='Z' order by memnumber";
                ResultSet rs1 = st.executeQuery(str);
                System.out.println(rs1.getRow());             
                    while (rs1.next()) {
                        memno = rs1.getString(1);
                        type1 = rs1.getString(4);
                        //sear = cin.getSearchkey()+" - M";
                        depname = rs1.getString(2);
                        cardnum = rs1.getString(3);
                        //String searchkey = memno.substring(0, memno.length() - 4);
                        if (type1.equals("M")) {
                            updateCard(cinfo.getId(), cardnum);
                        } else {
                            if (type1.equals("S")) {
                                type = "Spouse";
                            } else {
                                type = "Son";
                            }
                            dno = cinfo.getSearchkey() + "\\" + i;
                            updatSpouseAndDep(cinfo.getId(), cardnum, depname, type, dno);
                            i++;
                        }
                    }
                    i = 0;
                    msz = "success";
                

            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Connection To Essl DB Failed", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }

        return msz;
    }

    private String updateSpouse(String search) {
        Connection con = EsslDBConnection.getEsslDBConnection(m_App);

        try {
            if (con != null) {
                System.out.println("Connection established");
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("select cardnumbermain from MemberMasters where memnumber='" + search + " - S' and active = 1");
                if (rs.next()) {
                    cardnum = rs.getString(1);
                    int c = updateSpouseCard(search, cardnum);
                    if (c > 0) {
                        msz = "success";
                    } else {
                        JOptionPane.showMessageDialog(this, "Member-Spouse not Present");
                        msz = "fail";
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Member Spouse not present in Essl DB");
                    mno.setText(null);
                    mname.setText(null);
                    msz = "fail";
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Connection To Essl DB Failed", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        return msz;
    }

    private int updateSpouseCard(String search, String cardnum) {
        int c = 0;
        try {
            Object id = new PreparedSentence(m_App.getSession(), "SELECT ID FROM CUSTOMERS WHERE SEARCHKEY=?", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).find(search);
            if (id == null) {
                JOptionPane.showMessageDialog(this, AppLocal.getIntString("message.custnotpresent"), AppLocal.getIntString("message.custtitle"), JOptionPane.WARNING_MESSAGE);

            } else {
                Object[] obj = new Object[]{cardnum, id};
                c = new PreparedSentence(m_App.getSession(), "UPDATE MEMDEPENDENT SET CARD=? WHERE MEMNO=? AND DTYPE='SPOUSE'", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.STRING})).exec(obj);
            }
        } catch (BasicException ex) {
            JOptionPane.showMessageDialog(this, "Error in Updating Card Number", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        return c;
    }
}