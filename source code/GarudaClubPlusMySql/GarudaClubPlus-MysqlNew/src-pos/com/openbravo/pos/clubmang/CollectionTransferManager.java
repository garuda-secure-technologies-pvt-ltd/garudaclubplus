/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CollectionTransferManager.java
 *
 * Created on Oct 27, 2009, 10:33:28 AM
 */

package com.openbravo.pos.clubmang;

import com.openbravo.basic.BasicException;
import com.openbravo.data.loader.Datas;
import com.openbravo.data.loader.PreparedSentence;
import com.openbravo.data.loader.SerializerWriteBasic;
import com.openbravo.pos.forms.AppUser;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.BeanFactoryApp;
import com.openbravo.pos.forms.BeanFactoryException;
import com.openbravo.pos.forms.DataLogicSystem;
import com.openbravo.pos.forms.JPanelView;
import java.awt.Color;
import java.awt.Component;
import java.util.Date;
import java.util.UUID;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author swathi
 */
public class CollectionTransferManager extends javax.swing.JPanel implements JPanelView,BeanFactoryApp{

    /** Creates new form CollectionTransferManager */
    private CollTransferManagerTableModel ctModel;
    private DataLogicFacilities dlfac;
     private DataLogicSystem dlsys;
    private AppView m_App;
    public CollectionTransferManager() {
        initComponents();
    }
    public void init(AppView app) throws BeanFactoryException {
        dlfac=(DataLogicFacilities) app.getBean("com.openbravo.pos.clubmang.DataLogicFacilitiesCreate");
        dlsys=(DataLogicSystem) app.getBean("com.openbravo.pos.forms.DataLogicSystemCreate");
        m_App=app;
    }
    public String getTitle() {
       return null;
    }

    public void activate() throws BasicException {
        loadData();
    }
    private void loadData() throws BasicException{
      ctModel=CollTransferManagerTableModel.loadInstance(m_App);
      jTable1.setModel(ctModel.getTableModel());
      //Column
       TableColumnModel jColumns = jTable1.getColumnModel();
        jColumns.getColumn(0).setPreferredWidth(80);
        jColumns.getColumn(0).setResizable(false);
        jColumns.getColumn(1).setPreferredWidth(10);
        jColumns.getColumn(1).setResizable(false);
        jColumns.getColumn(2).setPreferredWidth(10);
        jColumns.getColumn(2).setResizable(false);
        jColumns.getColumn(3).setPreferredWidth(60);
        jColumns.getColumn(3).setResizable(false);
        jColumns.getColumn(4).setPreferredWidth(40);
        jColumns.getColumn(4).setResizable(false);

    }

    public boolean deactivate() {
       return true;
    }

    public JComponent getComponent() {
        return this;
    }

    public Object getBean() {
        return this;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 =  new javax.swing.JTable(){public Component prepareRenderer(TableCellRenderer renderer,
            int rowIndex, int vColIndex) {
            Component c = super.prepareRenderer(renderer, rowIndex, vColIndex);
            if (c instanceof JComponent) {
                JComponent jc = (JComponent)c;
                jc.setToolTipText(String.valueOf(getValueAt(rowIndex, vColIndex)));

                if (rowIndex % 2 == 0 && !isCellSelected(rowIndex, vColIndex)) {
                    jc.setBackground(Color.lightGray);
                }
                else {
                    jc.setBackground(Color.white);
                }
                if(isCellSelected(rowIndex, vColIndex))
                jc.setBackground(Color.cyan);
            }
            return c;
        }};
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Receive");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("withdraw");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Detail");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)))
                .addGap(32, 32, 32))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(222, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         // TODO add your handling code here:
        try{
        int row=jTable1.getSelectedRow();
        String id=ctModel.getTableModel().getValueAt(row,6).toString();
        CollectionTransferDetail ctdetail=CollectionTransferDetail.getDialog(this,m_App);
        ctdetail.showDialog(id);
        }
        catch(Exception e){
            e.printStackTrace();
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
          int row=jTable1.getSelectedRow();
          Date d=new Date();
         String id=ctModel.getTableModel().getValueAt(row, 6).toString();
         Double cashtotal=Double.parseDouble(ctModel.getTableModel().getValueAt(row, 1).toString());
         Double chequetotal=Double.parseDouble(ctModel.getTableModel().getValueAt(row, 2).toString());
         String sender=ctModel.getTableModel().getValueAt(row, 3).toString();
         String receiver=ctModel.getTableModel().getValueAt(row, 5).toString();
         Object chequedetail=ctModel.getTableModel().getValueAt(row, 7);

       int count= new PreparedSentence(m_App.getSession()
                , "UPDATE COLLECTIONTRANSFER SET RECEIVED = ? WHERE ID=? AND RECEIVER=? AND RECEIVED=FALSE"
                , new SerializerWriteBasic(new Datas[]{Datas.BOOLEAN,Datas.STRING,Datas.STRING})).exec(new Object[]{true,id,m_App.getAppUserView().getUser().getId()});
         if(count<=0){
                JOptionPane.showMessageDialog(this, "Only the Specified Receiver can receive it", "Error", JOptionPane.OK_OPTION);
          }else{
           if(chequedetail!=null){
              String[] chequeids=chequedetail.toString().split("#");
              for(int i=0;i<chequeids.length;i++){
                  dlfac.updatechequeholder(chequeids[i],m_App.getAppUserView().getUser().getId());

              }
           }
               String cnarrations="Cash transferred from "+sender+" to "+receiver;
               String cnarrationr="Cash Received from "+sender;
               String chnarrations="Cheque transferred from "+sender+" to "+receiver;
               String chnarrationr="Cheque Received from "+sender;
               String num= ctModel.getTableModel().getValueAt(row, 8).toString();
                  //ID,DATE,TRANSTYPE,TRANSREF,TRANSNO,AMOUNT,DUEDATE,ADJUSTED,CREATEDBY,COUNTER,NARRATION,ACCOUNTID,BALANCEAMOUNT,CLEARDATE,PAYMENTREF
               AppUser suser=dlfac.getnewuserdetail(dlsys, sender);
               String tid=UUID.randomUUID().toString();
              // String tidcheque=UUID.randomUUID().toString();
              if(cashtotal>0){
               Object[] cvalue=new Object[]{UUID.randomUUID().toString(),tid,null,d,"C","Cash handover",num,cashtotal,d,true,receiver,m_App.getProperties().getHost(),cnarrations,suser.getcashaccount(),0.0,d,"Contra",true};
                 dlfac.insertintoaccjoutnal2(cvalue);
               Object[] cvalue1=new Object[]{UUID.randomUUID().toString(),tid,null,d,"D","Cash handover",num,cashtotal,d,true,receiver,m_App.getProperties().getHost(),cnarrationr,m_App.getAppUserView().getUser().getcashaccount(),0.0,d,"Contra",true};
                 dlfac.insertintoaccjoutnal2(cvalue1);
              }
               if(chequetotal>0){
                Object[] chvalue=new Object[]{UUID.randomUUID().toString(),tid,null,d,"C","Cheque handover",num,chequetotal,d,true,receiver,m_App.getProperties().getHost(),chnarrations,suser.getchequeaccount(),0.0,d,"Contra",true};
                 dlfac.insertintoaccjoutnal2(chvalue);
               Object[] chvalue1=new Object[]{UUID.randomUUID().toString(),tid,null,d,"D","Cheque handover",num,chequetotal,d,true,receiver,m_App.getProperties().getHost(),chnarrationr,m_App.getAppUserView().getUser().getchequeaccount(),0.0,d,"Contra",true};
                 dlfac.insertintoaccjoutnal2(chvalue1);
               }

              loadData();
          }
        }
        catch(Exception e){
         e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         try{
          int row=jTable1.getSelectedRow();
          String id=ctModel.getTableModel().getValueAt(row, 6).toString();
          int count= new PreparedSentence(m_App.getSession()
                , "DELETE FROM COLLECTIONTRANSFER WHERE ID=? AND SENDER=? AND RECEIVED=FALSE "
                , new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.STRING})).exec(new Object[]{id,m_App.getAppUserView().getUser().getId()});
          if(count<=0){
                JOptionPane.showMessageDialog(this, "Only the Sender can withdraw", "Error", JOptionPane.OK_OPTION);
           }else
               loadData();
         }
        catch(Exception e){
         e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables



}
