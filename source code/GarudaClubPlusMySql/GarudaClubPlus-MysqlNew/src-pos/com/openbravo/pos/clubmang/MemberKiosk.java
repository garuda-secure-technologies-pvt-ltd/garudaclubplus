/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MemberKiosk.java
 *
 * Created on Mar 15, 2013, 3:17:31 PM
 */
package com.openbravo.pos.clubmang;
import com.openbravo.basic.BasicException;

import com.openbravo.beans.JCalendarDialog;
import com.openbravo.data.gui.JImageEditor;
import com.openbravo.data.gui.MessageInf;
import com.openbravo.data.loader.Datas;
import com.openbravo.data.loader.PreparedSentence;
import com.openbravo.data.loader.SerializerReadString;
import com.openbravo.data.loader.SerializerWriteBasic;
import com.openbravo.data.loader.SerializerWriteString;
import com.openbravo.data.loader.Session;
import com.openbravo.data.loader.StaticSentence;
import com.openbravo.data.loader.Transaction;
import com.openbravo.format.Formats;
import com.openbravo.pos.clubmang.PanelTableModel.AdvertizeInfo;
import com.openbravo.pos.clubmang.PanelTableModel.PanelTableInfo;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.BeanFactoryApp;
import com.openbravo.pos.forms.BeanFactoryException;
import com.openbravo.pos.forms.JPanelView;
import java.awt.Color;
import java.awt.Component;
import java.awt.Desktop;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableCellRenderer;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;
import org.apache.commons.io.FileUtils;

/**
 *
 * @author user
 */
public class MemberKiosk extends javax.swing.JPanel implements JPanelView,BeanFactoryApp{
    private Session s;
    private AppView m_App ;
    
    private PanelTableModel panelTable , AddInfo;
    private PanelTableModel ImgPath;
    SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy-HH-mm-ss");
                                                    
    
    
    /** Creates new form MemberKiosk */
    
    
    public MemberKiosk() {
        
            initComponents();
            
            main.setVisible(true);
            panel.setVisible(false);
            NewsLetterPanel.setVisible(false);
       
    }

    public void loaddata()
    {
        
        if (!jCheckBox1.isSelected()){
                try {
            panelTable = PanelTableModel.loadInstancePanelInfoActivated(m_App);
            
            showPanelInfo(panelTable);
           
        } catch (BasicException ex) {
            Logger.getLogger(MemberKiosk.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        }
        else{
        
        
            try {
            panelTable = PanelTableModel.loadInstancePanelInfo(m_App);
            
            showPanelInfo(panelTable);
           
        } catch (BasicException ex) {
            Logger.getLogger(MemberKiosk.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            
            
        }
        
    }
    public void loaddata2()
    {
        
        if (!jCheckBox2.isSelected()){
                try {
            
            AddInfo = PanelTableModel.loadInstanceAdvertizementInfoActived(m_App);
            showAdvertizeInfo(AddInfo);
           
        } catch (BasicException ex) {
            Logger.getLogger(MemberKiosk.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        }
        else{
        
        
            try {
            
            AddInfo = PanelTableModel.loadInstanceAdvertizementInfo(m_App);
            showAdvertizeInfo(AddInfo);
           
        } catch (BasicException ex) {
            Logger.getLogger(MemberKiosk.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            
            
        }
        
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        main2 = new javax.swing.JPanel();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        TabOnePanel = new javax.swing.JPanel();
        panel = new javax.swing.JPanel();
        PanelNameLable = new javax.swing.JLabel();
        PanelNameTextField = new javax.swing.JTextField();
        FromDateLable = new javax.swing.JLabel();
        FromDateTextField = new javax.swing.JTextField();
        DateButton = new javax.swing.JButton();
        ToDateLable = new javax.swing.JLabel();
        ToDateTextField = new javax.swing.JTextField();
        TimeInSecLable = new javax.swing.JLabel();
        TimeInSecTextFeild = new javax.swing.JTextField();
        UploadFileLable = new javax.swing.JLabel();
        Cancel = new javax.swing.JButton();
        PanelName = new javax.swing.JLabel();
        ToDateButton = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0));
        m_jImage = new com.openbravo.data.gui.JImageEditor();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        NotesTextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        LinkTextField = new javax.swing.JTextField();
        count = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        AdvertizePanel = new javax.swing.JPanel();
        AdvertizementTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        EventDateTextField = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        EventDateLabel = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        EventDateButton = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        Save = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        imgName = new javax.swing.JTextField();
        NewsLetterPanel = new javax.swing.JPanel();
        NewsLetter = new javax.swing.JLabel();
        NewsLetterButton = new javax.swing.JButton();
        NewsCancelButton = new javax.swing.JButton();
        NewsSaveButton = new javax.swing.JButton();
        TargetFileNewsLetter = new javax.swing.JLabel();
        SourceFileNewsLetter = new javax.swing.JLabel();
        NewsFileName = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        main = new javax.swing.JPanel();
        panel1Button = new javax.swing.JButton();
        Panel3Button = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        Panel4Button = new javax.swing.JButton();
        Panel2Button = new javax.swing.JButton();
        panel1 = new java.awt.Panel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable(){public Component prepareRenderer(TableCellRenderer renderer,
            int rowIndex, int vColIndex) {
            Component c = super.prepareRenderer(renderer, rowIndex, vColIndex);
            if (c instanceof JComponent) {
                JComponent jc = (JComponent)c;
                jc.setToolTipText(String.valueOf(getValueAt(rowIndex, vColIndex)));

                if (rowIndex % 2 == 0 && !isCellSelected(rowIndex, vColIndex)) {
                    jc.setBackground(Color.lightGray);
                }
                else {
                    jc.setBackground(Color.white);
                }
                if(isCellSelected(rowIndex, vColIndex))
                jc.setBackground(Color.cyan);
            }
            return c;
        }};
        ViewPanelImg = new javax.swing.JButton();
        DeactivatePanel = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();
        Image_Panel = new java.awt.Panel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable(){public Component prepareRenderer(TableCellRenderer renderer,
            int rowIndex, int vColIndex) {
            Component c = super.prepareRenderer(renderer, rowIndex, vColIndex);
            if (c instanceof JComponent) {
                JComponent jc = (JComponent)c;
                jc.setToolTipText(String.valueOf(getValueAt(rowIndex, vColIndex)));

                if (rowIndex % 2 == 0 && !isCellSelected(rowIndex, vColIndex)) {
                    jc.setBackground(Color.lightGray);
                }
                else {
                    jc.setBackground(Color.white);
                }
                if(isCellSelected(rowIndex, vColIndex))
                jc.setBackground(Color.cyan);
            }
            return c;
        }};
        View = new javax.swing.JButton();
        Panel3Deactivater = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jCheckBox2 = new javax.swing.JCheckBox();

        jPanel2.setName("jPanel2"); // NOI18N

        jButton2.setText("jButton1");
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(502, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(261, Short.MAX_VALUE))
        );

        main2.setName("main2"); // NOI18N

        jButton12.setText("jButton1");
        jButton12.setName("jButton12"); // NOI18N
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("jButton3");
        jButton13.setName("jButton13"); // NOI18N
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("jButton4");
        jButton14.setName("jButton14"); // NOI18N

        jButton15.setText("jButton5");
        jButton15.setName("jButton15"); // NOI18N

        jButton16.setText("jButton6");
        jButton16.setName("jButton16"); // NOI18N

        javax.swing.GroupLayout main2Layout = new javax.swing.GroupLayout(main2);
        main2.setLayout(main2Layout);
        main2Layout.setHorizontalGroup(
            main2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(main2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(main2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(main2Layout.createSequentialGroup()
                        .addGroup(main2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE))
                        .addGap(6, 6, 6))
                    .addGroup(main2Layout.createSequentialGroup()
                        .addComponent(jButton16, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
                .addGroup(main2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(main2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButton15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        main2Layout.setVerticalGroup(
            main2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(main2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(main2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(main2Layout.createSequentialGroup()
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))
                    .addGroup(main2Layout.createSequentialGroup()
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });
        jTabbedPane1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTabbedPane1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        TabOnePanel.setName("TabOnePanel"); // NOI18N

        panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Panel"));
        panel.setName("panel"); // NOI18N
        panel.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                panelAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        PanelNameLable.setText("Panel Name");
        PanelNameLable.setName("Panel name"); // NOI18N
        PanelNameLable.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                PanelNameLableAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        PanelNameTextField.setName("PanelNameTextField"); // NOI18N
        PanelNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PanelNameTextFieldActionPerformed(evt);
            }
        });

        FromDateLable.setText("From Date");
        FromDateLable.setName("FromDateLable"); // NOI18N

        FromDateTextField.setName("FromDate"); // NOI18N
        FromDateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FromDateTextFieldActionPerformed(evt);
            }
        });

        DateButton.setText("Date");
        DateButton.setName("DateButton"); // NOI18N
        DateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateButtonActionPerformed(evt);
            }
        });

        ToDateLable.setText("To Date:");
        ToDateLable.setName("ToDateLable"); // NOI18N

        ToDateTextField.setName("ToDateTextField"); // NOI18N
        ToDateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ToDateTextFieldActionPerformed(evt);
            }
        });

        TimeInSecLable.setText("Time in Sec");
        TimeInSecLable.setName("TimeInSecLable"); // NOI18N

        TimeInSecTextFeild.setName("TimeInSecTextFeild"); // NOI18N
        TimeInSecTextFeild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimeInSecTextFeildActionPerformed(evt);
            }
        });
        TimeInSecTextFeild.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TimeInSecTextFeildKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TimeInSecTextFeildKeyTyped(evt);
            }
        });

        UploadFileLable.setText("Upload File");
        UploadFileLable.setName("UploadFileLable"); // NOI18N

        Cancel.setText("Cancel");
        Cancel.setName("Cancel"); // NOI18N
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });

        PanelName.setName("PanelName"); // NOI18N

        ToDateButton.setText("Date");
        ToDateButton.setName("ToDateButton"); // NOI18N
        ToDateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ToDateButtonActionPerformed(evt);
            }
        });

        filler1.setName("filler1"); // NOI18N

        m_jImage.setName("m_jImage"); // NOI18N
        m_jImage.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                m_jImageAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        add(m_jImage);
        m_jImage.setBounds(130, 300, 240, 180);

        jLabel1.setText("Description");
        jLabel1.setName("jLabel1"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        NotesTextArea.setColumns(20);
        NotesTextArea.setRows(5);
        NotesTextArea.setName("NotesTextArea"); // NOI18N
        jScrollPane2.setViewportView(NotesTextArea);
        NotesTextArea.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                NotesTextAreaAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        NotesTextArea.setWrapStyleWord(true);
        NotesTextArea.setLineWrap(true);
        String str = NotesTextArea.getText();
        NotesTextArea.setDocument(new FixedSizeDocument2(30));
        NotesTextArea.setText(str);

        jLabel2.setText("Link");
        jLabel2.setName("jLabel2"); // NOI18N

        LinkTextField.setName("LinkTextField"); // NOI18N
        LinkTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LinkTextFieldActionPerformed(evt);
            }
        });

        count.setText("30");
        count.setName("count"); // NOI18N
        count.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countActionPerformed(evt);
            }
        });

        jLabel3.setText("You have ");
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setText("character left");
        jLabel4.setName("jLabel4"); // NOI18N

        AdvertizePanel.setName("AdvertizePanel"); // NOI18N

        AdvertizementTextField.setName("AdvertizementTextField"); // NOI18N
        AdvertizementTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdvertizementTextFieldActionPerformed(evt);
            }
        });

        jLabel5.setText("Advertiser  Name ");
        jLabel5.setName("jLabel5"); // NOI18N

        javax.swing.GroupLayout AdvertizePanelLayout = new javax.swing.GroupLayout(AdvertizePanel);
        AdvertizePanel.setLayout(AdvertizePanelLayout);
        AdvertizePanelLayout.setHorizontalGroup(
            AdvertizePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdvertizePanelLayout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AdvertizementTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        AdvertizePanelLayout.setVerticalGroup(
            AdvertizePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdvertizePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AdvertizePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(AdvertizementTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setName("jPanel5"); // NOI18N

        EventDateTextField.setName("EventDateTextField"); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(EventDateTextField)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(EventDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel6.setName("jPanel6"); // NOI18N

        EventDateLabel.setText("Event Date");
        EventDateLabel.setName("EventDateLabel"); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(EventDateLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(EventDateLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setName("jPanel7"); // NOI18N

        EventDateButton.setText("Date");
        EventDateButton.setName("EventDateButton"); // NOI18N
        EventDateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventDateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(EventDateButton)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(EventDateButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setName("jPanel8"); // NOI18N

        jButton4.setText("Save Changes");
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setName("jPanel9"); // NOI18N

        Save.setText("Save");
        Save.setName("Save"); // NOI18N
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Save)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jLabel6.setText(".");
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel7.setText("Image Name");
        jLabel7.setName("jLabel7"); // NOI18N

        imgName.setName("imgName"); // NOI18N

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(count, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(AdvertizePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(PanelNameLable)
                                        .addComponent(FromDateLable)
                                        .addComponent(TimeInSecLable)
                                        .addComponent(jLabel2)
                                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(UploadFileLable)
                                            .addComponent(jLabel1))
                                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel6)
                                    .addComponent(ToDateLable, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(PanelNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane2)
                                            .addComponent(LinkTextField)
                                            .addComponent(TimeInSecTextFeild)
                                            .addComponent(ToDateTextField)
                                            .addComponent(FromDateTextField)
                                            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panelLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(panelLayout.createSequentialGroup()
                                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(ToDateButton)
                                                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(DateButton))
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(m_jImage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelLayout.createSequentialGroup()
                                                .addComponent(Cancel)
                                                .addGap(18, 18, 18)
                                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(12, 12, 12)
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18)
                                        .addComponent(imgName, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PanelName, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)))
                .addGap(98, 98, 98))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(AdvertizePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PanelNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PanelNameLable))
                        .addGap(10, 10, 10)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FromDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ToDateButton)
                            .addComponent(FromDateLable))
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ToDateLable)
                                    .addComponent(ToDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DateButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(TimeInSecTextFeild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TimeInSecLable))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(LinkTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(19, 19, 19)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(count, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)))
                            .addComponent(jLabel1))
                        .addGap(8, 8, 8)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(UploadFileLable)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(m_jImage, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(imgName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 18, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        count.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countActionPerformed(evt);
            }
        });

        // Code adding the component to the parent container - not shown here
        count.setEditable(false);
        jLabel6.setVisible(false);

        NewsLetterPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("News Letter"));
        NewsLetterPanel.setName("NewsLetterPanel"); // NOI18N

        NewsLetter.setText("Upload News Letter");
        NewsLetter.setName("NewsLetter"); // NOI18N

        NewsLetterButton.setText("Select News Letter");
        NewsLetterButton.setName("NewsLetterButton"); // NOI18N
        NewsLetterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewsLetterButtonActionPerformed(evt);
            }
        });

        NewsCancelButton.setText("Cancel");
        NewsCancelButton.setName("NewsCancelButton"); // NOI18N
        NewsCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewsCancelButtonActionPerformed(evt);
            }
        });

        NewsSaveButton.setText("Save");
        NewsSaveButton.setName("NewsSaveButton"); // NOI18N
        NewsSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewsSaveButtonActionPerformed(evt);
            }
        });

        TargetFileNewsLetter.setText("jLabel7");
        TargetFileNewsLetter.setName("TargetFileNewsLetter"); // NOI18N
        TargetFileNewsLetter.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                TargetFileNewsLetterAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        SourceFileNewsLetter.setText("jLabel8");
        SourceFileNewsLetter.setName("SourceFileNewsLetter"); // NOI18N

        NewsFileName.setText("jLabel7");
        NewsFileName.setName("NewsFileName"); // NOI18N

        jButton5.setText("View Old NewsLetter");
        jButton5.setName("jButton5"); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NewsLetterPanelLayout = new javax.swing.GroupLayout(NewsLetterPanel);
        NewsLetterPanel.setLayout(NewsLetterPanelLayout);
        NewsLetterPanelLayout.setHorizontalGroup(
            NewsLetterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewsLetterPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(NewsLetterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(NewsLetterPanelLayout.createSequentialGroup()
                        .addComponent(NewsLetter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NewsLetterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(NewsLetterPanelLayout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addGap(18, 18, 18)
                        .addComponent(NewsCancelButton)
                        .addGap(36, 36, 36)
                        .addComponent(NewsSaveButton)))
                .addGap(277, 277, 277)
                .addComponent(NewsFileName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(NewsLetterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SourceFileNewsLetter)
                    .addComponent(TargetFileNewsLetter))
                .addGap(10, 10, 10))
        );
        NewsLetterPanelLayout.setVerticalGroup(
            NewsLetterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewsLetterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(NewsLetterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NewsLetter, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NewsLetterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(NewsLetterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(NewsLetterPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(SourceFileNewsLetter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(NewsLetterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NewsFileName)
                            .addComponent(TargetFileNewsLetter)))
                    .addGroup(NewsLetterPanelLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(NewsLetterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NewsSaveButton)
                            .addComponent(jButton5)
                            .addComponent(NewsCancelButton))))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        TargetFileNewsLetter.setVisible(false);
        SourceFileNewsLetter.setVisible(false);
        NewsFileName.setVisible(false);

        main.setBorder(javax.swing.BorderFactory.createTitledBorder("Main"));
        main.setName("main"); // NOI18N

        panel1Button.setText("Panel1");
        panel1Button.setName("panel1Button"); // NOI18N
        panel1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                panel1ButtonActionPerformed(evt);
            }
        });

        Panel3Button.setText("Panel3");
        Panel3Button.setName("Panel3Button"); // NOI18N
        Panel3Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Panel3ButtonActionPerformed(evt);
            }
        });

        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.setName("jPanel1"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 161, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 105, Short.MAX_VALUE)
        );

        Panel4Button.setText("Panel4");
        Panel4Button.setName("Panel4Button"); // NOI18N
        Panel4Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Panel4ButtonActionPerformed(evt);
            }
        });

        Panel2Button.setText("Panel2");
        Panel2Button.setName("Panel2Button"); // NOI18N
        Panel2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Panel2ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainLayout = new javax.swing.GroupLayout(main);
        main.setLayout(mainLayout);
        mainLayout.setHorizontalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Panel4Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Panel2Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel1Button, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Panel3Button, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(127, 127, 127))
        );
        mainLayout.setVerticalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mainLayout.createSequentialGroup()
                        .addComponent(panel1Button, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Panel2Button, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Panel4Button, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                    .addComponent(Panel3Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout TabOnePanelLayout = new javax.swing.GroupLayout(TabOnePanel);
        TabOnePanel.setLayout(TabOnePanelLayout);
        TabOnePanelLayout.setHorizontalGroup(
            TabOnePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabOnePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TabOnePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(main, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NewsLetterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(234, Short.MAX_VALUE))
        );
        TabOnePanelLayout.setVerticalGroup(
            TabOnePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabOnePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(main, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NewsLetterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Main", TabOnePanel);

        panel1.setName("panel1"); // NOI18N

        jPanel4.setName("jPanel4"); // NOI18N

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "PATH", "LINK TO WEB", "EVENT DATE", "NOTES", "PANEL NAME", "ACTIVE", "FROM DATE", "TO DATE", "TIME IN INTERVAL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setName("jTable1"); // NOI18N
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTable1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane3.setViewportView(jTable1);

        ViewPanelImg.setText("View");
        ViewPanelImg.setName("ViewPanelImg"); // NOI18N
        ViewPanelImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewPanelImgActionPerformed(evt);
            }
        });

        DeactivatePanel.setText("Deactivate");
        DeactivatePanel.setName("DeactivatePanel"); // NOI18N
        DeactivatePanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeactivatePanelActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Show All");
        jCheckBox1.setName("jCheckBox1"); // NOI18N
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jButton3.setText("Edit");
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(639, Short.MAX_VALUE)
                .addComponent(jCheckBox1)
                .addGap(192, 192, 192))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 886, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(ViewPanelImg, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DeactivatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox1)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ViewPanelImg, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeactivatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(649, Short.MAX_VALUE))
        );

        jScrollPane3.getAccessibleContext().setAccessibleParent(jTabbedPane1);
        ViewPanelImg.setVisible(false);

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Panel 1 & 2", panel1);

        Image_Panel.setName("Image_Panel"); // NOI18N

        jPanel3.setName("jPanel3"); // NOI18N

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Advetiser Name", "Path", "Link To Web", "Notes", "Panel Name", "Active", "From Date", "To Date", "Time In Interval"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setName("jTable2"); // NOI18N
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jTable2.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTable2AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane4.setViewportView(jTable2);

        View.setText("View");
        View.setName("View"); // NOI18N
        View.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewActionPerformed(evt);
            }
        });

        Panel3Deactivater.setText("Deactivate");
        Panel3Deactivater.setName("Panel3Deactivater"); // NOI18N
        Panel3Deactivater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Panel3DeactivaterActionPerformed(evt);
            }
        });

        jButton1.setText("Edit");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Show All");
        jCheckBox2.setName("jCheckBox2"); // NOI18N
        jCheckBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox2ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(View, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Panel3Deactivater, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 887, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(665, Short.MAX_VALUE)
                .addComponent(jCheckBox2)
                .addGap(202, 202, 202))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Panel3Deactivater, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(View, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(597, Short.MAX_VALUE))
        );

        View.setVisible(false);

        javax.swing.GroupLayout Image_PanelLayout = new javax.swing.GroupLayout(Image_Panel);
        Image_Panel.setLayout(Image_PanelLayout);
        Image_PanelLayout.setHorizontalGroup(
            Image_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        Image_PanelLayout.setVerticalGroup(
            Image_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Image_PanelLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Panel 3", Image_Panel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 937, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jButton12ActionPerformed

private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jButton13ActionPerformed

private void Panel2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Panel2ButtonActionPerformed
m_jImage.setImage(null);   
    main.setVisible(false);
    panel.setVisible(true);
    NewsLetterPanel.setVisible(false);
    jLabel7.setVisible(true);
imgName.setVisible(true);
    PanelName.setText("Panel 2");
    AdvertizePanel.setVisible(false);
    jPanel7.setVisible(true);
    jPanel5.setVisible(true);
    jPanel6.setVisible(true);
    jPanel8.setVisible(false);
}//GEN-LAST:event_Panel2ButtonActionPerformed

private void Panel4ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Panel4ButtonActionPerformed

NewsLetterPanel.setVisible(true);
main.setVisible(false);
panel.setVisible(false);


  
}//GEN-LAST:event_Panel4ButtonActionPerformed
private void NotesTextAreaAncestorAdded(javax.swing.event.AncestorEvent evt) {                                        

}  
private void Panel3ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Panel3ButtonActionPerformed
m_jImage.setImage(null);
    imgName.setVisible(false);
jLabel7.setVisible(false);
    main.setVisible(false);
    panel.setVisible(true);
    NewsLetterPanel.setVisible(false);
    PanelName.setText("Panel 3");
    AdvertizePanel.setVisible(true);
    jPanel7.setVisible(false);
    jPanel5.setVisible(false);
    jPanel6.setVisible(false);
    jPanel8.setVisible(false);
    
}//GEN-LAST:event_Panel3ButtonActionPerformed

private void panel1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_panel1ButtonActionPerformed

m_jImage.setImage(null);
main.setVisible(false);
jLabel7.setVisible(true);
imgName.setVisible(true);
panel.setVisible(true);
NewsLetterPanel.setVisible(false);
PanelName.setText("Panel 1");
AdvertizePanel.setVisible(false);
jPanel7.setVisible(true);
jPanel5.setVisible(true);
jPanel6.setVisible(true);
jPanel8.setVisible(false);
}//GEN-LAST:event_panel1ButtonActionPerformed

private void NewsSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewsSaveButtonActionPerformed
    
    try {
            NewsLetter_path  = (String) new StaticSentence(m_App.getSession(), "SELECT NEWSLETTERPATH FROM clubdetailskiosk where active = true", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).find();
           int num =  new PreparedSentence(m_App.getSession(), "UPDATE clubdetailskiosk  SET NEWSLETTER=? WHERE ACTIVE=TRUE ", new SerializerWriteBasic(new Datas[]{Datas.STRING})).exec(new Object[]{NewsFileName.getText()});
               NewsLetter_Name = (String) new StaticSentence(m_App.getSession(), "SELECT NEWSLETTER FROM clubdetailskiosk where active = true", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).find();
  } 
  catch (BasicException ex) {
            Logger.getLogger(MemberKiosk.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
     TargetF_Name = NewsLetter_path+ NewsFileName.getText();
    //File srcFile = =JImageEditor.filePath;
   
    if(SourceFileNewsLetter!=null && NewsFileName!=null)
    {
        File sourceF = new File(SourceFileNewsLetter.getText());
        File TargetF = new File(TargetF_Name);
        
    try {
        FileUtils.copyFile(sourceF,TargetF);
        
         //JOptionPane.showMessageDialog(this, " Newsletter Saved Successfully..!! ", "Data Saved..!! ", JOptionPane.INFORMATION_MESSAGE);
    } catch (IOException ex) {
        Logger.getLogger(MemberKiosk.class.getName()).log(Level.SEVERE, null, ex);
        new MessageInf(ex).show(getParent());
    }
    }
    
   
    NewsLetterPanel.setVisible(false);
    main.setVisible(true);
    
}//GEN-LAST:event_NewsSaveButtonActionPerformed

private void NewsCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewsCancelButtonActionPerformed
NewsLetterPanel.setVisible(false);
main.setVisible(true);
}//GEN-LAST:event_NewsCancelButtonActionPerformed

private void ToDateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ToDateButtonActionPerformed
 Date date1=new Date();
       try {
            date1 = (Date) Formats.TIMESTAMP.parseValue(FromDateTextField.getText());
        } 
       catch (BasicException e) {
            date1 = null;
        }
          try{
        date1 = JCalendarDialog.showCalendarTimeHours(this, date1);
        if (date1 != null) {
           
                FromDateTextField.setText(Formats.TIMESTAMP.formatValue(date1));
           
        }
          }catch(Exception e1){
              e1.printStackTrace();
          } 
}//GEN-LAST:event_ToDateButtonActionPerformed
String Panel_name = null;
Date event_date = null;
Date from_date = null;
Date to_date = null;
String link = null;
int time_interval = 0 ;
String notes = null;
int active = 1;
String path = null;
String Panel1_Def_Path = null;
String Panel2_Def_Path = null;
String Panel3_Def_Path = null;
String NewsLetter_path = null;
String NewsLetter_Name = null;
String TargetF_Name=null;
private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
   
 String time= TimeInSecTextFeild.getText();  
 
  try {
            Panel1_Def_Path = (String) new StaticSentence(m_App.getSession(), "SELECT PANELONE FROM clubdetailskiosk where active = true", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).find();
            Panel2_Def_Path =  (String) new StaticSentence(m_App.getSession(), "SELECT PANELTWO FROM clubdetailskiosk where active = true", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).find(); 
            Panel3_Def_Path =  (String) new StaticSentence(m_App.getSession(), "SELECT PANELTHREE FROM clubdetailskiosk where active = true", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).find(); 

  } 
  catch (BasicException ex) {
            Logger.getLogger(MemberKiosk.class.getName()).log(Level.SEVERE, null, ex);
            new MessageInf(ex).show(getParent());
        }
       if(FromDateTextField.getText().length()>0 && ToDateTextField.getText().length()>0 || EventDateTextField.getText().length()>0 ){
         
           if(NotesTextArea.getText().length()<50 ) 
           {   
                if(time.length()>0){
                    if(m_jImage.fileName!=null)
                    {
                    
                           try{
                              
     
                               
                                time_interval = Integer.parseInt(TimeInSecTextFeild.getText());
                                Panel_name = PanelNameTextField.getText();
                                event_date = (Date) Formats.TIMESTAMP.parseValue(EventDateTextField.getText());
                                from_date = (Date) Formats.TIMESTAMP.parseValue(FromDateTextField.getText()); 
                                to_date = (Date) Formats.TIMESTAMP.parseValue(ToDateTextField.getText());        
                                notes = NotesTextArea.getText(); 
                                link = LinkTextField.getText();  
                                
                               // CONECTION WITH DATABASE   FOR PANEL 1
                             if(PanelName.getText() == "Panel 1"){
                                 if(imgName.getText()!=null  && imgName.getText().length()>1)
                    {
                               String dateToFilename = sdf.format(new Date()).toString();
                                    
                                   final String fileName = imgName.getText()+"_"+dateToFilename+"_"+m_jImage.fileName;
                                   final String Panel1_Path = Panel1_Def_Path + fileName;
                                   String s = m_jImage.fileName;
                                   
                                   
                                   //final String filePathStr = m_jImage.filePath;
                                   
                                  // File f = new File("C:/Documents and Settings/user/Desktop/panel1/")  ;   
                                   Transaction t = new Transaction(m_App.getSession()) {
                                        private Component MainButtons;
                            
                                        @Override
                                        protected Object transact() throws BasicException {

                                        File TargetFile = new File(Panel1_Path)  ; 
                                        //File srcFile = =JImageEditor.filePath;
                                        try {
                                            FileUtils.copyFile(JImageEditor.filePath,TargetFile);
                                        } catch (IOException ex) {
                                            throw new BasicException(ex.getMessage());
                                        }         
                                        int num =  new PreparedSentence(m_App.getSession()
                                        , "INSERT INTO panelone(ID ,PATH , LINKTOWEB ,CRDATE, EVENTDATE, NOTES, PANELNAME , ACTIVE , FROMDATE, TODATE, TIMEINTERVAL ,CRHOST, CRBY) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"
                                        , new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.STRING ,Datas.STRING,Datas.TIMESTAMP ,Datas.TIMESTAMP, Datas.STRING, Datas.STRING,Datas.INT, Datas.TIMESTAMP,Datas.TIMESTAMP,Datas.INT ,Datas.STRING, Datas.STRING})
                                        ).exec(new Object[]{UUID.randomUUID().toString(),fileName ,link , new Date(), event_date, notes, Panel_name, active , from_date,  to_date ,time_interval , m_App.getProperties().getHost() , m_App.getAppUserView().getUser().getName()});
                                        
                                        
                                        if(num !=1)
                                             {
                                                JOptionPane.showMessageDialog(MainButtons, "Error in saving generated details to database."); 
                                             }


                                         
                                        return null;
                                        }
                                   };
                                     t.execute();    
                                      JOptionPane.showMessageDialog(this, " Data Saved Successfully..!! ", "Data Saved..!! ", JOptionPane.INFORMATION_MESSAGE);
                                        panel.setVisible(false);
                                        main.setVisible(true); 
                                        reset();
                                        loaddata();
                                 }
                                 else
                                 {
                                     JOptionPane.showMessageDialog(this, "Image Name Shoud Not Be Empty", "Enter Image Name",JOptionPane.ERROR_MESSAGE);
                                 
                                 }
                                       
                           }
                           
                             
                             if(PanelName.getText() == "Panel 2") {  
                                   if(imgName.getText()!=null  && imgName.getText().length()>1)
                    {
                              String dateToFilename = sdf.format(new Date()).toString();
                                    
                                   final String fileName = imgName.getText()+"_"+dateToFilename+"_"+m_jImage.fileName;
                                        final String Panel2_Path = Panel2_Def_Path + fileName;
                                        Transaction t = new Transaction(m_App.getSession()) {
                                        private Component MainButtons;
                                        
                                       
                                        
                                        @Override
                                        protected Object transact() throws BasicException {

                                        File TargetFile2 = new File(Panel2_Path); 
                                            try {
                                                FileUtils.copyFile(JImageEditor.filePath,TargetFile2);
                                            } catch (IOException ex) {
                                                throw new BasicException(ex.getMessage());
                                            }
                                            
                                        
                                        int num =  new PreparedSentence(m_App.getSession()
                                        , "INSERT INTO paneltwo (ID ,PATH , LINKTOWEB ,CRDATE, EVENTDATE, NOTES, PANELNAME , ACTIVE , FROMDATE, TODATE, TIMEINTERVAL ,CRHOST, CRBY) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"
                                        , new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.STRING ,Datas.STRING,Datas.TIMESTAMP ,Datas.TIMESTAMP, Datas.STRING, Datas.STRING,Datas.INT, Datas.TIMESTAMP,Datas.TIMESTAMP,Datas.INT ,Datas.STRING, Datas.STRING})
                                        ).exec(new Object[]{UUID.randomUUID().toString(), fileName ,link , new Date(), event_date, notes, Panel_name, active , from_date,  to_date ,time_interval , m_App.getProperties().getHost() , m_App.getAppUserView().getUser().getName()});

                                        if(num !=1)
                                             {
                                                JOptionPane.showMessageDialog(MainButtons, "Error in saving generated details to database."); 
                                             }
                                         
                                        


                                        return null;
                                        }
                                   };
                                     t.execute();   
                                     
                                      JOptionPane.showMessageDialog(this, " Data Saved Successfully..!! ", "Data Saved..!! ", JOptionPane.INFORMATION_MESSAGE);

                                        panel.setVisible(false);
                                        main.setVisible(true); 
                                        reset();
                                        loaddata();
                                        }
                                 else
                                 {
                                     JOptionPane.showMessageDialog(this, "Image Name Shoud Not Be Empty", "Enter Image Name",JOptionPane.ERROR_MESSAGE);
                                 }
                                        
                           }
                            if(PanelName.getText() == "Panel 3") {  
                              String dateToFilename = sdf.format(new Date()).toString();
                                    
                                   final String fileName = AdvertizementTextField.getText()+"_"+dateToFilename+"_"+m_jImage.fileName;
                                        final String Panel3_Path = Panel3_Def_Path + fileName;
                                        final String AdvrName = AdvertizementTextField.getText();
                                        Transaction t = new Transaction(m_App.getSession()) {
                                        private Component MainButtons;
                                        
                                        @Override
                                        protected Object transact() throws BasicException {

                                        File TargetFile3 = new File(Panel3_Path) ; 
                                        try {
                                            FileUtils.copyFile(JImageEditor.filePath,TargetFile3);
                                        } catch (IOException ex) {
                                            throw new BasicException(ex.getMessage());
                                        }
                                        int num =  new PreparedSentence(m_App.getSession()
                                        , "INSERT INTO panelthree (ID ,PATH , LINKTOWEB ,CRDATE , NOTES, PANELNAME , ACTIVE , FROMDATE, TODATE, TIMEINTERVAL ,CRHOST, CRBY , AdvertiserName) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"
                                        , new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.STRING ,Datas.STRING ,Datas.TIMESTAMP, Datas.STRING, Datas.STRING,Datas.INT, Datas.TIMESTAMP,Datas.TIMESTAMP,Datas.INT ,Datas.STRING, Datas.STRING , Datas.STRING})
                                        ).exec(new Object[]{UUID.randomUUID().toString(),fileName ,link , new Date() , notes, Panel_name, active , from_date,  to_date ,time_interval , m_App.getProperties().getHost() , m_App.getAppUserView().getUser().getName(),AdvrName});

                                        if(num !=1)
                                             {
                                                JOptionPane.showMessageDialog(MainButtons, "Error in saving generated details to database."); 
                                             }

                                        

                                        return null;
                                        }
                                   };
                                     t.execute();           

                                        
                                     
                                        
                                     panel.setVisible(false);
                                        main.setVisible(true); 
                                        reset();
                                        loaddata2();
                                        JOptionPane.showMessageDialog(this, " Data Saved Successfully..!! ", "Data Saved..!! ", JOptionPane.INFORMATION_MESSAGE);
                           }     
                                 
                                 
                                 
                           }
                            catch(BasicException ex)
                           {
                            new MessageInf(ex).show(getParent());
                             
                           }
                            catch(NumberFormatException ex)
                           {
                              JOptionPane.showMessageDialog(this, "Please enter only numeric value for time interval ", "Enter details", JOptionPane.ERROR_MESSAGE); 
                           }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(this, "Please Select Image ", "Enter details", JOptionPane.ERROR_MESSAGE); 
                    }
                   
               
           }
                   else{

                       JOptionPane.showMessageDialog(this, "Please enter time interval ", "Enter details", JOptionPane.ERROR_MESSAGE);

                   }
           }
            else{
               JOptionPane.showMessageDialog(this, " Notes Contains only 50 Charaters", "Enter details", JOptionPane.ERROR_MESSAGE);
           } 
          
           
       }
       else{
           JOptionPane.showMessageDialog(this, "Please enter date", "Enter details", JOptionPane.ERROR_MESSAGE);
       }
       
  
    

}//GEN-LAST:event_SaveActionPerformed

private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed

    reset();
    
   
    
    
}//GEN-LAST:event_CancelActionPerformed



private void ToDateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ToDateTextFieldActionPerformed


}//GEN-LAST:event_ToDateTextFieldActionPerformed

private void DateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateButtonActionPerformed

       Date date2=new Date();
       try {
           date2 = (Date) Formats.TIMESTAMP.parseValue(ToDateTextField.getText());
        } 
       catch (BasicException e) {
            date2 = null;
        }
          try{
        date2 = JCalendarDialog.showCalendarTimeHours(this, date2);
        if (date2 != null) {
           
                ToDateTextField.setText(Formats.TIMESTAMP.formatValue(date2));
           
        }
          }catch(Exception e1){
              e1.printStackTrace();
          } 
             
}//GEN-LAST:event_DateButtonActionPerformed

private void FromDateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FromDateTextFieldActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_FromDateTextFieldActionPerformed

private void PanelNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PanelNameTextFieldActionPerformed
// TODO add your handling code here:
    
}//GEN-LAST:event_PanelNameTextFieldActionPerformed

private void PanelNameLableAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_PanelNameLableAncestorAdded
// TODO add your handling code here:
}//GEN-LAST:event_PanelNameLableAncestorAdded

private void TimeInSecTextFeildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimeInSecTextFeildActionPerformed
    
            TimeInSecTextFeild.addKeyListener(new KeyListener() {

            public void keyTyped(KeyEvent e) {
                if(TimeInSecTextFeild.getText()!="1" || TimeInSecTextFeild.getText()!="2" ){
                    
                      
                   
                    
                }
            }

            public void keyPressed(KeyEvent e) {
                
            }

            public void keyReleased(KeyEvent e) {
               
            }
        });
  
        
    
}//GEN-LAST:event_TimeInSecTextFeildActionPerformed




private void m_jImageAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_m_jImageAncestorAdded

}//GEN-LAST:event_m_jImageAncestorAdded

private void EventDateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventDateButtonActionPerformed
    Date date=new Date();
       try {
            date = (Date) Formats.TIMESTAMP.parseValue(EventDateTextField.getText());
        } 
       catch (BasicException e) {
            date = null;
        }
          try{
        date = JCalendarDialog.showCalendarTimeHours(this, date);
        if (date != null) {
           
                EventDateTextField.setText(Formats.TIMESTAMP.formatValue(date));
           
        }
          }catch(Exception e1){
              e1.printStackTrace();
          } 
}//GEN-LAST:event_EventDateButtonActionPerformed

private void panelAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_panelAncestorAdded
// TODO add your handling code here:
}//GEN-LAST:event_panelAncestorAdded

private void LinkTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LinkTextFieldActionPerformed

}//GEN-LAST:event_LinkTextFieldActionPerformed

private void NewsLetterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewsLetterButtonActionPerformed

   JFileChooser fileChooser = new JFileChooser();
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                                       
           
               File sourceFile = fileChooser.getSelectedFile();
               String filename = sourceFile.getName();
               
               SourceFileNewsLetter.setText(sourceFile.getAbsolutePath().toString());
               NewsFileName.setText(filename.toString());
               
                
}//GEN-LAST:event_NewsLetterButtonActionPerformed
}
private void countActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_countActionPerformed

private void TimeInSecTextFeildKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TimeInSecTextFeildKeyTyped

       
}//GEN-LAST:event_TimeInSecTextFeildKeyTyped

private void AdvertizementTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdvertizementTextFieldActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_AdvertizementTextFieldActionPerformed

private void jTabbedPane1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTabbedPane1AncestorAdded
// TODO add your handling code here:
}//GEN-LAST:event_jTabbedPane1AncestorAdded

private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
if(jTable2.getSelectedColumn()!=-1){
    View.setEnabled(true);
    jButton1.setEnabled(true);
    Panel3Deactivater.setEnabled(true);
    int row = jTable2.getSelectedRow();  
     AdvertizeInfo pti = AddInfo.getImgPath().get(row);
     if(pti.getPath()!=null && pti.getPath().length()>0){
         View.setEnabled(true);
     }
     else{
         View.setEnabled(false);
     }
} 

else{
    
    View.setEnabled(false);
    
}
}//GEN-LAST:event_jTable2MouseClicked

private void ViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewActionPerformed

     if(jTable2.getSelectedRow()!=-1){
         
         try {
                int row = jTable2.getSelectedRow();
                AdvertizeInfo pti = AddInfo.getImgPath().get(row);
                try {
                    Panel3_Def_Path = (String) new StaticSentence(m_App.getSession(), "SELECT PANELTHREE FROM clubdetailskiosk where active = true", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).find();
                      
                 } 
                 catch (BasicException ex) {
                                 Logger.getLogger(MemberKiosk.class.getName()).log(Level.SEVERE, null, ex);
                             }
                File file = new File(Panel3_Def_Path+pti.getPath());
                Desktop.getDesktop().open(file);
                
         }
         catch(IOException ex){
             Logger.getLogger(Notice.class.getName()).log(Level.SEVERE, null, ex);
             JOptionPane.showMessageDialog(null, "File Does Not Exsist or Unable to open.", "File Not Found", JOptionPane.ERROR_MESSAGE);
         }
     }
    
}//GEN-LAST:event_ViewActionPerformed

private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
if(jTable1.getSelectedColumn()!=-1){
    ViewPanelImg.setEnabled(true);
    DeactivatePanel.setEnabled(true);
    jButton3.setEnabled(true);
    int row = jTable1.getSelectedRow();  
     PanelTableInfo pti = panelTable.getPanelImgPath().get(row);
    
     if(pti.getPath()!=null && pti.getPath().length()>0){
         ViewPanelImg.setEnabled(true);
         DeactivatePanel.setEnabled(true);
     }
     else{
         ViewPanelImg.setEnabled(false);
         DeactivatePanel.setEnabled(false);
     }
} 

else{
    
    ViewPanelImg.setEnabled(false);
    
}
}//GEN-LAST:event_jTable1MouseClicked

private void jTable1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable1AncestorAdded
// TODO add your handling code here:
}//GEN-LAST:event_jTable1AncestorAdded

private void jTable2AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable2AncestorAdded
// TODO add your handling code here:
}//GEN-LAST:event_jTable2AncestorAdded

private void ViewPanelImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewPanelImgActionPerformed
 if(jTable1.getSelectedRow()!=-1){
         
     if(jTable1.getSelectedRow()<panelTable.getPanelOneSize())
     {
         try {
                int row = jTable1.getSelectedRow();
                PanelTableInfo pti = panelTable.getPanelImgPath().get(row);
                 
                 try {
                     Panel1_Def_Path = (String) new StaticSentence(m_App.getSession(), "SELECT PANELONE FROM clubdetailskiosk where active = true", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).find();
                      
                 } 
                 catch (BasicException ex) {
                                 Logger.getLogger(MemberKiosk.class.getName()).log(Level.SEVERE, null, ex);
                             }
                
                File file = new File(Panel1_Def_Path+pti.getPath());
                
                Desktop.getDesktop().open(file);
                
         }
         catch(IOException ex){
             Logger.getLogger(Notice.class.getName()).log(Level.SEVERE, null, ex);
             JOptionPane.showMessageDialog(null, "File Does Not Exsist  or Unable to open.", "File Not Found", JOptionPane.ERROR_MESSAGE);
         }
     }
 else
 {
      try {
                int row = jTable1.getSelectedRow();
                PanelTableInfo pti = panelTable.getPanelImgPath().get(row);
                 
                 try {
                     Panel2_Def_Path = (String) new StaticSentence(m_App.getSession(), "SELECT PANELTWO FROM clubdetailskiosk where active = true", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).find();
                      
                 } 
                 catch (BasicException ex) {
                                 Logger.getLogger(MemberKiosk.class.getName()).log(Level.SEVERE, null, ex);
                             }
                
                File file = new File(Panel2_Def_Path+pti.getPath());
                
                Desktop.getDesktop().open(file);
                
         }
         catch(IOException ex){
             Logger.getLogger(Notice.class.getName()).log(Level.SEVERE, null, ex);
             JOptionPane.showMessageDialog(null, "File Does Not Exsist.", "File Not Found", JOptionPane.ERROR_MESSAGE);
         }
 }
 }
 
}//GEN-LAST:event_ViewPanelImgActionPerformed

private void DeactivatePanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeactivatePanelActionPerformed
if(jTable1.getSelectedRow()!=-1){
     if(jTable1.getSelectedRow()<panelTable.getPanelOneSize())
     {
      DeactivatePanel.setEnabled(true);
       int row = jTable1.getSelectedRow();
       PanelTableInfo CurrImage = panelTable.getPanelImgPath().get(row);
       if(active==1){
            try{
           
               
               int num =  new PreparedSentence(m_App.getSession(), "UPDATE PANELONE  SET ACTIVE=FALSE, DEACBY=?, DEACDATE=? , DEACHOST=? WHERE PATH=?", new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.TIMESTAMP, Datas.STRING ,Datas.STRING,})).exec(new Object[]{m_App.getAppUserView().getUser().getName(), new Date(), m_App.getProperties().getHost(),CurrImage.getPath()});
               
               loaddata();
               JOptionPane.showMessageDialog(this, " Deactivated..! ", " Deactivate ", JOptionPane.INFORMATION_MESSAGE);
               
               
            }
            catch(BasicException ex){
           
                    Logger.getLogger(Notice.class.getName()).log(Level.SEVERE, null, ex);
           
            }
        }
       else{
           DeactivatePanel.setEnabled(false);
       }
     }
       else{
         DeactivatePanel.setEnabled(true);
       int row = jTable1.getSelectedRow();
       PanelTableInfo CurrImage = panelTable.getPanelImgPath().get(row);
       if(active==1){
            try{
           
               
               int num =  new PreparedSentence(m_App.getSession(), "UPDATE PANELTWO  SET ACTIVE=FALSE, DEACBY=?, DEACDATE=? , DEACHOST=? WHERE PATH=?", new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.TIMESTAMP, Datas.STRING ,Datas.STRING,})).exec(new Object[]{m_App.getAppUserView().getUser().getName(), new Date(), m_App.getProperties().getHost(),CurrImage.getPath()});
               loaddata();
               JOptionPane.showMessageDialog(this, " Deactivated..! ", " Deactivate ", JOptionPane.INFORMATION_MESSAGE);
             
               
               
            }
            catch(BasicException ex){
           
                    Logger.getLogger(Notice.class.getName()).log(Level.SEVERE, null, ex);
           
            }
        }
       else{
           DeactivatePanel.setEnabled(false);
       }
         
     }
      
 }
       
}//GEN-LAST:event_DeactivatePanelActionPerformed

private void Panel3DeactivaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Panel3DeactivaterActionPerformed
if(jTable2.getSelectedRow()!=-1){
     
      DeactivatePanel.setEnabled(true);
       int row = jTable2.getSelectedRow();
       AdvertizeInfo CurrImage = AddInfo.getImgPath().get(row);
       if(active==1){
            try{
           
               
               int num =  new PreparedSentence(m_App.getSession(), "UPDATE PANELTHREE  SET ACTIVE=FALSE, DEACBY=?, DEACDATE=? , DEACHOST=? WHERE PATH=?", new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.TIMESTAMP, Datas.STRING ,Datas.STRING,})).exec(new Object[]{m_App.getAppUserView().getUser().getName(), new Date(), m_App.getProperties().getHost(),CurrImage.getPath()});
               loaddata2();
               JOptionPane.showMessageDialog(this, " Deactivated..! ", " Deactivate ", JOptionPane.INFORMATION_MESSAGE);
             
               
               
            }
            catch(BasicException ex){
           
                    Logger.getLogger(Notice.class.getName()).log(Level.SEVERE, null, ex);
           
            }
        }
       else{
           DeactivatePanel.setEnabled(false);
       } 
     
}
}//GEN-LAST:event_Panel3DeactivaterActionPerformed

private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed

}//GEN-LAST:event_jCheckBox1ActionPerformed

private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged

    loaddata();
    
}//GEN-LAST:event_jCheckBox1ItemStateChanged

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
if(jTable1.getSelectedRow()!=-1){
         
     if(jTable1.getSelectedRow()<panelTable.getPanelOneSize())
     {
         int row = jTable1.getSelectedRow();
         PanelTableInfo EditData = panelTable.getPanelImgPath().get(row);
         
         java.util.Date eventDate = null;
        
         java.util.Date fromDate = null;
         java.util.Date toDate = null;
         
          if(EditData.getEventDate()!=null)
         {
             eventDate = new java.util.Date(EditData.getEventDate().getTime());
             EventDateTextField.setText(Formats.TIMESTAMP.formatValue(eventDate));
         }
          if(EditData.getFromDate()!=null)
         {
             fromDate = new java.util.Date(EditData.getFromDate().getTime());
             FromDateTextField.setText(Formats.TIMESTAMP.formatValue(fromDate));
         }
          if(EditData.getToDate()!=null)
         {
             toDate = new java.util.Date(EditData.getToDate().getTime());
             ToDateTextField.setText(Formats.TIMESTAMP.formatValue(toDate));
         }
         
         PanelNameTextField.setText(EditData.getPanelName());
         
         String [] iName= EditData.getPath().split("_");
         imgName.setText(iName[0]);
         BufferedImage bi = null;
         File f = null;
         try
         {
         Panel1_Def_Path = (String) new StaticSentence(m_App.getSession(), "SELECT PANELONE FROM clubdetailskiosk where active = true", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).find();
         //Panel1_Def_Path = Panel1_Def_Path.substring(2);
         f = new File(Panel1_Def_Path+EditData.getPath());
         
        
             bi = ImageIO.read(f);
         }catch(Exception e)
                 {
                     e.printStackTrace();
                     JOptionPane.showMessageDialog(null, "Unable to Load Image..!!", "Unable to Load", JOptionPane.ERROR_MESSAGE);
                 }
         String [] ss = EditData.getPath().split("_");
         int i = ss.length;
          m_jImage.setImage(bi);
          JImageEditor.setFileName(ss[i-1]);
          JImageEditor.setFilePath(f);
          
          TimeInSecTextFeild.setText(EditData.getTimeInInterval()+"");
          LinkTextField.setText(EditData.getLink());
          NotesTextArea.setText(EditData.getNotes());
          jLabel6.setText(EditData.getId());
       
          
         jLabel6.setText(EditData.getId());
         jTabbedPane1.setSelectedIndex(0);
         main.setVisible(false);
         NewsLetterPanel.setVisible(false);
         panel.setVisible(true);
         
         jPanel9.setVisible(false);
         jPanel8.setVisible(true);
         PanelName.setText("Panel 1");
         AdvertizePanel.setVisible(false);
         jPanel7.setVisible(true);
         jPanel5.setVisible(true);
         jPanel6.setVisible(true);

         
         
         
         
     }
 else
 {
      int row = jTable1.getSelectedRow();
         PanelTableInfo EditData = panelTable.getPanelImgPath().get(row);
         java.util.Date eventDate = null;
         if(EditData.getEventDate()!=null)
         {
            eventDate = new java.util.Date(EditData.getEventDate().getTime());
             EventDateTextField.setText(Formats.TIMESTAMP.formatValue(eventDate));
         }
         java.util.Date fromDate = new java.util.Date(EditData.getFromDate().getTime());
         java.util.Date toDate = new java.util.Date(EditData.getToDate().getTime());
         
         PanelNameTextField.setText(EditData.getPanelName());
         
          FromDateTextField.setText(Formats.TIMESTAMP.formatValue(fromDate));
          ToDateTextField.setText(Formats.TIMESTAMP.formatValue(toDate));
          TimeInSecTextFeild.setText(EditData.getTimeInInterval()+"");
          LinkTextField.setText(EditData.getLink());
          NotesTextArea.setText(EditData.getNotes());
          jLabel6.setText(EditData.getId());
           String [] iName= EditData.getPath().split("_");
         imgName.setText(iName[0]);
     BufferedImage bi = null;
     File f = null;
         try
         {
         Panel2_Def_Path = (String) new StaticSentence(m_App.getSession(), "SELECT PANELTWO FROM clubdetailskiosk where active = true", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).find();
         //Panel2_Def_Path = Panel2_Def_Path.substring(2);
         f = new File(Panel2_Def_Path+EditData.getPath());
         
        
             bi = ImageIO.read(f);
         }catch(Exception e)
                 {
                     e.printStackTrace();
                     JOptionPane.showMessageDialog(null, "Unable to Load Image..!!", "Unable to Load", JOptionPane.ERROR_MESSAGE);
                 }
         
          String [] ss = EditData.getPath().split("_");
         int i = ss.length;
          m_jImage.setImage(bi);
          JImageEditor.setFileName(ss[i-1]);
          JImageEditor.setFilePath(f);
      
        jTabbedPane1.setSelectedIndex(0);
         main.setVisible(false);
         NewsLetterPanel.setVisible(false);
         panel.setVisible(true);
         
         jPanel9.setVisible(false);
         jPanel8.setVisible(true);
         PanelName.setText("Panel 2");
         AdvertizePanel.setVisible(false);
         jPanel7.setVisible(true);
         jPanel5.setVisible(true);
         jPanel6.setVisible(true);
     
     
     
 }
 }
}//GEN-LAST:event_jButton3ActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
   
if(jTable2.getSelectedRow()!=-1){
    
        int row = jTable2.getSelectedRow();
        AdvertizeInfo EditData = AddInfo.getImgPath().get(row);
        
        java.util.Date fromDate = null;
        java.util.Date toDate = null;
        
        if(EditData.getFromDate()!=null)
        {
            fromDate = new java.util.Date(EditData.getFromDate().getTime());
            FromDateTextField.setText(Formats.TIMESTAMP.formatValue(fromDate));
        }
        if(EditData.getToDate()!=null)
        {
            toDate = new java.util.Date(EditData.getToDate().getTime());
            ToDateTextField.setText(Formats.TIMESTAMP.formatValue(toDate));
        }
        
        AdvertizementTextField.setText(EditData.getAdvertiser());
        PanelNameTextField.setText(EditData.getPanelName());
          //EventDateTextField.setText(EditData.getEventDate().toString());
          
          
          TimeInSecTextFeild.setText(EditData.getTimeInInterval()+"");
          LinkTextField.setText(EditData.getLink());
          NotesTextArea.setText(EditData.getNotes());
          jLabel6.setText(EditData.getId());
        
        jTabbedPane1.setSelectedIndex(0);
    
         BufferedImage bi = null;
         File f = null;
         try
         {
         Panel3_Def_Path = (String) new StaticSentence(m_App.getSession(), "SELECT PANELTHREE FROM clubdetailskiosk where active = true", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).find();
       //  Panel3_Def_Path = Panel3_Def_Path.substring(2);
        f = new File(Panel3_Def_Path+EditData.getPath());
         
        
             bi = ImageIO.read(f);
         }catch(Exception e)
                 {
                     e.printStackTrace();
                     JOptionPane.showMessageDialog(null, "Unable to Load Image..!!", "Unable to Load", JOptionPane.ERROR_MESSAGE);
                 }
          String [] ss = EditData.getPath().split("_");
         int i = ss.length;
          m_jImage.setImage(bi);
          JImageEditor.setFileName(ss[i-1]);
          JImageEditor.setFilePath(f);
         
         
         imgName.setVisible(false);
         jLabel7.setVisible(false);
        main.setVisible(false);
         NewsLetterPanel.setVisible(false);
         panel.setVisible(true);
         AdvertizePanel.setVisible(true);
         jPanel9.setVisible(false);
        jPanel8.setVisible(true);
         PanelName.setText("Panel 3");
         jPanel7.setVisible(false);
         jPanel5.setVisible(false);
         jPanel6.setVisible(false);

    
    
}
         
         
         
         
 
}//GEN-LAST:event_jButton1ActionPerformed

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
   String id = jLabel6.getText();
   String dateToFilename = sdf.format(new Date()).toString();
     try {
            Panel1_Def_Path = (String) new StaticSentence(m_App.getSession(), "SELECT PANELONE FROM clubdetailskiosk where active = true", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).find();
            Panel2_Def_Path =  (String) new StaticSentence(m_App.getSession(), "SELECT PANELTWO FROM clubdetailskiosk where active = true", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).find(); 
            Panel3_Def_Path =  (String) new StaticSentence(m_App.getSession(), "SELECT PANELTHREE FROM clubdetailskiosk where active = true", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).find(); 

  } 
  catch (BasicException ex) {
            Logger.getLogger(MemberKiosk.class.getName()).log(Level.SEVERE, null, ex);
        }
    
   
       if(FromDateTextField.getText().length()>0 && ToDateTextField.getText().length()>0 || EventDateTextField.getText().length()>0 ){
           if(NotesTextArea.getText().length()<50 ) {
               if(TimeInSecTextFeild.getText().length()>0){
                   if(m_jImage.fileName!=null)
                   {
                   
                    try{
                              
     
                               
                                time_interval = Integer.parseInt(TimeInSecTextFeild.getText());
                                Panel_name = PanelNameTextField.getText();
                                event_date = (Date) Formats.TIMESTAMP.parseValue(EventDateTextField.getText());
                                from_date = (Date) Formats.TIMESTAMP.parseValue(FromDateTextField.getText()); 
                                to_date = (Date) Formats.TIMESTAMP.parseValue(ToDateTextField.getText());        
                                notes = NotesTextArea.getText(); 
                                link = LinkTextField.getText(); 
                                
                                
                                
                                if(PanelName.getText() == "Panel 1"){
                                     if(imgName.getText()!=null)
                                      {
                                    String fileName = imgName.getText()+"_"+dateToFilename+"_"+m_jImage.fileName;
                                    String Panel1_Path = null;
                                    Panel1_Path = Panel1_Def_Path + fileName;
                                    File TargetFile = new File(Panel1_Path)  ;
                                        try {
                                            FileUtils.copyFile(JImageEditor.filePath,TargetFile);
                                        } catch (IOException ex) {
                                           throw new BasicException(ex.getMessage());
                                        }
                                    int update_panel1 =  new PreparedSentence(m_App.getSession(), "UPDATE PANELONE  SET ACTIVE=1 , PANELNAME=?,PATH=? ,  EVENTDATE=?, FROMDATE=? , TODATE=?, TIMEINTERVAL=? , "
                                             + "LINKTOWEB=? , NOTES=? , CRBY=? , CRHOST=? , CRDATE=? WHERE ID = ? ", new SerializerWriteBasic(new Datas[]{Datas.STRING ,Datas.STRING ,Datas.TIMESTAMP,Datas.TIMESTAMP ,Datas.TIMESTAMP , Datas.INT ,   Datas.STRING ,Datas.STRING , Datas.STRING , Datas.STRING , Datas.TIMESTAMP ,Datas.STRING })).exec
                                             (new Object[]{Panel_name , fileName , event_date , from_date , to_date , time_interval ,link , notes , m_App.getAppUserView().getUser().getName() ,m_App.getProperties().getHost(),new Date() , id});
                                    panel.setVisible(false);
                                        main.setVisible(true); 
                                        reset();
                                        loaddata();
                                        JOptionPane.showMessageDialog(this, " Data Updated Successfully..!! ", "Data Saved..!! ", JOptionPane.INFORMATION_MESSAGE);
                                   }
                                     
                                 else
                                 {
                                     JOptionPane.showMessageDialog(this, "Image Name Shoud Not Be Empty", "Enter Image Name",JOptionPane.ERROR_MESSAGE);
                                 }
                                    
                                    
                                }
                                if(PanelName.getText() == "Panel 2"){
                                    
                                     if(imgName.getText()!=null)
                                      {
                                    String fileName2 = imgName.getText()+"_"+dateToFilename+"_"+m_jImage.fileName;
                                    String Panel2_Path = null;
                                    Panel2_Path = Panel2_Def_Path+fileName2;
                                    File TargetFile = new File(Panel2_Path)  ;
                                        try {
                                            FileUtils.copyFile(m_jImage.filePath,TargetFile);
                                        } catch (IOException ex) {
                                           throw new BasicException(ex.getMessage());
                                        }
                                    
                                    
                                    
                                    int update_panel2 =  new PreparedSentence(m_App.getSession(), "UPDATE PANELTWO  SET ACTIVE=1 , PANELNAME=?,PATH=?, EVENTDATE=?, FROMDATE=? , TODATE=?, TIMEINTERVAL=? , "
                                             + "LINKTOWEB=? , NOTES=? , CRBY=? , CRHOST=? , CRDATE=? WHERE ID = ? ", new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.STRING,Datas.TIMESTAMP,Datas.TIMESTAMP ,Datas.TIMESTAMP , Datas.INT ,   Datas.STRING ,Datas.STRING , Datas.STRING , Datas.STRING , Datas.TIMESTAMP , Datas.STRING})).exec
                                             (new Object[]{Panel_name , fileName2 , event_date , from_date , to_date , time_interval ,link , notes ,  m_App.getAppUserView().getUser().getName() ,m_App.getProperties().getHost(),new Date(), id});
                                    panel.setVisible(false);
                                        main.setVisible(true); 
                                        
                                        }
                                     else
                                     {
                                          JOptionPane.showMessageDialog(this, "Image Name Shoud Not Be Empty", "Enter Image Name",JOptionPane.ERROR_MESSAGE);
                                     }
                                        
                                        
                                        
                                        reset();
                                        loaddata();
                                        JOptionPane.showMessageDialog(this, " Data Updated Successfully..!! ", "Data Saved..!! ", JOptionPane.INFORMATION_MESSAGE);
                          
                                    
                                    
                                }
                                if(PanelName.getText() == "Panel 3"){
                                    final String AdvrName = AdvertizementTextField.getText();
                                     
                                   String fileName = null;
                                   String Panel3_Path = null;
                                   
                                        fileName = AdvrName+"_"+dateToFilename+"_"+m_jImage.fileName;
                                        Panel3_Path = Panel3_Def_Path + fileName;
                                  
                                    File TargetFile = new File(Panel3_Path)  ; 
                                        //File srcFile = =JImageEditor.filePath;
                                        try {
                                            FileUtils.copyFile(m_jImage.filePath,TargetFile);
                                        } catch (IOException ex) {
                                            Logger.getLogger(MemberKiosk.class.getName()).log(Level.SEVERE, null, ex);
                                            throw new BasicException(ex.getMessage());
                                        }
                                   
                                     int update_panel3 =  new PreparedSentence(m_App.getSession(), "UPDATE PANELTHREE  SET ACTIVE=1 , PANELNAME=?,AdvertiserName=? ,PATH=?,  FROMDATE=? , TODATE=?, TIMEINTERVAL=? , "
                                             + "LINKTOWEB=? , NOTES=? , CRBY=? , CRHOST=? , CRDATE=? WHERE ID = ? ", new SerializerWriteBasic(new Datas[]{Datas.STRING ,Datas.STRING,Datas.STRING , Datas.TIMESTAMP ,Datas.TIMESTAMP , Datas.INT ,   Datas.STRING ,Datas.STRING , Datas.STRING , Datas.STRING , Datas.TIMESTAMP, Datas.STRING})).exec
                                             (new Object[]{Panel_name , AdvrName ,fileName ,  from_date , to_date , time_interval ,link , notes ,  m_App.getAppUserView().getUser().getName() ,m_App.getProperties().getHost(),new Date() , id});
                                    
                                        
                                        
                                       
                                        
                                        panel.setVisible(false);
                                        main.setVisible(true); 
                                        reset();
                                        loaddata2();
                                        JOptionPane.showMessageDialog(this, " Data Updated Successfully..!! ", "Data Saved..!! ", JOptionPane.INFORMATION_MESSAGE);
                          
                                    
                                    
                                }
                                
                                
                    }
                    catch(BasicException ex){
                        Logger.getLogger(Notice.class.getName()).log(Level.SEVERE, null, ex);
                       new MessageInf(ex).show(getParent());
                    }
                   
                   
               }
                   else
                   {
                   JOptionPane.showMessageDialog(this, " Please Select An Image", "Data Required",JOptionPane.ERROR_MESSAGE);
               }}
               
           }
       }
    
}//GEN-LAST:event_jButton4ActionPerformed

private void TargetFileNewsLetterAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TargetFileNewsLetterAncestorAdded
// TODO add your handling code here:
}//GEN-LAST:event_TargetFileNewsLetterAncestorAdded

private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
 try {
            NewsLetter_path  = (String) new StaticSentence(m_App.getSession(), "SELECT NEWSLETTERPATH FROM clubdetailskiosk where active = true", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).find();
           NewsLetter_Name = (String) new StaticSentence(m_App.getSession(), "SELECT NEWSLETTER FROM clubdetailskiosk where active = true", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).find();
  } 
  catch (BasicException ex) {
            Logger.getLogger(MemberKiosk.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    String OpenFile = NewsLetter_path+NewsLetter_Name;
    File file = new File(OpenFile);
        try {
            if(NewsLetter_Name!=null){
               
            Desktop.getDesktop().open(file);
               
            }
            else{
                JOptionPane.showMessageDialog(this, "There Is No Current Active NewsLetter", "Enter details", JOptionPane.ERROR_MESSAGE);
            }
        } catch (IOException ex) {
            Logger.getLogger(MemberKiosk.class.getName()).log(Level.SEVERE, null, ex);
        }
        
         NewsLetterPanel.setVisible(false);
         main.setVisible(true);
}//GEN-LAST:event_jButton5ActionPerformed

private void jCheckBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox2ItemStateChanged
    loaddata2();
}//GEN-LAST:event_jCheckBox2ItemStateChanged

    private void TimeInSecTextFeildKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TimeInSecTextFeildKeyReleased
char c = evt.getKeyChar();
    if(c!=KeyEvent.VK_BACK_SPACE && c!=KeyEvent.VK_TAB && c!=KeyEvent.VK_ESCAPE && c!=KeyEvent.VK_ENTER && c!=KeyEvent.VK_CONTROL && c!=KeyEvent.VK_SHIFT)
    {
    if(!Character.isDigit(c))
    {
         TimeInSecTextFeild.setText(null);  
        JOptionPane.showMessageDialog(TimeInSecTextFeild, "Please enter only numbers..");
          
            
    }
    }        
    }//GEN-LAST:event_TimeInSecTextFeildKeyReleased

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
       if(jTabbedPane1.getSelectedIndex()==1 || jTabbedPane1.getSelectedIndex()==2)
       {
           reset();
       }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AdvertizePanel;
    private javax.swing.JTextField AdvertizementTextField;
    private javax.swing.JButton Cancel;
    private javax.swing.JButton DateButton;
    private javax.swing.JButton DeactivatePanel;
    private javax.swing.JButton EventDateButton;
    private javax.swing.JLabel EventDateLabel;
    private javax.swing.JTextField EventDateTextField;
    private javax.swing.JLabel FromDateLable;
    private javax.swing.JTextField FromDateTextField;
    private java.awt.Panel Image_Panel;
    private javax.swing.JTextField LinkTextField;
    private javax.swing.JButton NewsCancelButton;
    private javax.swing.JLabel NewsFileName;
    private javax.swing.JLabel NewsLetter;
    private javax.swing.JButton NewsLetterButton;
    private javax.swing.JPanel NewsLetterPanel;
    private javax.swing.JButton NewsSaveButton;
    private javax.swing.JTextArea NotesTextArea;
    private javax.swing.JButton Panel2Button;
    private javax.swing.JButton Panel3Button;
    private javax.swing.JButton Panel3Deactivater;
    private javax.swing.JButton Panel4Button;
    private javax.swing.JLabel PanelName;
    private javax.swing.JLabel PanelNameLable;
    private javax.swing.JTextField PanelNameTextField;
    private javax.swing.JButton Save;
    private javax.swing.JLabel SourceFileNewsLetter;
    private javax.swing.JPanel TabOnePanel;
    private javax.swing.JLabel TargetFileNewsLetter;
    private javax.swing.JLabel TimeInSecLable;
    private javax.swing.JTextField TimeInSecTextFeild;
    private javax.swing.JButton ToDateButton;
    private javax.swing.JLabel ToDateLable;
    private javax.swing.JTextField ToDateTextField;
    private javax.swing.JLabel UploadFileLable;
    private javax.swing.JButton View;
    private javax.swing.JButton ViewPanelImg;
    private javax.swing.JTextField count;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JTextField imgName;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private com.openbravo.data.gui.JImageEditor m_jImage;
    private javax.swing.JPanel main;
    private javax.swing.JPanel main2;
    private javax.swing.JPanel panel;
    private java.awt.Panel panel1;
    private javax.swing.JButton panel1Button;
    // End of variables declaration//GEN-END:variables
    
    
           
            
    public String getTitle() {
        return "";
    }

    public void activate() throws BasicException {
        reset();
        loaddata();
        loaddata2();
    }

    public boolean deactivate() {
        return true;
    }

    public JComponent getComponent() {
        return this;
    }

    public void init(AppView app) throws BeanFactoryException {
        
        
        this.m_App = app;
        
         loaddata();
         loaddata2();
    }

    public Object getBean() {
        return this;
    }
    
    public void reset()
    {NewsLetterPanel.setVisible(false);
        imgName.setText(null);
        panel.setVisible(false);
    main.setVisible(true);
    count.setText("30");
     PanelNameTextField.setText(null); 
     EventDateTextField.setText(null);
    FromDateTextField.setText(null);
    ToDateTextField.setText(null);
    TimeInSecTextFeild.setText(null);
    PanelName.setText(null);
    NotesTextArea.setText(null);
    LinkTextField.setText(null);
   Image_Panel.setVisible(false);
    View.setEnabled(false);
    ViewPanelImg.setEnabled(false);
    AdvertizementTextField.setText(null);
    DeactivatePanel.setEnabled(false);
     jButton1.setEnabled(false);
    Panel3Deactivater.setEnabled(false);
    jButton3.setEnabled(false);
     jPanel9.setVisible(true);
    }
    
    
    public void showPanelInfo(PanelTableModel panelTable){
        jTable1.setModel(panelTable.getTableModel());
        
        jTable1.setPreferredScrollableViewportSize(jTable1.getPreferredSize());
        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    
        
    }
    
    
    public void showAdvertizeInfo(PanelTableModel panelTable2){
        
        jTable2.setModel(panelTable2.getTableModel2());
        jTable2.setPreferredScrollableViewportSize(jTable2.getPreferredSize());
        jTable2.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
    }
    
    class FixedSizeDocument2 extends PlainDocument{
private int max = 10;
public FixedSizeDocument2(int max)
{
this.max = max;
count.setText(""+(max-getLength()));
}

@Override
public void insertString(int offs, String str, AttributeSet a) throws BadLocationException
{
    if(!str.equals("\n"))
    {
if (getLength()+str.length()>max)
{
// If it does, then truncate it
str = str.substring(0, max - getLength());
}

super.insertString(offs, str, a);
count.setText(""+(max-getLength()));

}}

@Override
protected void removeUpdate(DefaultDocumentEvent chng) {
count.setText(""+(max-getLength()+1));
}

}
   
}