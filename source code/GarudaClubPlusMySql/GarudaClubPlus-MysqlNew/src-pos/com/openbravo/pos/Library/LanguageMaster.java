/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.openbravo.pos.Library;

import com.openbravo.basic.BasicException;
import com.openbravo.data.loader.Datas;
import com.openbravo.data.loader.PreparedSentence;
import com.openbravo.data.loader.SerializerReadInteger;
import com.openbravo.data.loader.SerializerWriteBasic;
import com.openbravo.data.loader.SerializerWriteString;
import com.openbravo.data.loader.StaticSentence;
import com.openbravo.pos.Library.Lib_LangTableModel.lib_Langline;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.BeanFactoryApp;
import com.openbravo.pos.forms.BeanFactoryException;
import com.openbravo.pos.forms.JPanelView;
import java.awt.Color;
import java.awt.Component;
import java.util.Date;
import java.util.UUID;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author Santhosh
 */
public class LanguageMaster extends javax.swing.JPanel implements JPanelView,BeanFactoryApp{
    private AppView m_App;
    Lib_LangTableModel lmodel;
    private String l_id;
    private String deact1_id;

    /** Creates new form LanguageMaster */
    public LanguageMaster() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lname_txt = new javax.swing.JTextField();
        Save = new javax.swing.JButton();
        savechange = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable1 =  new javax.swing.JTable(){public Component prepareRenderer(TableCellRenderer renderer,
            int rowIndex, int vColIndex) {
            Component c = super.prepareRenderer(renderer, rowIndex, vColIndex);
            if (c instanceof JComponent) {
                JComponent jc = (JComponent)c;
                jc.setToolTipText(String.valueOf(getValueAt(rowIndex, vColIndex)));

                if (rowIndex % 2 == 0 && !isCellSelected(rowIndex, vColIndex)) {
                    jc.setBackground(Color.lightGray);
                }
                else {
                    jc.setBackground(Color.white);
                }
                if(isCellSelected(rowIndex, vColIndex))
                jc.setBackground(Color.cyan);
            }
            return c;
        }};
        jCheckBox1 = new javax.swing.JCheckBox();
        edit = new javax.swing.JButton();
        deact = new javax.swing.JButton();

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jLabel1.setText("Name");

        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        savechange.setText("SaveChanges");
        savechange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savechangeActionPerformed(evt);
            }
        });

        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(lname_txt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 290, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(Save, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 76, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(savechange, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(115, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(61, 61, 61)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(lname_txt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(savechange)
                    .add(Save)
                    .add(jButton1))
                .addContainerGap(410, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("CreateNew", jPanel1);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane6.setViewportView(jTable1);

        jCheckBox1.setText("Show All");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        deact.setText("Deactivate");
        deact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deactActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap(513, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                        .add(jCheckBox1)
                        .add(37, 37, 37))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                        .add(edit)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(deact)
                        .add(69, 69, 69))))
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jScrollPane6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 738, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jPanel2Layout.linkSize(new java.awt.Component[] {deact, edit}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jCheckBox1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 423, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(edit)
                    .add(deact))
                .addContainerGap())
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel2Layout.createSequentialGroup()
                    .add(54, 54, 54)
                    .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 368, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(78, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("ListView", jPanel2);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 770, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(jTabbedPane1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
       
        try{
        if( lname_txt.getText().length()>0 ){
            int count=Integer.valueOf(new StaticSentence(m_App.getSession()
                    , "SELECT COUNT(*) FROM lib_language WHERE NAME=? AND ACTIVE=TRUE"
                    ,SerializerWriteString.INSTANCE
                    ,SerializerReadInteger.INSTANCE).find(lname_txt.getText()).toString());  
                if(count==0){
                   if(lname_txt.getText().length()>0 ){
                        insertlib_language();
                   }
                   
                }else{
                JOptionPane.showMessageDialog(this, "Language with the name "+lname_txt.getText()+" already exist", null, JOptionPane.OK_OPTION);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Please ensure that Language Name is not empty", null, JOptionPane.OK_OPTION);
        }
        
        }catch(Exception e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_SaveActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
       try {
            if (jCheckBox1.isSelected() == true) {
                lmodel = Lib_LangTableModel.loadInstance(m_App, 2);
                jTable1.setModel(lmodel.getTableModel());
            } else if (jCheckBox1.isSelected() == false) {
                lmodel = Lib_LangTableModel.loadInstance(m_App, 1);
                jTable1.setModel(lmodel.getTableModel());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        javax.swing.JTabbedPane tabpane=(javax.swing.JTabbedPane)evt.getSource();
        int tabno=tabpane.getSelectedIndex();
        jCheckBox1.setSelected(false);
        if(tabno==1){
            try {
                lmodel = Lib_LangTableModel.loadInstance(m_App,1);

                jTable1.setModel(lmodel.getTableModel());
            }catch (BasicException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
       
        if(jTable1.getSelectedRow()!=-1){
            int pub = JOptionPane.showConfirmDialog(jPanel1, " Do you want to Edit Data ?? " , "Editing Menu" , JOptionPane.YES_NO_OPTION);
            if(pub == JOptionPane.YES_OPTION){
                if(jTable1.getSelectedRow()<lmodel.getSize()){
                    int row = jTable1.getSelectedRow();
                    if (Boolean.valueOf(jTable1.getModel().getValueAt(row, 7).toString())) {
                   lib_Langline data = lmodel.getList().get(row);
                    savechange.setVisible(true);
                    Save.setVisible(false);
                    l_id=data.getId();
                    String name1=data.getName();
     
                    lname_txt.setText(name1);
                     jTabbedPane1.setSelectedIndex(0);
                     }else {
                    JOptionPane.showMessageDialog(this, "selected Language is deactivated.cannot edit it");
                }
                }
            }
        }
        
    }//GEN-LAST:event_editActionPerformed

    private void deactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deactActionPerformed
       
        if(jTable1.getSelectedRow()!=-1){
            int bill = JOptionPane.showConfirmDialog(jPanel1, " Do you want to deactivate ?? " , "Deactivation" , JOptionPane.YES_NO_OPTION);
             if(bill == JOptionPane.YES_OPTION){
                  if(jTable1.getSelectedRow() < lmodel.getSize()){
                     int row = jTable1.getSelectedRow(); 
                     if (Boolean.valueOf(jTable1.getModel().getValueAt(row, 7).toString())) {
                     lib_Langline showdata = lmodel.getList().get(row);
                     deact1_id=showdata.getId();
                     deact_language();
                     }else {
                    JOptionPane.showMessageDialog(this, "selected Language is already deactivated.");
                }
                  }
             }
         } 
        
    }//GEN-LAST:event_deactActionPerformed

    private void savechangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savechangeActionPerformed
        
        try{
        if( lname_txt.getText().length()>0 ){
            int count=Integer.valueOf(new StaticSentence(m_App.getSession()
                    , "SELECT COUNT(*) FROM lib_language WHERE NAME=? AND ACTIVE=TRUE"
                    ,SerializerWriteString.INSTANCE
                    ,SerializerReadInteger.INSTANCE).find(lname_txt.getText()).toString());  
                if(count==0){
                   if(lname_txt.getText().length()>0 ){
                        Update_language();
                   }
                   
                }else{
                JOptionPane.showMessageDialog(this, "Language with the name "+lname_txt.getText()+" already exist", null, JOptionPane.OK_OPTION);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Please ensure that Language Name is not empty", null, JOptionPane.OK_OPTION);
        }
        
        }catch(Exception e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_savechangeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        reset();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Save;
    private javax.swing.JButton deact;
    private javax.swing.JButton edit;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField lname_txt;
    private javax.swing.JButton savechange;
    // End of variables declaration//GEN-END:variables

    @Override
    public String getTitle() {
       return "Library Language Management";
    }

    @Override
    public void activate() throws BasicException {
        reset();
        
    }

    @Override
    public boolean deactivate() {
        return true;
    }

    @Override
    public JComponent getComponent() {
         return this;
    }

    @Override
    public void init(AppView app) throws BeanFactoryException {
        m_App=app;
    }

    @Override
    public Object getBean() {
        return this;
    }
    
     public void reset(){
         
         lname_txt.setText(null);
         Save.setVisible(true);
         savechange.setVisible(false);
         jTabbedPane1.setSelectedIndex(0);
         jCheckBox1.setSelected(false);
     }
     private void insertlib_language() {
        
         try{
          if(lname_txt.getText().length()>0){
              
             Object[] param=new Object[]{UUID.randomUUID().toString(),lname_txt.getText(),m_App.getAppUserView().getUser().getName(),new Date(),m_App.getProperties().getHost(),true};
             new PreparedSentence(m_App.getSession()
                , "INSERT INTO lib_language (ID,NAME,CREATEDBY,CREATEDATE,CREATEDHOST,ACTIVE) VALUES (?,?,?,?,?,?)"
                , new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.STRING,Datas.STRING,Datas.TIMESTAMP,Datas.STRING,Datas.BOOLEAN})).exec(param);
          JOptionPane.showMessageDialog(this, "Created Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);
           }

          
          reset();  
              
          
         }catch(NullPointerException e){
          
        e.printStackTrace();
      }
      catch(Exception e){
       e.printStackTrace();
      }
    }
     
     
     private void Update_language() {
           
           try{
          if(lname_txt.getText().length()>0){
           
             Object[] param=new Object[]{lname_txt.getText(),m_App.getAppUserView().getUser().getName(),new Date(),m_App.getProperties().getHost(),true,l_id};
             new PreparedSentence(m_App.getSession()
                , "UPDATE lib_language SET NAME=?,CREATEDBY=?,CREATEDATE=?,CREATEDHOST=?,ACTIVE=? WHERE ID=?"
                , new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.STRING,Datas.TIMESTAMP,Datas.STRING,Datas.BOOLEAN,Datas.STRING})).exec(param);   
             JOptionPane.showMessageDialog(this, "Updated Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);
           }

           lmodel  = Lib_LangTableModel.loadInstance(m_App,1);
           jTable1.setModel(lmodel.getTableModel()); 
          reset(); 
              
         }catch(NullPointerException e){
          
        e.printStackTrace();
      }
      catch(Exception e){
       e.printStackTrace();
      }
           
           
       }
     
     private void deact_language() {
           try{
           String newbookId = UUID.randomUUID().toString();
           
             new PreparedSentence(m_App.getSession(), "UPDATE lib_language  SET ID=?, ACTIVE=0  , DEACTBY=? , DEACTDATE=? , DEACTHOST=?,DEACTREFERENCE=? WHERE ID = ? and DEACTBY is null and DEACTDATE is null"
                                                                           , new SerializerWriteBasic(new Datas[]{ Datas.STRING ,Datas.STRING , Datas.TIMESTAMP , Datas.STRING ,Datas.STRING , Datas.STRING })).exec
                                                                            (new Object[]{ newbookId, m_App.getAppUserView().getUser().getName() ,new Date(), m_App.getProperties().getHost(),deact1_id , deact1_id  });
       lmodel  = Lib_LangTableModel.loadInstance(m_App,1);
       jTable1.setModel(lmodel.getTableModel()); 
       
       reset();
       JOptionPane.showMessageDialog(this, "De-Activated Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);
           }catch(NullPointerException e){
          
        e.printStackTrace();
      }
      catch(Exception e){
       e.printStackTrace();
      }
     }

}
