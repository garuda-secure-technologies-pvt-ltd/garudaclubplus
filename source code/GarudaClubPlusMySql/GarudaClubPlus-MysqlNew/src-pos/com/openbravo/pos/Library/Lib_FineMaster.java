/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.openbravo.pos.Library;

import com.openbravo.basic.BasicException;
import com.openbravo.data.gui.ComboBoxValModel;
import com.openbravo.data.loader.Datas;
import com.openbravo.data.loader.PreparedSentence;
import com.openbravo.data.loader.SerializerReadBasic;
import com.openbravo.data.loader.SerializerReadInteger;
import com.openbravo.data.loader.SerializerReadString;
import com.openbravo.data.loader.SerializerWriteBasic;
import com.openbravo.data.loader.SerializerWriteParams;
import com.openbravo.data.loader.SerializerWriteString;
import com.openbravo.data.loader.StaticSentence;
import com.openbravo.pos.clubmang.DataLogicFacilities;
import com.openbravo.pos.clubmang.Facility;
import com.openbravo.pos.clubmang.FacilityApprovalRitesModel;
import com.openbravo.pos.Library.CategoryMaster;
import com.openbravo.pos.clubmang.MemCat;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.BeanFactoryApp;
import com.openbravo.pos.forms.BeanFactoryException;
import com.openbravo.pos.forms.JPanelView;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractListModel;
import javax.swing.ButtonGroup;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import java.util.Arrays;

/**
 *
 * @author dev1
 */
public class Lib_FineMaster extends javax.swing.JPanel implements JPanelView,BeanFactoryApp{

    private AppView m_App;
    
    private Lib_FineTableModel amodel;
    private DataLogicFacilities dlfac;
    private DataLogicFacilities dlaac;
    private ComboBoxValModel catmodel;
    private List mlist;
    private String id; 
    private List<Object> mlist_id;
    private List<MemCat> allist;
    private AllUsersListModel aumodel;
    private AllUsersListModel cfmodel;
    private AllUsersListModel fdmodel;
    private AllUsersListModel fmodel;
    private AllUsersListModel dmodel;
    private List arryfine=new ArrayList();//to store fine_amount
    private List arrydays=new ArrayList();//to store no_of_days
    private List finelist=new ArrayList();//get the fine and no of days
    private List dayslist=new ArrayList();
    private String fine_amount;
    private String no_of_days;
    private List l;
    private List list= new ArrayList();
    private List list1= new ArrayList();
    private List l1= new ArrayList();
    private List fined_no= new ArrayList();
    private List<Object> catid_list;
    private List<Object> catid_list1;
    private List cat_nor=new ArrayList();
    private List id_no=new ArrayList();
    private List<Object> x1;
    private List<Object> memshiptype1;
    private List<Object> c_fa_memtype;
    private String[] memarry;
    private List<Object> memlist;
    private List templist;
    private String f_id;
    String Dact;
   
    /** Creates new form Lib_FineMaster */
    public Lib_FineMaster() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        addmemtype = new javax.swing.JButton();
        removememberbutton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList();
        addfineamt = new javax.swing.JButton();
        removefineamt = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        refresh = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        savechanges = new javax.swing.JButton();

        jLabel2.setText("Book Category :");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jLabel3.setText("Select MemberShip Types :");

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        addmemtype.setText("Add");
        addmemtype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addmemtypeActionPerformed(evt);
            }
        });

        removememberbutton.setText("Remove");
        removememberbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removememberbuttonActionPerformed(evt);
            }
        });

        jList2.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList2);

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });

        jLabel5.setText("Fine Amount");

        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });

        jLabel6.setText("Up to these Number of days");

        jList3.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jList3);

        addfineamt.setText("Add");
        addfineamt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addfineamtActionPerformed(evt);
            }
        });

        removefineamt.setText("Remove");
        removefineamt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removefineamtActionPerformed(evt);
            }
        });

        jRadioButton1.setText("All");
        jRadioButton1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButton1StateChanged(evt);
            }
        });
        jRadioButton1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton1ItemStateChanged(evt);
            }
        });

        jRadioButton2.setText("MembershipType");
        jRadioButton2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton2ItemStateChanged(evt);
            }
        });

        jLabel4.setText("Fine Amount and Up to Number of days");

        refresh.setIcon(new javax.swing.ImageIcon("/home/dev1/ProjectCRNum/ProjectCRNum/source code/GarudaClubPlusMySql/GarudaClubPlus-MysqlNew/src-beans/com/openbravo/images/reload.png")); // NOI18N
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 237, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(44, 44, 44)
                        .add(refresh))
                    .add(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jLabel3)
                                .add(18, 18, 18)
                                .add(jRadioButton1)
                                .add(18, 18, 18)
                                .add(jRadioButton2))
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jLabel5)
                                .add(18, 18, 18)
                                .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel6)
                                .add(18, 18, 18)
                                .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(addfineamt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 76, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(19, 19, 19)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 196, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(removememberbutton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(addmemtype, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .add(18, 18, 18)
                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 196, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(33, 33, 33)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jScrollPane3))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(removefineamt)))
                .addContainerGap(167, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(37, 37, 37)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(refresh))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(jRadioButton1)
                    .add(jRadioButton2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(addmemtype)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 80, Short.MAX_VALUE)
                        .add(removememberbutton)))
                .add(18, 18, 18)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel5)
                    .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6)
                    .add(addfineamt))
                .add(32, 32, 32)
                .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 153, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(46, 46, 46)
                        .add(removefineamt)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jButton5.setText("save");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setText("cancel");

        savechanges.setText("save changes");
        savechanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savechangesActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 3, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(savechanges)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton5)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(104, 104, 104))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(35, 35, 35)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton5)
                    .add(jButton7)
                    .add(savechanges))
                .add(0, 41, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    
    
     
    private void addmemtypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addmemtypeActionPerformed
        
       int row=jList1.getSelectedIndex();
            if(row>=0){
            
                MemCat Memtyp=new MemCat();
               Memtyp =(MemCat) aumodel.getElementAt(row);
                String memtypid=Memtyp.getID();
                //String memname=Memtyp.getMemberCategory();
                if(!l1.contains(memtypid)){ 
                l1.add(memtypid);
                }
               
                 //for(int i=0;i<l1.size();i++){
               //List lst=(List)new StaticSentence(m_App.getSession(), "SELECT name FROM memtype  WHERE id=? ",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).list(memtypid);
                 //}
                if(!list.contains(Memtyp.getMemberCategory())){
                list.add(Memtyp.getMemberCategory());
                cfmodel=new AllUsersListModel(list);
                jList2.setModel(cfmodel);
                jList1.clearSelection();
                if(jList2.isSelectionEmpty()==true){
                    jTextField2.setEditable(true);
                    jTextField3.setEditable(true);
                }
                
                } else{
                       JOptionPane.showMessageDialog(this, "Membership Type is Already Exist"); 
                        }
                
         
                
                
            
            }
                    // TODO add your handling code here:
    }//GEN-LAST:event_addmemtypeActionPerformed
    
    
    private void addfineamtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addfineamtActionPerformed
                if(jTextField2.getText().length()>0){
            if( jTextField3.getText().length()>0){
                try {
                    
                    
                    jList3.setVisible(true);
                    //String catname=jComboBox1.getSelectedItem().toString();
                    fine_amount=jTextField2.getText();
                    no_of_days=jTextField3.getText();
                    
                    arryfine.add(fine_amount);
                    arrydays.add(no_of_days);
                    String fine_days="fine  :"+fine_amount+" Rs.    "+no_of_days+" days.";
                    if(!list1.contains(fine_days)){
                    
                    list1.add(fine_days.toString());
                    
                    //fmodel =new AllUsersListModel(arryfine);
                    
                    //dmodel =new AllUsersListModel(arrydays);
                   
                
                    fdmodel =new AllUsersListModel(list1);
                    jList3.setModel(fdmodel);
                    
                    
                    
                    
                    
                  
                    /*String catname=jComboBox1.getSelectedItem().toString();
                    catid_list = (List<Object>) new StaticSentence(m_App.getSession(), "SELECT id FROM lib_categories where name=? and active=true ",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).list(catname);
                    cat_nor.add(catid_list);*/
                    //jTextField2.setText("hello");
                     jTextField2.setText(null);
                   jTextField3.setText(null);
                    
                    
                    
                    
                    }else{
                        JOptionPane.showMessageDialog(this, "Fine Amount and No of Days Already Exist");
                    }
                    
                    jTextField2.setText(null);
                   jTextField3.setText(null);
                    
                } catch (Exception ex) {
                    Logger.getLogger(Lib_FineMaster.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Please Enter No Of Days");
            }
        }else{
            JOptionPane.showMessageDialog(this, "please Enter Fine Amount");
        }
                // TODO add your handling code here:
    }//GEN-LAST:event_addfineamtActionPerformed

    private void jRadioButton1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButton1StateChanged
        if(jRadioButton1.isSelected())
        {
        jList1.setVisible(false);
        jList2.setVisible(false);
        addmemtype.setVisible(false);
        removememberbutton.setVisible(false);
        jScrollPane1.setVisible(false);
        jScrollPane2.setVisible(false);
        jTextField2.setEditable(true);
        jTextField3.setEditable(true);
        }
        else
        {
        jList1.setVisible(true);
        jList2.setVisible(true);
        addmemtype.setVisible(true);
        removememberbutton.setVisible(true);
        jScrollPane1.setVisible(true);
        jScrollPane2.setVisible(true); 
        
        }// TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1StateChanged

    private void jRadioButton2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton2ItemStateChanged
        if(jRadioButton2.isSelected())
        {
        jList1.setVisible(true);
        jList2.setVisible(true);
        addmemtype.setVisible(true);
        removememberbutton.setVisible(true);
        jScrollPane1.setVisible(true);
        jScrollPane2.setVisible(true); 
        jTextField2.setEditable(false);
        jTextField3.setEditable(false);
        }
        else
        {
         jList1.setVisible(false);
            jList2.setVisible(false);
            addmemtype.setVisible(false);
            removememberbutton.setVisible(false);
            jScrollPane1.setVisible(false);
            jScrollPane2.setVisible(false);
        }// TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ItemStateChanged

    private void removememberbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removememberbuttonActionPerformed
            int row=jList2.getSelectedIndex();
            if(row>=0){
            
               // MemCat Memtyp=new MemCat();
               //Memtyp =(MemCat) cfmodel.getElementAt(row);
                //String memtypid=Memtyp.getID();
                String remv=jList2.getSelectedValue().toString();
                 l1.remove(remv);
                 //for(int i=0;i<l1.size();i++){
               //List lst=(List)new StaticSentence(m_App.getSession(), "SELECT name FROM memtype  WHERE id=? ",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).list(memtypid);
                 //}
               
                list.remove(remv);
                cfmodel=new AllUsersListModel(list);
                jList2.setModel(cfmodel);
                jList2.clearSelection();
                if(jList2.getModel().getSize()==0 ){
                    jTextField2.setEditable(false);
                    jTextField3.setEditable(false);
                }
             
            
            }
                   
            //fine_days.remove(row);
             
            
           // TODO add your handling code here:
    }//GEN-LAST:event_removememberbuttonActionPerformed

    private void removefineamtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removefineamtActionPerformed
        
        
        int row=jList3.getSelectedIndex();
            if(row>=0){
            
            String remv=jList3.getSelectedValue().toString();
            if(list1.contains(remv)){
            list1.remove(remv);
            fdmodel=new AllUsersListModel(list1);
           jList3.setModel(fdmodel);
           arryfine.remove(fine_amount);
           arrydays.remove(no_of_days);
           jList3.clearSelection();

 }  
            
            }// TODO add your handling code here:
    }//GEN-LAST:event_removefineamtActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
          String memtype ="";
          String catgtype = "";
          String fine_amountS="";
            String no_of_days1="";
            String ID="";
            //f_id=Datas.getId();
          if(catmodel.getSize()>0 && jList3.getModel().getSize()>0)
          {
          try {
                  
                    /*for(int l=0;l<arrydays.size();l++){
                       no_of_days=no_of_days+arrydays.get(l).toString()+"#";
                    }*/
        int count=Integer.valueOf(new StaticSentence(m_App.getSession()
                    , "SELECT COUNT(*) FROM lib_finemaster WHERE memshiptype=? AND ACTIVE=TRUE"
                    ,SerializerWriteString.INSTANCE
                    ,SerializerReadInteger.INSTANCE).find("All").toString());
        
      if(jRadioButton1.isSelected()){
                        
                        memtype="All";
                        
                    }else if(jRadioButton2.isSelected()){
                        for(int i=0;i<list.size();i++){
                            memtype=memtype+list.get(i).toString()+"#";
                        }
                    }else{
                        JOptionPane.showMessageDialog(this, "please select the MemberShip Type");
                    }
                      
                      for(int k=0;k<arryfine.size();k++){
                        fine_amountS=fine_amountS+arryfine.get(k).toString()+"#";
                        
                      }
                      
                      for(int l=0;l<arrydays.size();l++){
                       no_of_days1=no_of_days1+arrydays.get(l).toString()+"#";
                    }
                      
                      
                   
                       String catname=jComboBox1.getSelectedItem().toString();
                    catid_list = (List<Object>) new StaticSentence(m_App.getSession(), "SELECT id FROM lib_categories where name=? and active=true ",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).list(catname);
                    cat_nor.add(catid_list);
                   // jComboBox1.setSelectedIndex(-1);
                   
                      
                      
                      for(int j=0;j<cat_nor.size();j++){
                        catgtype=catgtype+cat_nor.get(j).toString();
                    }
                    
                     
                    catid_list1 = (List<Object>) new StaticSentence(m_App.getSession(), "SELECT id FROM lib_finemaster where category_id=? and  active=true ",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).list(catgtype);
                    if(catid_list1.isEmpty()==true){
  
  
                     if(memtype.equals("All")){
                    Object[] param=new Object[]{UUID.randomUUID().toString(),catgtype,no_of_days1,memtype,fine_amountS,m_App.getAppUserView().getUser().getName(),new Date(),m_App.getProperties().getHost(),true};
                    new PreparedSentence(m_App.getSession()
                            , "INSERT INTO lib_finemaster (ID,CATEGORY_ID,NO_DAYS,MEMSHIPTYPE,FINEAMOUNT,CREATEDBY,CREATEDATE,CREATEDHOST,ACTIVE) VALUES (?,?,?,?,?,?,?,?,?)"
                            , new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.STRING,Datas.STRING,Datas.STRING,Datas.STRING,Datas.STRING,Datas.TIMESTAMP,Datas.STRING,Datas.BOOLEAN})).exec(param);  
                    
                    JOptionPane.showMessageDialog(this, "Inserted Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    }  else if(!memtype.equals("All") ){
                Object[] param=new Object[]{UUID.randomUUID().toString(),catgtype,no_of_days1,memtype,fine_amountS,m_App.getAppUserView().getUser().getName(),new Date(),m_App.getProperties().getHost(),true};
                    new PreparedSentence(m_App.getSession()
                            , "INSERT INTO lib_finemaster (ID,CATEGORY_ID,NO_DAYS,MEMSHIPTYPE,FINEAMOUNT,CREATEDBY,CREATEDATE,CREATEDHOST,ACTIVE) VALUES (?,?,?,?,?,?,?,?,?)"
                            , new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.STRING,Datas.STRING,Datas.STRING,Datas.STRING,Datas.STRING,Datas.TIMESTAMP,Datas.STRING,Datas.BOOLEAN})).exec(param);  
                    
                    JOptionPane.showMessageDialog(this, "Inserted Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(this, "For memtype ALL is already exist", null, JOptionPane.OK_OPTION);
                
            } 
                    //}else{
                      // JOptionPane.showMessageDialog(this, "Fine amount and memtype is already exist", null, JOptionPane.OK_OPTION); 
                    //}
                    
                    }else{
                           //JOptionPane.showMessageDialog(this, "Book Id is already Exist", null, JOptionPane.OK_OPTION);
                         f_id=catid_list1.toString();//for updating.. data id 
                         f_id=f_id.substring(1,f_id.length()-1);
                     //if(memtype.equals("All") ){
                    Object[] param=new Object[]{no_of_days1,memtype,fine_amountS,m_App.getAppUserView().getUser().getName(),new Date(),m_App.getProperties().getHost(),true,f_id};
                    new PreparedSentence(m_App.getSession()
                            , "UPDATE lib_finemaster set NO_DAYS=?,MEMSHIPTYPE=?,FINEAMOUNT=?,CREATEDBY=?,CREATEDATE=?,CREATEDHOST=?,ACTIVE=? WHERE ID=?"
                            , new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.STRING,Datas.STRING,Datas.STRING,Datas.TIMESTAMP,Datas.STRING,Datas.BOOLEAN,Datas.STRING})).exec(param);  
                    
                    JOptionPane.showMessageDialog(this, "Updated Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);
                  
                    }
        
                    reset();
                    cat_nor.clear();
                     list.clear();
                     list1.clear();
                     l1.clear();
                     cfmodel=new AllUsersListModel(list);
                     jList2.setModel(cfmodel);
                     fdmodel=new AllUsersListModel(list1);
                     jList3.setModel(fdmodel);
                     arrydays.clear();
                     arryfine.clear();
                     jComboBox1.setSelectedIndex(-1);
                     
       
          }
            catch (BasicException ex) {
                    Logger.getLogger(Lib_FineMaster.class.getName()).log(Level.SEVERE, null, ex);
                }
          }
           else
          {
              JOptionPane.showMessageDialog(this, "please select the book category,fine amount and memtype");
          }
// TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
       char value1 = evt.getKeyChar();
        if (!(Character.isDigit(value1) ||(value1==KeyEvent.VK_BACK_SPACE) ||value1==KeyEvent.VK_DELETE)) {
            evt.consume();
        }  // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2KeyTyped

    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyTyped
       char value1 = evt.getKeyChar();
        if (!(Character.isDigit(value1) ||(value1==KeyEvent.VK_BACK_SPACE) ||value1==KeyEvent.VK_DELETE)) {
            evt.consume();
        } // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3KeyTyped

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
       // String catgtype = "";
        String fine_days="";
        list.clear();
        list1.clear();
        arryfine.clear();
        arrydays.clear();
         jList3.setVisible(true);
         jList3.clearSelection();
         jList2.clearSelection();
         fdmodel=new AllUsersListModel(list1);
           jList3.setModel(fdmodel);
           cfmodel=new AllUsersListModel(list);
                jList2.setModel(cfmodel);
         String catname=jComboBox1.getSelectedItem().toString();
        int r =jComboBox1.getSelectedIndex();
       
  
        if(r>=0){
        try{
            //if()
        //String catname=jComboBox1.getSelectedItem().toString();
        String x = (String) new StaticSentence(m_App.getSession(), "SELECT id FROM lib_categories where name=? and  active=true ",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).list(catname).toString();
        
        memshiptype1 =(List<Object>) new StaticSentence(m_App.getSession(), "SELECT memshiptype FROM lib_finemaster where category_id=? and  active=true ",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).list(x);
        //String n=listToString(memshiptype1);
        String y=(String) new StaticSentence(m_App.getSession(), "SELECT memshiptype FROM lib_finemaster where category_id=? and  active=true ",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).list(x).toString();
        String f=(String)new StaticSentence(m_App.getSession(),"SELECT fineamount FROM lib_finemaster where category_id=? and active=true", SerializerWriteString.INSTANCE ,SerializerReadString.INSTANCE).list(x).toString();
        String d=(String)new StaticSentence(m_App.getSession(),"SELECT no_days FROM lib_finemaster where category_id=? and active=true", SerializerWriteString.INSTANCE ,SerializerReadString.INSTANCE).list(x).toString();
        if(memshiptype1.isEmpty()==false){
        f=f.substring(1,f.length()-1);//for removeing of array braces
        d=d.substring(1,d.length()-1);//for removeing of array braces
         y=y.substring(1,y.length()-1);  // for removing array braces
        //if(!f.equals("null")){
        //ArrayList<ArrayList<String>> list = new ArrayList<ArrayList<String>>();//arraylist
      /* try{
           for(int i=0;i<=memshiptype1.size();i++){
               String item[]=memshiptype1.get(i).split("#");
               list.add(new ArrayList(Arrays.asList(item)));
                cfmodel=new AllUsersListModel(list);
                jList2.setModel(cfmodel);
           }
       }catch(ArrayIndexOutOfBoundsException e){
                e.printStackTrace();
       }*/
        //for(List<Object> list3 :x1)
             savechanges.setVisible(true);
             jButton5.setVisible(false);
             if(y.equals("All")){
             jRadioButton1.doClick();
             jRadioButton2.setSelected(false);
         }else{
             jRadioButton2.doClick();
             jRadioButton1.setSelected(false);
             
         }
        
         
         
        String string[]=y.split("#");
        
        //for(String z:string){
             for(int i=0;i<string.length;i++){
            try{
                String z=string[i];
                MemCat Memtyp=new MemCat();
               Memtyp =(MemCat) aumodel.getElementAt(r);
               
                if(!list.contains(Memtyp.getMemberCategory())){
                 list.add(z);
               
                
                //list.add(z);
                cfmodel=new AllUsersListModel(list);
                jList2.setModel(cfmodel);
               //list.clear();
                
                } 
                
                
            }catch(Exception e){ }
        
        }
             
             /* fine amount to be selecting*/
             
              String fine1[]=f.split("#");
              String days1[]=d.split("#");
        
        //for(String z:string){
             for(int i=0;i<fine1.length && i<days1.length;i++){
            try{
                fine_amount=fine1[i];
                no_of_days=days1[i];
               arryfine.add(fine_amount);
               arrydays.add(no_of_days);
               fine_days="fine  :"+fine_amount+" Rs.    "+no_of_days+" days.";
            // if(!list1.contains(fine_days)){
                    
                    list1.add(fine_days);
                   
                
            }catch(Exception e){ }
        
        }
           /*for(int i=0;i<days1.length;i++){
            try{
                no_of_days=days1[i];
               arrydays.add(no_of_days);
                
                
            }catch(Exception e){ }
        
        }*/  //fmodel =new AllUsersListModel(arryfine);
                    
                    //dmodel =new AllUsersListModel(arrydays);
                   
                  fdmodel =new AllUsersListModel(list1);
                    jList3.setModel(fdmodel);
                    
                   
                    if(jList2.isSelectionEmpty()==true){
                    jTextField2.setEditable(true);
                    jTextField3.setEditable(true);
                    }
                    
                    
                    
                    
                    
                  
                    /*String catname=jComboBox1.getSelectedItem().toString();
                    catid_list = (List<Object>) new StaticSentence(m_App.getSession(), "SELECT id FROM lib_categories where name=? and active=true ",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).list(catname);
                    cat_nor.add(catid_list);*/
                    //jTextField2.setText("hello");
                     jTextField2.setText(null);
                   jTextField3.setText(null);
                    
        //}else{
          //              JOptionPane.showMessageDialog(this, "Fine Amount and No of Days Already Exist");
            //        }
                    
                    jTextField2.setText(null);
                   jTextField3.setText(null);
             
  
             /*days  to be selecting*/
        
                //list.clear();
         }else
        {
            savechanges.setVisible(false);
            jButton5.setVisible(true);
            reset();
            jTextField2.setEditable(false);
            jTextField3.setEditable(false);
        }
         }catch(BasicException  ex){
            ex.printStackTrace();
        }
        }
       // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jRadioButton1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton1ItemStateChanged
          if(jRadioButton1.isSelected())
        {
        jList1.setVisible(false);
        jList2.setVisible(false);
        addmemtype.setVisible(false);
        removememberbutton.setVisible(false);
        jScrollPane1.setVisible(false);
        jScrollPane2.setVisible(false);
        jTextField2.setEditable(true);
        jTextField3.setEditable(true);
        }
        else
        {
        jList1.setVisible(true);
        jList2.setVisible(true);
        addmemtype.setVisible(true);
        removememberbutton.setVisible(true);
        jScrollPane1.setVisible(true);
        jScrollPane2.setVisible(true); 
        
        }// TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ItemStateChanged

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
         reset();
         savechanges.setVisible(false);
         cat_nor.clear();
         list.clear();
         list1.clear();
         l1.clear();
         cfmodel=new AllUsersListModel(list);
         jList2.setModel(cfmodel);
         fdmodel=new AllUsersListModel(list1);
         jList3.setModel(fdmodel);
         arrydays.clear();
         arryfine.clear();
         jComboBox1.setSelectedIndex(-1); 
         
         jButton5.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_refreshActionPerformed

    private void savechangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savechangesActionPerformed
    String memtype ="";
          String catgtype = "";
          String fine_amountS="";
            String no_of_days1="";
            String ID="";
            try {
            //f_id=Datas.getId();
          if(catmodel.getSize()>0)
          {
          
                  
        int count=Integer.valueOf(new StaticSentence(m_App.getSession()
                    , "SELECT COUNT(*) FROM lib_finemaster WHERE memshiptype=? AND ACTIVE=TRUE"
                    ,SerializerWriteString.INSTANCE
                    ,SerializerReadInteger.INSTANCE).find("All").toString());
        
    
        if(jRadioButton1.isSelected()){
                        
                        memtype="All";
                        
                    }else if(jRadioButton2.isSelected()){
                        for(int i=0;i<list.size();i++){
                            memtype=memtype+list.get(i).toString()+"#";
                        }
                    }else{
                        JOptionPane.showMessageDialog(this, "please select the MemberShip Type");
                    }
                      
                      for(int k=0;k<arryfine.size();k++){
                        fine_amountS=fine_amountS+arryfine.get(k).toString()+"#";
                        
                      }
                      
                      for(int l=0;l<arrydays.size();l++){
                       no_of_days1=no_of_days1+arrydays.get(l).toString()+"#";
                    }
                      
                      
                     
                      
                     
                       String catname=jComboBox1.getSelectedItem().toString();
                    catid_list = (List<Object>) new StaticSentence(m_App.getSession(), "SELECT id FROM lib_categories where name=? and active=true ",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).list(catname);
                    cat_nor.add(catid_list);
                   // jComboBox1.setSelectedIndex(-1);
                   
                      
                      
                      for(int j=0;j<cat_nor.size();j++){
                        catgtype=catgtype+cat_nor.get(j).toString();
                    }
                    
                      //for book id validation
                        // String id=jComboBox1.getSelectedItem().toString();
                   // catid_list1 = (List<Object>) new StaticSentence(m_App.getSession(), "SELECT id FROM lib_finemaster where category_id=? and  active=true ",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).list(catgtype);
                    if(catid_list.isEmpty()==false){
  
                  
                       String newbookId = UUID.randomUUID().toString();
                       catid_list1 = (List<Object>) new StaticSentence(m_App.getSession(), "SELECT id FROM lib_finemaster where category_id=? and  active=true ",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).list(cat_nor.get(0).toString());
                         id_no.add(catid_list1);
                         Dact=(String)id_no.get(0).toString();
                         Dact=Dact.substring(1,Dact.length()-1);
                         
                        
                     if(memtype.equals("All")){
                         
                       
                         
             new PreparedSentence(m_App.getSession(), "UPDATE lib_finemaster  SET ID=?, ACTIVE=0  , DEACTBY=? , DEACTDATE=? , DEACTHOST=?,DEACTREFERENCE=? WHERE ID = ? AND DEACTBY IS NULL AND DEACTDATE IS NULL"
                                                                           , new SerializerWriteBasic(new Datas[]{ Datas.STRING ,Datas.STRING , Datas.TIMESTAMP , Datas.STRING ,Datas.STRING , Datas.STRING })).exec
                                                                            (new Object[]{ newbookId, m_App.getAppUserView().getUser().getName() ,new Date(), m_App.getProperties().getHost(), Dact,Dact  });//for deactivate previous one or update
         
                         
                    Object[] param=new Object[]{UUID.randomUUID().toString(),catgtype,no_of_days1,memtype,fine_amountS,m_App.getAppUserView().getUser().getName(),new Date(),m_App.getProperties().getHost(),true};
                    new PreparedSentence(m_App.getSession()
                            , "INSERT INTO lib_finemaster (ID,CATEGORY_ID,NO_DAYS,MEMSHIPTYPE,FINEAMOUNT,CREATEDBY,CREATEDATE,CREATEDHOST,ACTIVE) VALUES (?,?,?,?,?,?,?,?,?)"
                            , new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.STRING,Datas.STRING,Datas.STRING,Datas.STRING,Datas.STRING,Datas.TIMESTAMP,Datas.STRING,Datas.BOOLEAN})).exec(param);  
                    
                    JOptionPane.showMessageDialog(this, "Updated  Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    }  else if(!memtype.equals("All") ){
                        
                       
           
             new PreparedSentence(m_App.getSession(), "UPDATE lib_finemaster  SET ID=?, ACTIVE=0  , DEACTBY=? , DEACTDATE=? , DEACTHOST=?,DEACTREFERENCE=? WHERE ID = ? AND DEACTBY IS NULL AND DEACTDATE IS NULL"
                                                                           , new SerializerWriteBasic(new Datas[]{ Datas.STRING ,Datas.STRING , Datas.TIMESTAMP , Datas.STRING ,Datas.STRING , Datas.STRING })).exec
                                                                            (new Object[]{ newbookId, m_App.getAppUserView().getUser().getName() ,new Date(), m_App.getProperties().getHost(),Dact,Dact });//for deactivate previous one or update
         //update new data and deactivate previous one  
                         
                        
                        
                        
                Object[] param=new Object[]{UUID.randomUUID().toString(),catgtype,no_of_days1,memtype,fine_amountS,m_App.getAppUserView().getUser().getName(),new Date(),m_App.getProperties().getHost(),true};
                    new PreparedSentence(m_App.getSession()
                            , "INSERT INTO lib_finemaster (ID,CATEGORY_ID,NO_DAYS,MEMSHIPTYPE,FINEAMOUNT,CREATEDBY,CREATEDATE,CREATEDHOST,ACTIVE) VALUES (?,?,?,?,?,?,?,?,?)"
                            , new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.STRING,Datas.STRING,Datas.STRING,Datas.STRING,Datas.STRING,Datas.TIMESTAMP,Datas.STRING,Datas.BOOLEAN})).exec(param);  
                    
                    JOptionPane.showMessageDialog(this, "Updated Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(this, "For memtype ALL is already exist", null, JOptionPane.OK_OPTION);
                
            } 
                    //}else{
                      // JOptionPane.showMessageDialog(this, "Fine amount and memtype is already exist", null, JOptionPane.OK_OPTION); 
                    //}
                    
                    }        
                    reset();
                    cat_nor.clear();
                     list.clear();
                     list1.clear();
                     l1.clear();
                     cfmodel=new AllUsersListModel(list);
                     jList2.setModel(cfmodel);
                     fdmodel=new AllUsersListModel(list1);
                     jList3.setModel(fdmodel);
                     arrydays.clear();
                     arryfine.clear();
                     jComboBox1.setSelectedIndex(-1);

         
          
          } else{
          
              JOptionPane.showMessageDialog(this, "please select the book category");
          } 
          }
            catch (BasicException ex) {
                    Logger.getLogger(Lib_FineMaster.class.getName()).log(Level.SEVERE, null, ex);
                }// TODO add your handling code here:
    }//GEN-LAST:event_savechangesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addfineamt;
    private javax.swing.JButton addmemtype;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JList jList3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JButton refresh;
    private javax.swing.JButton removefineamt;
    private javax.swing.JButton removememberbutton;
    private javax.swing.JButton savechanges;
    // End of variables declaration//GEN-END:variables

    @Override
    public String getTitle() {
        return "Fine Management";
    }
     private void groupButton( ) {

ButtonGroup bg1 = new ButtonGroup( );

bg1.add(jRadioButton1);

bg1.add(jRadioButton2);

}

    @Override
    public void activate() throws BasicException {
        catmodel=new ComboBoxValModel(getcatname());
       jComboBox1.setModel(catmodel);
       /* String catname=jComboBox1.getSelectedItem().toString();
       catid_list  = (List<Object>) new StaticSentence(m_App.getSession(), "SELECT id FROM lib_categories where name=? and active=true ",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).list(catname);
                 cat_nor.add(catid_list);*/
       savechanges.setVisible(false);
       jRadioButton2.setSelected(true);
       jList3.setVisible(false);
       
       List<Facility> flist=dlfac.getFacility();
       List mlist = dlfac.getMemberCategory();
      aumodel=new AllUsersListModel(mlist);
        jList1.setModel(aumodel);
        List l= new ArrayList();
        cfmodel=new AllUsersListModel(l);
        jList2.setModel(cfmodel);
        // amodel = Lib_FineTableModel.loadInstance(m_App);
        /*templist= dlfac.getMemberCategory();
        templist.clear();
        fdmodel=new AllUsersListModel(templist);
        jList3.setModel(fdmodel);*/
        
       
   
       
    }

    @Override
    public boolean deactivate() {
        return true;
    }

    @Override
    public JComponent getComponent() {
        return this;
    }

    @Override
    public void init(AppView app) throws BeanFactoryException {
        m_App=app;
        groupButton();
        dlfac=(DataLogicFacilities) m_App.getBean("com.openbravo.pos.clubmang.DataLogicFacilitiesCreate");
        dlaac=(DataLogicFacilities) app.getBean("com.openbravo.pos.Library.LibDataLogicFacilitiesCreate");
        
            
  
        
    }
   
    public void reset(){
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(true);
        jList3.setVisible(true);
        jScrollPane3.setVisible(true);
          
           
        
        jTextField2.setText(null);
        jTextField3.setText(null);
       // jTabbedPane1.setSelectedIndex(0);
        
    }

    @Override
    public Object getBean() {
        return this;
    }
    
    public List getcatname() throws BasicException{
          List<Object> catg_list = new ArrayList<Object>();
           catg_list  = (List<Object>) new StaticSentence(m_App.getSession(), "SELECT c.name FROM lib_categories c WHERE c.active=1 ORDER by c.name",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).list();
          
          return catg_list;
    }
    
       public List getId() throws BasicException{
          List<Object> catg_list_id = new ArrayList<Object>();
           catg_list_id  = (List<Object>) new StaticSentence(m_App.getSession(), "SELECT f.id FROM lib_finemaster f WHERE f.category_id=?  ",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).list(jComboBox1.getSelectedItem());
          
          return catg_list_id;
    }
   
       private class AllUsersListModel extends AbstractListModel {
        private java.util.List<FacilityApprovalRitesModel.AllUsersLine> ulist;
        public AllUsersListModel(java.util.List<FacilityApprovalRitesModel.AllUsersLine> ulist) {
            this.ulist = ulist;
        }
        public int getSize() {
            return ulist.size();
        }
        public Object getElementAt(int i) {
            return ulist.get(i);
        }
        public void remove(int i){
             ulist.remove(i);
        }

    }
}

