/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.openbravo.pos.Library;

import com.openbravo.basic.BasicException;
import com.openbravo.pos.customers.CustomerInfo;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.DataLogicSales;
import com.openbravo.pos.forms.LookupUtilityImpl;
import com.openbravo.pos.sales.BillLogicApply;
import java.awt.Component;
import java.awt.Dialog;
import java.awt.Frame;
import java.awt.Window;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author dev1
 */
public class ReturnDateChange extends javax.swing.JDialog {
    private BillLogicApply bla;
    private DataLogicSales dlSales;
    private CustomerInfo customertemp;
    private boolean resultok;
    private int remainingBillCount;
    private AppView m_App;
    private int dt;
    private int mnt;
    private int yr;
    private Date maxdt;
    public Date chngdate;

    /** Creates new form ReturnDateChange */
    public ReturnDateChange(Frame parent, DataLogicSales dlSales,BillLogicApply bla, CustomerInfo customer) {

        super(parent, true);
        super.setLocation(500,300);
        this.bla = bla;
        this.customertemp = customer;
        this.dlSales = dlSales;
        resultok = bla == null;
    }
    
    public ReturnDateChange(Dialog parent, DataLogicSales dlSales,BillLogicApply bla, CustomerInfo customer) {
        super(parent, true);
        super.setSize(400, 300);
        this.bla = bla;
        this.dlSales = dlSales;
        this.customertemp = customer;
        resultok = bla == null;
    }
    
    protected static Window getWindow(Component parent) {
        if (parent == null) {
            return new JFrame();
        } else if (parent instanceof Frame || parent instanceof Dialog) {
            return (Window) parent;
        } else {
            return getWindow(parent.getParent());
        }
    }
    
    public static ReturnDateChange getDialog(Component parent, DataLogicSales dlSales,BillLogicApply bla, CustomerInfo customer, int remainingBillCount) {

        Window window = getWindow(parent);
        
        ReturnDateChange mybilllogic;

        if (window instanceof Frame) {
            mybilllogic = new ReturnDateChange((Frame) window, dlSales,bla, customer);
        } else {
            mybilllogic = new ReturnDateChange((Dialog) window, dlSales,bla, customer);
        }
        mybilllogic.remainingBillCount = remainingBillCount;
        return mybilllogic;
    }
    
    public boolean showDialog() throws BasicException {
        // init(binfo);
       //jTextField1.setText(String.valueOf(fine));
        //book_name=book;
        //amt=fine;
        //retn_obj=retnobj;
        setVisible(true);
        return resultok;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        date = new javax.swing.JComboBox();
        month = new javax.swing.JComboBox();
        year = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Maximum Return Date for this Book is :");

        jTextField1.setEditable(false);

        jLabel2.setText("Change Date if necessary ...And not exceed Maximum Date : ");

        date.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        month.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField1))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel2)
                            .add(layout.createSequentialGroup()
                                .add(date, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 57, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(month, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(year, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(33, 33, 33))
                            .add(layout.createSequentialGroup()
                                .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 93, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(44, 44, 44)))
                        .add(0, 30, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(79, 79, 79)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jLabel2)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(date, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(month, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(year, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(26, 26, 26)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton1)
                    .add(jButton2))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        layout.linkSize(new java.awt.Component[] {jButton1, jButton2}, org.jdesktop.layout.GroupLayout.VERTICAL);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Date today=new Date();
        Date chngdt=getDate(date.getSelectedItem().toString(),month.getSelectedIndex(),year.getText());
        int res=chngdt.compareTo(today);
        int res1=chngdt.compareTo(maxdt);
        if(res>=0){
        if(res1<=0){
          chngdate=changeRetnDate(); 
          dispose();
        }else{
            JOptionPane.showMessageDialog(null, "Selected Date Should not Exceed the Maximum Date", "Error", JOptionPane.OK_OPTION);
        }
        }else{
            JOptionPane.showMessageDialog(null, "Selected Date Should be grater than ToDate", "Error", JOptionPane.OK_OPTION);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public void init(Date maxdate){
        m_App = LookupUtilityImpl.getInstance(null).getAppView();
        dlSales = (DataLogicSales) m_App.getBean("com.openbravo.pos.forms.DataLogicSalesCreate");
        initComponents();
        String datelist[] = new String[]{null, "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"};
        String monthlist[] = new String[]{null, "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};
        date.setModel(new javax.swing.DefaultComboBoxModel(datelist));
        month.setModel(new javax.swing.DefaultComboBoxModel(monthlist));
        if(maxdate!=null){
            DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
 
            String datestring = dateFormat.format(maxdate); 
            jTextField1.setText(datestring);
          maxdt= (Date)maxdate;
                             Calendar cal=GregorianCalendar.getInstance();
                             cal.setTimeInMillis(maxdt.getTime());
                             dt=cal.get(Calendar.DATE);
                             mnt=cal.get(Calendar.MONTH)+1;
                             yr=cal.get(Calendar.YEAR);
                             date.setSelectedIndex(cal.get(Calendar.DATE));
                             month.setSelectedIndex(cal.get(Calendar.MONTH)+1);
                             year.setText(String.valueOf(cal.get(Calendar.YEAR)));
                            }else{
                             date.setSelectedIndex(-1);
                             month.setSelectedIndex(-1);
                             year.setText(null);
                             }
    }
    
    public Date changeRetnDate(){
        Date changedt = null;
       
        /*int dat=Integer.parseInt(date.getSelectedItem().toString());
        int mont=month.getSelectedIndex();
        int yer=Integer.parseInt(year.getText().toString());
        
        DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
 
            String datestring = dateFormat.format(newdate);
            String[] dtary=datestring.split("-");
            int newdt=Integer.parseInt(dtary[0].toString());
            int newmnt=Integer.parseInt(dtary[1].toString());
            int newyr=Integer.parseInt(dtary[2].toString());*/
        
          changedt = getDate(date.getSelectedItem().toString(),month.getSelectedIndex(),year.getText());
       
        
       return changedt;
    }
    private Date getDate(String date,int month,String year){
      
        Calendar cal=Calendar.getInstance();
       // cal.setTimeInMillis(d.getTime());
        cal.set(Integer.parseInt(year), month-1,Integer.parseInt(date));
        cal.set(Calendar.MINUTE,00);
        cal.set(Calendar.HOUR_OF_DAY,00);
        cal.set(Calendar.SECOND,00);
        cal.set(Calendar.MILLISECOND,00);
        Date d=new Date();
        d.setTime(cal.getTimeInMillis());
        return d;

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox date;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JComboBox month;
    private javax.swing.JTextField year;
    // End of variables declaration//GEN-END:variables

}
