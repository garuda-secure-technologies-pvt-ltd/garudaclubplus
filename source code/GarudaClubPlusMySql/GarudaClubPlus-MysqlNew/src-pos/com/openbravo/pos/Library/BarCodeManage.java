/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.openbravo.pos.Library;

import com.openbravo.basic.BasicException;
import com.openbravo.data.loader.SerializerReadString;
import com.openbravo.data.loader.SerializerWriteString;
import com.openbravo.data.loader.StaticSentence;
import com.openbravo.pos.customers.CustomerInfo;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.DataLogicSales;
import com.openbravo.pos.forms.LookupUtilityImpl;
import com.openbravo.pos.sales.BillLogicApply;
import java.awt.Component;
import java.awt.Dialog;
import java.awt.Frame;
import java.awt.Window;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author dev1
 */
public class BarCodeManage extends javax.swing.JDialog {
    private BillLogicApply bla;
    private CustomerInfo customertemp;
    private DataLogicSales dlSales;
    private boolean resultok;
    private int remainingBillCount;
    private List<Object> book_id;
    private AppView m_App;

    /** Creates new form BarCodeManage */
    public BarCodeManage(Frame parent, DataLogicSales dlSales,BillLogicApply bla, CustomerInfo customer) {

        super(parent, true);
        super.setLocation(500,300);
        this.bla = bla;
        this.customertemp = customer;
        this.dlSales = dlSales;
        resultok = bla == null;
    }
    
    public BarCodeManage(Dialog parent, DataLogicSales dlSales,BillLogicApply bla, CustomerInfo customer) {
        super(parent, true);
        super.setSize(400, 300);
        this.bla = bla;
        this.dlSales = dlSales;
        this.customertemp = customer;
        resultok = bla == null;
    }
    
    protected static Window getWindow(Component parent) {
        if (parent == null) {
            return new JFrame();
        } else if (parent instanceof Frame || parent instanceof Dialog) {
            return (Window) parent;
        } else {
            return getWindow(parent.getParent());
        }
    }
    
    public static BarCodeManage getDialog(Component parent, DataLogicSales dlSales,BillLogicApply bla, CustomerInfo customer, int remainingBillCount) {

        Window window = getWindow(parent);
        
        BarCodeManage mybilllogic;

        if (window instanceof Frame) {
            mybilllogic = new BarCodeManage((Frame) window, dlSales,bla, customer);
        } else {
            mybilllogic = new BarCodeManage((Dialog) window, dlSales,bla, customer);
        }
        mybilllogic.remainingBillCount = remainingBillCount;
        return mybilllogic;
    }
    
    public boolean showDialog() throws BasicException {
        // init(binfo);
       //jTextField1.setText(String.valueOf(fine));
        //book_name=book;
        //amt=fine;
        //retn_obj=retnobj;
        setVisible(true);
        return resultok;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Read Bar-Code");

        jLabel1.setText("Read BarCode :");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 281, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(114, 114, 114)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(159, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        barcodeaction();
        dispose();
    }//GEN-LAST:event_jTextField1ActionPerformed

    public void init(){
        m_App = LookupUtilityImpl.getInstance(null).getAppView();
        dlSales = (DataLogicSales) m_App.getBean("com.openbravo.pos.forms.DataLogicSalesCreate");
        initComponents();
    }
    public String barcodeaction(){
        String barcode = null;
        if(jTextField1.getText()!=null && !jTextField1.getText().equals("")){
        
            try {
                book_id = (List<Object>) new StaticSentence(m_App.getSession(), "SELECT ID FROM lib_bookmaster WHERE RefNo = ? and active=true and available_flag=1",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).list(jTextField1.getText());
            barcode=book_id.get(0).toString();
            } catch (BasicException ex) {
                Logger.getLogger(BarCodeManage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return barcode;
        
    }
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

}
