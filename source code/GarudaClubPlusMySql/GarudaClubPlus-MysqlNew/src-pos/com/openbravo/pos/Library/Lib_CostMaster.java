/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.openbravo.pos.Library;

import com.openbravo.basic.BasicException;
import com.openbravo.data.gui.ComboBoxValModel;
import com.openbravo.data.loader.Datas;
import com.openbravo.data.loader.PreparedSentence;
import com.openbravo.data.loader.SerializerReadInteger;
import com.openbravo.data.loader.SerializerReadString;
import com.openbravo.data.loader.SerializerWriteBasic;
import com.openbravo.data.loader.SerializerWriteString;
import com.openbravo.data.loader.StaticSentence;
import com.openbravo.format.Formats;
import com.openbravo.pos.Library.Lib_CostTableModel.lib_Costline;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.BeanFactoryApp;
import com.openbravo.pos.forms.BeanFactoryException;
import com.openbravo.pos.forms.JPanelView;
import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author dev1
 */
public class Lib_CostMaster extends javax.swing.JPanel implements JPanelView,BeanFactoryApp{
    private AppView m_App;
    private List<Object> book_id;
    private ComboBoxValModel vendoModel;
    private ComboBoxValModel bookModel;
    private List<Object> vend_id;
    private Lib_CostTableModel cmodel;
    private String c_id;
    private String deact_id;
    private int allocated_nor;

    /** Creates new form Lib_CostMaster */
    public Lib_CostMaster() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable1 =  new javax.swing.JTable(){public Component prepareRenderer(TableCellRenderer renderer,
            int rowIndex, int vColIndex) {
            Component c = super.prepareRenderer(renderer, rowIndex, vColIndex);
            if (c instanceof JComponent) {
                JComponent jc = (JComponent)c;
                jc.setToolTipText(String.valueOf(getValueAt(rowIndex, vColIndex)));

                if (rowIndex % 2 == 0 && !isCellSelected(rowIndex, vColIndex)) {
                    jc.setBackground(Color.lightGray);
                }
                else {
                    jc.setBackground(Color.white);
                }
                if(isCellSelected(rowIndex, vColIndex))
                jc.setBackground(Color.cyan);
            }
            return c;
        }};
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jLabel1.setText("Select Book :");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Allocated Number :");

        jLabel3.setText("Book Cost :");

        jLabel4.setText("Replacement Cost :");

        jLabel5.setText("Vendor :");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("savechanges");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel4)
                            .add(jLabel5)
                            .add(jLabel3))
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(17, 17, 17)
                                .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 86, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(18, 18, 18)
                                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 253, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 86, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel2)
                            .add(jLabel1))
                        .add(18, 18, 18)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 254, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap(412, Short.MAX_VALUE)
                .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 69, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 81, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 144, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(173, 173, 173))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(41, 41, 41)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 227, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton1)
                    .add(jButton2)
                    .add(jButton3))
                .add(41, 41, 41))
        );

        jTabbedPane1.addTab("CreateNew", jPanel2);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane6.setViewportView(jTable1);

        jButton4.setText("Edit");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Deactivate");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Show All");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jScrollPane6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 879, Short.MAX_VALUE)
                        .addContainerGap())
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                                .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(72, 72, 72))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                                .add(jCheckBox1)
                                .add(115, 115, 115))))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                .add(19, 19, 19)
                .add(jCheckBox1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 382, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 67, Short.MAX_VALUE)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton4)
                    .add(jButton5))
                .addContainerGap())
        );

        jTabbedPane1.addTab("ViewList", jPanel3);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane1)
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        int pub = JOptionPane.showConfirmDialog(jPanel1, " Do you want to Edit Data ?? " , "Editing Menu" , JOptionPane.YES_NO_OPTION);
            if(pub == JOptionPane.YES_OPTION){
                if(jTable1.getSelectedRow()<cmodel.getSize()){
                    int row = jTable1.getSelectedRow();
                    if (Boolean.valueOf(jTable1.getModel().getValueAt(row, 11).toString())) {
                   lib_Costline data = cmodel.getList().get(row);
                   jButton3.setVisible(true);
                    jButton1.setVisible(false);
                    c_id=data.getId();
                   String book=data.getBook();
                   int alloc=data.getAllocnr();
                   double cost=data.getCost();
                   double repcost=data.getRepmtcost();
                   String vendor=data.getVendor();
                   
                   jTextField1.setText(String.valueOf(alloc));
                    jTextField2.setText(String.valueOf(cost));
                    jTextField3.setText(String.valueOf(repcost));
                   
                    for(int i=0; i<jComboBox1.getItemCount(); i++)
                            {
                              if(jComboBox1.getItemAt(i).toString().equals(book))
                                {
                                    jComboBox1.setSelectedIndex(i);
                                    break;
                                }
                            
                            }
                    for(int i=0; i<jComboBox2.getItemCount(); i++)
                            {
                              if(jComboBox2.getItemAt(i).toString().equals(vendor))
                                {
                                    jComboBox2.setSelectedIndex(i);
                                    break;
                                }
                            
                            }
                    
                    jTabbedPane1.setSelectedIndex(0);
                    }else {
                    JOptionPane.showMessageDialog(this, "selected Row is deactivated.cannot edit it");
                }
                }
            }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        if(jComboBox1.getSelectedIndex()!=-1 && jComboBox2.getSelectedIndex()!=-1){
            if(jTextField2.getText().length()>0 && jTextField3.getText().length()>0){
            int norofitem=jComboBox1.getItemCount();
            if(jComboBox1.getSelectedIndex()<norofitem){
                try {
                    int count=Integer.valueOf(new StaticSentence(m_App.getSession()
                    , "SELECT COUNT(*) FROM lib_media WHERE id=? AND ACTIVE=TRUE"
                    ,SerializerWriteString.INSTANCE
                    ,SerializerReadInteger.INSTANCE).find(book_id.get(0)).toString()); 
                    Object obj=jComboBox2.getItemAt(jComboBox2.getSelectedIndex());
                    vend_id= (List<Object>) new StaticSentence(m_App.getSession(), "SELECT id FROM lib_vendor  WHERE name=? and ACTIVE=1",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).list(obj.toString());
                    if(!jTextField1.getText().equals(null) && !jTextField1.getText().equals("")){
                        allocated_nor=Integer.parseInt(jTextField1.getText().toString());
                    }
                    if(count == 0){
                        insertlib_cost();
                    }
                
                } catch (BasicException ex) {
                    Logger.getLogger(Lib_CostMaster.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else{
             JOptionPane.showMessageDialog(this, "Please ensure Cost and ReplacementCost", null, JOptionPane.OK_OPTION);   
            }
        }else{
            JOptionPane.showMessageDialog(this, "Please ensure Book and Vendor", null, JOptionPane.OK_OPTION);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if(jComboBox1.getSelectedIndex()!=-1){
            try {
                Object obj=jComboBox1.getItemAt(jComboBox1.getSelectedIndex());
                book_id= (List<Object>) new StaticSentence(m_App.getSession(), "SELECT id FROM lib_bookmaster  WHERE name=? and ACTIVE=1",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).list(obj.toString());
                List alcotnor=(List<Object>) new StaticSentence(m_App.getSession(), "SELECT allocatednor FROM lib_bookmaster  WHERE id=? and ACTIVE=1",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).list(book_id.get(0).toString());
                jTextField1.setText(alcotnor.get(0).toString());
            } catch (BasicException ex) {
                Logger.getLogger(Lib_CostMaster.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
      
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        reset();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(jComboBox1.getSelectedIndex()!=-1 && jComboBox2.getSelectedIndex()!=-1){
        if(jTextField2.getText().length()>0 && jTextField3.getText().length()>0){
          int norofitem=jComboBox1.getItemCount();
          if(jComboBox1.getSelectedIndex()<norofitem){
              try {
                  Object obj=jComboBox2.getItemAt(jComboBox2.getSelectedIndex());
                  vend_id= (List<Object>) new StaticSentence(m_App.getSession(), "SELECT id FROM lib_vendor  WHERE name=? and ACTIVE=1",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).list(obj.toString());
                  Update_cost();
              } catch (BasicException ex) {
                  Logger.getLogger(Lib_CostMaster.class.getName()).log(Level.SEVERE, null, ex);
              }
          }
            
        }else{
             JOptionPane.showMessageDialog(this, "Please ensure Cost and ReplacementCost", null, JOptionPane.OK_OPTION);   
            }    
            
        }else{
            JOptionPane.showMessageDialog(this, "Please ensure Book and Vendor", null, JOptionPane.OK_OPTION);
        }
     
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        javax.swing.JTabbedPane tabpane=(javax.swing.JTabbedPane)evt.getSource();
        int tabno=tabpane.getSelectedIndex();
       //jCheckBox1.setSelected(false);
        if(tabno==1){
            try {
                cmodel = Lib_CostTableModel.loadInstance(m_App,1);

                jTable1.setModel(cmodel.getTableModel());
                } catch (BasicException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged

        try {
            if (jCheckBox1.isSelected() == true) {
                cmodel = Lib_CostTableModel.loadInstance(m_App, 2);
                jTable1.setModel(cmodel.getTableModel());
            } else if (jCheckBox1.isSelected() == false) {
                cmodel = Lib_CostTableModel.loadInstance(m_App, 1);
                jTable1.setModel(cmodel.getTableModel());
            }
        } catch (Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
        if(jTable1.getSelectedRow()!=-1){
            int bill = JOptionPane.showConfirmDialog(jPanel1, " Do you want to deactivate ?? " , "Deactivation" , JOptionPane.YES_NO_OPTION);
             if(bill == JOptionPane.YES_OPTION){
                  if(jTable1.getSelectedRow()<cmodel.getSize()){
                     int row = jTable1.getSelectedRow();
                     if (Boolean.valueOf(jTable1.getModel().getValueAt(row, 11).toString())) {
                     lib_Costline showdata = cmodel.getList().get(row);
                     deact_id=showdata.getId();
                     deactlib_cost();
                     }else {
                    JOptionPane.showMessageDialog(this, "selected Row is already deactivated.");
                }
                  }
             }
         }
        
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables

    @Override
    public String getTitle() {
        return "CostMaster";
    }

    @Override
    public void activate() throws BasicException {
       bookModel=new ComboBoxValModel(getbookname());
       jComboBox1.setModel(bookModel); 
     vendoModel=new ComboBoxValModel(getven_donname());
       jComboBox2.setModel(vendoModel);   
        reset();
    }

    @Override
    public boolean deactivate() {
        return true;
    }

    @Override
    public JComponent getComponent() {
        return this;
    }

    @Override
    public void init(AppView app) throws BeanFactoryException {
        m_App=app;
        
        
        
    }

    @Override
    public Object getBean() {
        return this;
    }
    
     public List getven_donname() throws BasicException{
          List<Object> vend_list = new ArrayList<Object>();
           vend_list  = (List<Object>) new StaticSentence(m_App.getSession(), "SELECT m.name FROM lib_vendor m WHERE m.active=1 ORDER by m.name",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).list();
          
          return vend_list;
      }
     
     public List getbookname() throws BasicException{
          List<Object> vend_list = new ArrayList<Object>();
           vend_list  = (List<Object>) new StaticSentence(m_App.getSession(), "SELECT m.name FROM lib_bookmaster m WHERE m.active=1 ORDER by m.name",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).list();
          
          return vend_list;
      }
     
     public void reset(){
         
         jTextField1.setText(null);
         jTextField1.setEditable(false);
         jButton1.setVisible(true);
         jButton3.setVisible(false);
         jTabbedPane1.setSelectedIndex(0);
         //jCheckBox1.setSelected(false);
         jTextField2.setText(null);
         jTextField3.setText(null);
         jComboBox1.setSelectedIndex(-1);
         jComboBox2.setSelectedIndex(-1);
     }
     
     
    private void insertlib_cost() {
        
         try{
          if(jComboBox1.getSelectedIndex()!=-1){
            
              
             Object[] param=new Object[]{UUID.randomUUID().toString(),book_id.get(0).toString(),allocated_nor,Double.parseDouble(jTextField2.getText()),Double.parseDouble(jTextField3.getText()),vend_id.get(0),m_App.getAppUserView().getUser().getName(),new Date(),m_App.getProperties().getHost(),true};
             new PreparedSentence(m_App.getSession()
             , "INSERT INTO lib_cost (ID,book_id,allocatednor,cost,replmtcost,vendor_id,CREATEDBY,CREATEDATE,CREATEDHOST,ACTIVE) VALUES (?,?,?,?,?,?,?,?,?,?)"
             , new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.STRING,Datas.INT,Datas.DOUBLE,Datas.DOUBLE,Datas.STRING,Datas.STRING,Datas.TIMESTAMP,Datas.STRING,Datas.BOOLEAN})).exec(param);
          JOptionPane.showMessageDialog(this, "Created Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);
          }
          
          reset();
          
      }catch(NullPointerException e){
          
        e.printStackTrace();
      }
      catch(Exception e){
       e.printStackTrace();
      }
        
        
    }
    
    private void Update_cost() {
           
           try{
          if(jComboBox1.getSelectedIndex()!=-1){
           
             Object[] param=new Object[]{book_id.get(0).toString(),allocated_nor,Double.parseDouble(jTextField2.getText()),Double.parseDouble(jTextField3.getText()),vend_id.get(0),m_App.getAppUserView().getUser().getName(),new Date(),m_App.getProperties().getHost(),true,c_id};
             new PreparedSentence(m_App.getSession()
                , "UPDATE lib_cost SET book_id=?,allocatednor=?,cost=?,replmtcost=?,vendor_id=?,CREATEDBY=?,CREATEDATE=?,CREATEDHOST=?,ACTIVE=? WHERE ID=?"
                , new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.INT,Datas.DOUBLE,Datas.DOUBLE,Datas.STRING,Datas.STRING,Datas.TIMESTAMP,Datas.STRING,Datas.BOOLEAN,Datas.STRING})).exec(param);
             JOptionPane.showMessageDialog(this, "Updated Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);
           }

           cmodel  = Lib_CostTableModel.loadInstance(m_App,1);
           jTable1.setModel(cmodel.getTableModel()); 
          reset(); 
              
         }catch(NullPointerException e){
          
        e.printStackTrace();
      }
      catch(Exception e){
       e.printStackTrace();
      }
       }
    
    private void deactlib_cost() {
           try{
            String newcostId = UUID.randomUUID().toString();
           
             new PreparedSentence(m_App.getSession(), "UPDATE lib_cost  SET ID=?, ACTIVE=0  , DEACBY=? , DEACDATE=? , DEACHOST=?,DEACTREFERENCE=?  WHERE ID = ? AND DEACBY IS NULL AND DEACDATE IS NULL"
                                                                           , new SerializerWriteBasic(new Datas[]{ Datas.STRING,Datas.STRING , Datas.TIMESTAMP , Datas.STRING , Datas.STRING , Datas.STRING})).exec
                                                                            (new Object[]{ newcostId,  m_App.getAppUserView().getUser().getName() ,new Date(), m_App.getProperties().getHost(),deact_id , deact_id  });
            cmodel  = Lib_CostTableModel.loadInstance(m_App,1);
            jTable1.setModel(cmodel.getTableModel()); 
             reset();
          JOptionPane.showMessageDialog(this, "De-Activated Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);
          
       }catch(NullPointerException e){
          
        e.printStackTrace();
      }
      catch(Exception e){
       e.printStackTrace();
      }
    }

}
