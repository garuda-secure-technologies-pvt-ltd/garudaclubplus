/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.openbravo.pos.sales;

import com.openbravo.basic.BasicException;
import com.openbravo.beans.JCalendarDialog;
import com.openbravo.data.gui.MessageInf;
import com.openbravo.data.loader.Datas;
import com.openbravo.data.user.EditorCreator;
import com.openbravo.data.user.ListProvider;
import com.openbravo.format.Formats;
import com.openbravo.pos.clubmang.DataLogicFacilities;
import com.openbravo.pos.customers.CustomerInfo;
import com.openbravo.pos.customers.CustomerInfoExt;
import com.openbravo.pos.customers.DataLogicCustomers;
import com.openbravo.pos.customers.JCustomerFinder;
import com.openbravo.pos.forms.AppLocal;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.BeanFactoryApp;
import com.openbravo.pos.forms.BeanFactoryException;
import com.openbravo.pos.forms.DataLogicSales;
import com.openbravo.pos.forms.DataLogicSystem;
import com.openbravo.pos.forms.JPanelView;
import java.util.Date;
import javax.swing.JComponent;
import com.openbravo.data.loader.PreparedSentence;
import com.openbravo.data.loader.SerializerReadBasic;
import com.openbravo.data.loader.SerializerReadString;
import com.openbravo.data.loader.SerializerWriteBasic;
import com.openbravo.data.loader.SerializerWriteString;
import com.openbravo.data.loader.Session;
import com.openbravo.data.loader.StaticSentence;
import java.awt.HeadlessException;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import java.util.List;
import com.openbravo.data.loader.Transaction;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.ListSelectionModel;
import javax.swing.table.TableColumnModel;


/**
 *
 * @author USER
 */
public class QtCreditByPassAuthr extends javax.swing.JPanel implements  JPanelView, BeanFactoryApp, EditorCreator  {
    
    private Object bean;
    private AppView m_App;
    private DataLogicFacilities dmang;
    private DataLogicSales m_dlSales;
     private DataLogicCustomers dlCustomers;
      CustomerInfoExt customer;
       private DataLogicSales dlSales=null;
    private DataLogicSystem dlsystem;
    private CustomerInfo selectedCustomer;
    private ListProvider lpr;
    private boolean flag = true;
    private String initiator;
    private Session s;
    private javax.swing.JTextField grate;
    private DataLogicReceipts dlReceipts;
    private Object customerInfo;
    private  static String  cusid1;
     private QtLimitTable fxd_table1;
     private List<String> custlist = new ArrayList<String>();
     public int flag1=0;
     private QtLimitTable gtablemodel;
     private String deac_id;
         DecimalFormat decimalFormat = new DecimalFormat("#0.00");
         private List<String> searchkey_list1 = new ArrayList<String>();
           private List<String> searchkey_list2 = new ArrayList<String>();
    /**
     * Creates new customizer QtCreditByPassAuthr
     */
    public QtCreditByPassAuthr() {
        initComponents();
    }
    @Override
     public void init(AppView app) throws BeanFactoryException {
        // super(app, panelTicket);
        m_App = app;
        dmang = (DataLogicFacilities) app.getBean("com.openbravo.pos.clubmang.DataLogicFacilitiesCreate");
        m_dlSales = (DataLogicSales) m_App.getBean("com.openbravo.pos.forms.DataLogicSalesCreate");
         dlCustomers = (DataLogicCustomers) app.getBean("com.openbravo.pos.customers.DataLogicCustomersCreate");
        dlsystem = (DataLogicSystem) app.getBean("com.openbravo.pos.forms.DataLogicSystemCreate");
      //   dlSales = (DataLogicSales) m_App.getBean("com.openbravo.pos.forms.DataLogicSalesCreate")
        //m_App = app;
        // session = AppViewConnection.createSession(m_props, cinfo.getUrl(), false);
        dlSales = (DataLogicSales) m_App.getBean("com.openbravo.pos.forms.DataLogicSalesCreate");
        dlReceipts = (DataLogicReceipts) app.getBean("com.openbravo.pos.sales.DataLogicReceipts");
       // dlCustomers = (DataLogicCustomers) app.getBean("com.openbravo.pos.customers.DataLogicCustomersCreate");

    }
    public void setObject(Object bean) {
        this.bean = bean;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jTextField18 = new javax.swing.JTextField();

        setLayout(new java.awt.BorderLayout());

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 665, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 21, Short.MAX_VALUE)
        );

        jLabel1.setText("Mem No.");
        jLabel1.setToolTipText("");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jLabel2.setText("Mem Name");
        jLabel2.setToolTipText("");

        jTextField2.setToolTipText("");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Add Limit Grant Amount");
        jLabel3.setToolTipText("");

        jLabel4.setText("Valid From");
        jLabel4.setToolTipText("");

        jLabel5.setText("Valid To");
        jLabel5.setToolTipText("");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/date.png"))); // NOI18N
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/date.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/apply.png"))); // NOI18N
        jButton3.setText("Create");
        jButton3.setToolTipText("");
        jButton3.setDisabledIcon(null);
        jButton3.setDisabledSelectedIcon(null);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 51, 51));
        jLabel6.setText("Qt Credit ByPass Authorization");
        jLabel6.setToolTipText("");

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/kuser.png"))); // NOI18N
        jButton4.setToolTipText("");
        jButton4.setMargin(new java.awt.Insets(10, 14, 10, 14));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(242, 242, 242)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(248, 248, 248))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(72, 72, 72)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jButton3)
                .addGap(29, 29, 29)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTextField1.getAccessibleContext().setAccessibleParent(this);
        jButton3.getAccessibleContext().setAccessibleParent(this);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(228, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 135, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        jTabbedPane1.addTab("Create", jPanel1);

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("All");
        jCheckBox1.setToolTipText("");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Active");
        jCheckBox2.setToolTipText("");
        jCheckBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox2ItemStateChanged(evt);
            }
        });
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mem No.", "Mem Name", "Add. Amount", "Valid From", "Valid To", "Created By", "Active"
            }
        ));
        jTable1.setMaximumSize(new java.awt.Dimension(2147483647, 0));
        jTable1.setMinimumSize(new java.awt.Dimension(105, 0));
        jScrollPane2.setViewportView(jTable1);

        jButton9.setText("Deactivate");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 872, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBox2)
                        .addGap(88, 88, 88))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(144, 144, 144))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("View ", jPanel5);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 102, 255));
        jLabel7.setText("Order By:");
        jLabel7.setToolTipText("");

        jRadioButton1.setText("Mem No.");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("Date");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setSelected(true);
        jRadioButton3.setText("All");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jRadioButton4.setText("Active");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Created Date", "Mem No.", "Add. Amount", "Valid From", "Valid To", "Created By", "Active "
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        jLabel8.setText("Member No.");

        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });
        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField6KeyPressed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/kuser.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel9.setText("Mem Name");

        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });

        jLabel10.setText("From Date");
        jLabel10.setToolTipText("");

        jLabel11.setText("To Date");
        jLabel11.setToolTipText("");

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/date.png"))); // NOI18N
        jButton6.setToolTipText("");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/date.png"))); // NOI18N
        jButton7.setToolTipText("");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Execute");
        jButton8.setToolTipText("");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton3)
                            .addComponent(jRadioButton1))))
                .addGap(35, 35, 35)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton4))
                .addContainerGap(153, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton4))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)))
                    .addComponent(jButton5))
                .addGap(33, 33, 33)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(jLabel11)))
                .addGap(16, 16, 16)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Find", jPanel7);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 665, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 21, Short.MAX_VALUE)
        );

        jLabel18.setText("Mem No.");

        jTextField10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField10ActionPerformed(evt);
            }
        });
        jTextField10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField10KeyPressed(evt);
            }
        });

        jLabel12.setText("Mem Name");

        jTextField11.setEditable(false);

        jLabel13.setText("Mem Type");

        jTextField12.setEditable(false);

        jLabel14.setText("Mem Type Limit");

        jTextField13.setEditable(false);
        jTextField13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/kuser.png"))); // NOI18N
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel15.setText("Limit Set If Any");

        jTextField14.setEditable(false);

        jLabel16.setText("From Date");

        jLabel17.setText("To Date");

        jTextField15.setEditable(false);

        jTextField16.setEditable(false);

        jLabel19.setText("Give Special Credit Rs.      ");

        jLabel20.setText(" for today");

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/button_ok.png"))); // NOI18N
        jButton11.setText("Update");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel21.setText("Special Credit If any for today");

        jTextField18.setEditable(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel16)
                                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(27, 27, 27)
                                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(160, 160, 160))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(387, 387, 387)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12)
                                .addComponent(jLabel18)))
                        .addGap(38, 38, 38))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13)))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14))))))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addGap(50, 50, 50)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Immediate", jPanel6);

        add(jTabbedPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        // TODO add your handling code here:
         if( jRadioButton4.isSelected()){
      jRadioButton3.setSelected(false);
       }
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
       
        
      JCustomerFinder finder = JCustomerFinder.getCustomerFinder(this, dlCustomers);
       finder.setVisible(true);
        CustomerInfo customerInfo = finder.getSelectedCustomer();
          if (customerInfo != null)     
              try {
             customer = dlSales.loadCustomerExt(customerInfo.getId());
              jTextField7.setText(customerInfo.toString());
              jTextField6.setText(customerInfo.getSearchkey());
          } catch (BasicException e) {
             MessageInf msg = new MessageInf(MessageInf.SGN_WARNING, AppLocal.getIntString("message.cannotfindcustomer"), e);
              msg.show(this);
          }
      
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        Date d;
        try {
            d = (Date) Formats.TIMESTAMP.parseValue( jButton1.getText());
        } catch (BasicException e) {
            d = null;
        }
        d = JCalendarDialog.showCalendarTimeHours(this, d);
        if (d != null) {

            jTextField8.setText(Formats.TIMESTAMP.formatValue(d));
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        Date d;
        try {
            d = (Date) Formats.TIMESTAMP.parseValue( jButton7.getText());
        } catch (BasicException e) {
            d = null;
        }
        d = JCalendarDialog.showCalendarTimeHours(this, d);
        if (d != null) {

            jTextField9.setText(Formats.TIMESTAMP.formatValue(d));
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
      javax.swing.JTabbedPane tabpane = (javax.swing.JTabbedPane) evt.getSource();
        int tabno = tabpane.getSelectedIndex();
        if (tabno == 1) {
            try {
              if(jCheckBox1.isSelected()){
                 fxd_table1 = QtLimitTable.GetQt(m_App, 0);
                  jTable1.setModel(fxd_table1.getTableModel());
                    jTable1.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
              }
                fxd_table1 = QtLimitTable.GetQt(m_App, 0);
                  jTable2.setModel(fxd_table1.getTableModel());
                    jTable2.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
                    
               if(jCheckBox2.isSelected()){
                 fxd_table1 = QtLimitTable.GetQt(m_App, 1);
                  jTable1.setModel(fxd_table1.getTableModel());
                    jTable1.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
              }
   
                 TableColumnModel cmodel = jTable1.getColumnModel();
                cmodel.getColumn(0).setPreferredWidth(30);
                cmodel.getColumn(1).setPreferredWidth(100);
                cmodel.getColumn(2).setPreferredWidth(100);
                cmodel.getColumn(3).setPreferredWidth(100);
                cmodel.getColumn(4).setPreferredWidth(100);
                cmodel.getColumn(5).setPreferredWidth(100);
                cmodel.getColumn(6).setPreferredWidth(70);
            } catch (BasicException ex) {
                ex.printStackTrace();
            }
            }
        
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        JCustomerFinder finder = JCustomerFinder.getCustomerFinder(this, dlCustomers);
       finder.setVisible(true);
        CustomerInfo customerInfo = finder.getSelectedCustomer();
          //CustomerInfo customerInfo1 = finder.getSelectedCustomer();
         String cusid = customerInfo.getId();
         cusid1 =cusid;
            System.out.println("cusid to ID:::::"+cusid);
          if (customerInfo != null)  
            try {
             customer = dlSales.loadCustomerExt(customerInfo.getId());
              jTextField2.setText(customerInfo.toString());
              jTextField1.setText(customerInfo.getSearchkey());
          } catch (BasicException e) {
             MessageInf msg = new MessageInf(MessageInf.SGN_WARNING, AppLocal.getIntString("message.cannotfindcustomer"), e);
              msg.show(this);
          }
       // CustomerInfo customerInfo1 = finder.getSelectedCustomer();
//            Object[] obj = null;
//        try {
//            obj = (Object[]) new StaticSentence(m_App.getSession(), "SELECT SEARCHKEY FROM CUSTOMERS where ID=?", SerializerWriteString.INSTANCE, new SerializerReadBasic(new Datas[]{Datas.STRING})).find(customerInfo1.getId());
//        } catch (BasicException ex) {
//            Logger.getLogger(QtCreditByPassAuthr.class.getName()).log(Level.SEVERE, null, ex);
//        }
//                             String aid = obj[0].toString();
//                              System.out.println("SEARCHKEYYYYYYY:::::"+aid);
//                  Object[] obj1 = null;   
//        try {
//            obj1 = (Object[]) new StaticSentence(m_App.getSession(), "SELECT ID FROM CUSTOMERS where SEARCKEY=?", SerializerWriteString.INSTANCE, new SerializerReadBasic(new Datas[]{Datas.STRING})).find(aid);
//        } catch (BasicException ex) {
//            Logger.getLogger(QtCreditByPassAuthr.class.getName()).log(Level.SEVERE, null, ex);
//        }
//                    String aid5 = obj1.toString();
//                      System.out.println("CUSTOMERRRRRRRRIDDDDDDDDDDD:::::"+aid5);
    }//GEN-LAST:event_jButton4ActionPerformed
     public void loadMemberDetails(String card) throws HeadlessException, BasicException {
        // TODO add your handling code here:
        String custoid;
        //String card = cr.getData();
        if (card.length() > 0) {
            try {
                Object[] obj = (Object[]) new StaticSentence(m_App.getSession(), "SELECT C.ID,C.SEARCHKEY,C.NAME,M.CARD,M.ID  FROM CUSTOMERS C,MEMDEPENDENT M WHERE M.MEMNO=C.ID AND M.CARD=? AND C.VISIBLE=TRUE UNION ALL  SELECT C.ID,C.SEARCHKEY,C.NAME,C.CARD,C.ID  FROM CUSTOMERS C WHERE C.CARD=? AND C.VISIBLE=TRUE ",
                        new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.STRING}), new SerializerReadBasic(new Datas[]{Datas.STRING, Datas.STRING, Datas.STRING, Datas.STRING, Datas.STRING})).find(new Object[]{card, card});
                if (obj == null) {
                    JOptionPane.showMessageDialog(this, AppLocal.getIntString("message.custnotpresent"), AppLocal.getIntString("message.custtitle"), JOptionPane.WARNING_MESSAGE);
                } else {
                    custoid = obj[0].toString();
                    customer = dlSales.loadCustomerExt(custoid);
                    jTextField2.setText(obj[1].toString());
                    jTextField1.setText(obj[2].toString());
                    setInitiator(obj[4].toString());
                    flag = false;
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "swipe a card");
    }
    }
     public void setInitiator(String initiator) {
        this.initiator = initiator;
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       
       if(jTextField1.getText()!=null && jTextField1.getText().trim().length()> 0){ 
    loadData();
                    if(jTextField2.getText()!=null && jTextField2.getText().trim().length()>0){
                        System.out.println("dataaaaaaa:::::::::"+jTextField3.getText());
                        if(jTextField3.getText()!=null && jTextField3.getText().trim().length()>0){
                            if(jTextField4.getText()!=null && jTextField4.getText().trim().length()>0){
                                if(jTextField5.getText()!=null && jTextField5.getText().trim().length()>0){
                                    insert();
                                     
                                     }
                else{
                       JOptionPane.showMessageDialog(this, "Please enter Valid To-date", null, JOptionPane.OK_OPTION);
                }
                                
                 }
                else{
                           JOptionPane.showMessageDialog(this, "Please enter valid From-Date", null, JOptionPane.OK_OPTION);
                        }
                        }
                else{
                           JOptionPane.showMessageDialog(this, "Please enter Grant Amount", null, JOptionPane.OK_OPTION);
                        }
                    }
                else{
                           JOptionPane.showMessageDialog(this, "Please enter mem No.", null, JOptionPane.OK_OPTION);
                        }
                   }
               else{
                         JOptionPane.showMessageDialog(this, "Please enter mem Name", null, JOptionPane.OK_OPTION);
                     }
        
        
        
    }    
        //ended check
        private void insert(){
          try {
             
            Transaction t;
            t = new Transaction(m_App.getSession()) {
                
                
                
                public Object transact() throws BasicException {
                    Date d = new Date();
                    String crtby =    m_App.getAppUserView().getUser().getUserInfo().getId();
                    String id = UUID.randomUUID().toString();
//                    String wrid =  m_App.getAppUserView().getUser().getWarehouse();
//                     String[] warehouses = wrid.toString().split("#");
//              String  warehouse = warehouses[0];
              double admt = Double.parseDouble(jTextField3.getText());
              Date wdvDate1=new Date();
              Date wdvDate2=new Date();
               wdvDate1=(Date) Formats.TIMESTAMP.parseValue(jTextField4.getText());
               wdvDate2=(Date) Formats.TIMESTAMP.parseValue(jTextField5.getText());
               custlist=(List<String>) new StaticSentence(m_App.getSession(), " select  customer from qtcr_limitauth where active = '1'", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).list();
                  if(custlist.contains(cusid1))  {
                      
                      JOptionPane.showMessageDialog(null, "Member is already existed", null, JOptionPane.OK_OPTION);
                  }        
                        
                    else
                  {
               
                    Object[] param2 = new Object[]{id, cusid1 , admt,wdvDate1,wdvDate2,crtby, new Date(),true};
                    //Object[] value = new Object[]{fid, true, fname.getText(), Double.valueOf(jamount.getText()), Double.valueOf(ramount.getText()), rtemp, Double.valueOf(uamount.getText()), utemp, jCheckBox4.isSelected(), m_App.getAppUserView().getUser().getName(), new Date(), jImageEditor1.getImage(), billsequence.getText(), 0, debt.getid(), jaccid, raccid, uaccid, mtype, type, staxid, appto, gracetime, maxdebitamount, smssform.getText(), iniatbilling, credtconfi};
                    
                    //new PreparedSentence(m_App.getSession(), "INSERT INTO FACILITY(ID, ACTIVE, NAME,  JOINAMT,  RENEWALAMT, RPERIODICITY,  USAGEAMT, UPERIODICITY, ENTRANCECONTROL, CREATEDBY, CRDATE,IMAGE,BILLSEQUENCE,MAXBILLNO,DUEPERIOD,JFEEACCOUNT,RENEWALACC,USAGEACC,MEMTYPE,DEBTMAX,TYPE,SERVICETAX,APPTO,SMSFORM,GRACEPERIOD,AMOUNTLIMIT) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.BOOLEAN, Datas.STRING, Datas.DOUBLE, Datas.DOUBLE, Datas.STRING, Datas.DOUBLE, Datas.STRING, Datas.BOOLEAN, Datas.STRING, Datas.TIMESTAMP, Datas.IMAGE, Datas.STRING, Datas.INT, Datas.STRING, Datas.STRING, Datas.STRING, Datas.STRING, Datas.STRING, Datas.DOUBLE, Datas.STRING, Datas.STRING, Datas.INT, Datas.STRING, Datas.INT, Datas.DOUBLE})).exec(value);
                    new PreparedSentence(m_App.getSession(),"INSERT INTO QTCR_LIMITAUTH(ID,CUSTOMER,ADDAMOUNT,FROMDATE,TODATE,CREATEDBY,CREATEDDATE,ACTIVE) VALUES (?,?,?,?,?,?,?,?) ", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.STRING,Datas.DOUBLE, Datas.TIMESTAMP,Datas.TIMESTAMP, Datas.STRING,Datas.TIMESTAMP, Datas.BOOLEAN})).exec(param2);
                    //new PreparedSentence(m_App.getSession(), "INSERT INTO FACILITY(ID, ACTIVE, NAME,  JOINAMT,  RENEWALAMT, RPERIODICITY,  USAGEAMT, UPERIODICITY, ENTRANCECONTROL, CREATEDBY, CRDATE,IMAGE,BILLSEQUENCE,MAXBILLNO,DUEPERIOD,JFEEACCOUNT,RENEWALACC,USAGEACC,MEMTYPE,DEBTMAX,TYPE_,SERVICETAX,APPTO,GRACEPERIOD,AMOUNTLIMIT,SMSFORM,INITCONTROL,CONFIRMCONTROL) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.BOOLEAN, Datas.STRING, Datas.DOUBLE, Datas.DOUBLE, Datas.STRING, Datas.DOUBLE, Datas.STRING, Datas.BOOLEAN, Datas.STRING, Datas.TIMESTAMP, Datas.IMAGE, Datas.STRING, Datas.INT, Datas.STRING, Datas.STRING, Datas.STRING, Datas.STRING, Datas.STRING, Datas.STRING, Datas.STRING, Datas.INT,Datas.INT,Datas.DOUBLE, Datas.STRING,Datas.BOOLEAN,Datas.BOOLEAN})).exec(value);
                  JOptionPane.showMessageDialog(null, "Data details inserted  Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);
                  }
               
                    return null;
                    
                }
                
            };
            t.execute();
           jTable1.setModel(fxd_table1.getTableModel());
           jTable2.setModel(fxd_table1.getTableModel());
           jTextField1.setText(null);
        jTextField2.setText(null);
        jTextField3.setText(null);
        jTextField4.setText(null);
        jTextField5.setText(null);
            //praveen:after saving a perticular facility wt ever we created then making uuid as null
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error inserting values.Ensure Correct values are inserted", "Error", JOptionPane.OK_OPTION);
        }
       
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Date d;
        try {
            d = (Date) Formats.TIMESTAMP.parseValue( jButton2.getText());
        } catch (BasicException e) {
            d = null;
        }
        d = JCalendarDialog.showCalendarTimeHours(this, d);
        if (d != null) {

            jTextField5.setText(Formats.TIMESTAMP.formatValue(d));
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Date d;
        try {
            d = (Date) Formats.TIMESTAMP.parseValue( jButton1.getText());
        } catch (BasicException e) {
            d = null;
        }
        d = JCalendarDialog.showCalendarTimeHours(this, d);
        if (d != null) {

            jTextField4.setText(Formats.TIMESTAMP.formatValue(d));
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
       if(jRadioButton1.isSelected()){
        jLabel8.setVisible(true);
        jTextField6.setVisible(true);
        jButton5.setVisible(true);
        jLabel9.setVisible(true);
        jTextField7.setVisible(true);
        jTable2.setVisible(false);
       
       jRadioButton2.setSelected(false);
       jRadioButton3.setSelected(true);
        jRadioButton4.setSelected(false);
        jLabel10.setVisible(false);
         jTextField8.setVisible(false);
         jButton6.setVisible(false);
         jLabel11.setVisible(false);
         jTextField9.setVisible(false);
         jButton7.setVisible(false);
       }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        if(jRadioButton2.isSelected()){
         jLabel10.setVisible(true);
         jTextField8.setVisible(true);
         jButton6.setVisible(true);
         jLabel11.setVisible(true);
         jTextField9.setVisible(true);
         jButton7.setVisible(true);
         jTable2.setVisible(false);
         jRadioButton1.setSelected(false);
         jRadioButton3.setSelected(true);
        jRadioButton4.setSelected(false);
         jLabel8.setVisible(false);
        jTextField6.setVisible(false);
        jButton5.setVisible(false);
        jLabel9.setVisible(false);
        jTextField7.setVisible(false);
    }//GEN-LAST:event_jRadioButton2ActionPerformed
    }
    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
       if( jRadioButton3.isSelected()){
      jRadioButton4.setSelected(false);
       }

    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    
    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
         String custoid;

        if (evt.getKeyText(evt.getKeyCode()).equals("Enter")) {
            String cust = jTextField1.getText();
            try {
                Object[] obj = (Object[]) new StaticSentence(m_App.getSession(), "SELECT ID,NAME FROM CUSTOMERS WHERE SEARCHKEY = ? AND VISIBLE = TRUE", SerializerWriteString.INSTANCE, new SerializerReadBasic(new Datas[]{Datas.STRING, Datas.STRING})).find(cust.toUpperCase());                      // #CHANGE BY AAKASH... ON 6TH DEC 2013
                if (obj == null) {
                    JOptionPane.showMessageDialog(this, AppLocal.getIntString("message.custnotpresent"), AppLocal.getIntString("message.custtitle"), JOptionPane.WARNING_MESSAGE);
                } else {
                    custoid = obj[0].toString();
                    customer = dlSales.loadCustomerExt(custoid);
                    cusid1=custoid;
                    jTextField2.setText(obj[1].toString());
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyPressed
        // TODO add your handling code here:
        String custoid;

        if (evt.getKeyText(evt.getKeyCode()).equals("Enter")) {
            String cust = jTextField6.getText();
            try {
                Object[] obj = (Object[]) new StaticSentence(m_App.getSession(), "SELECT ID,NAME FROM CUSTOMERS WHERE SEARCHKEY = ? AND VISIBLE = TRUE", SerializerWriteString.INSTANCE, new SerializerReadBasic(new Datas[]{Datas.STRING, Datas.STRING})).find(cust.toUpperCase());                      // #CHANGE BY AAKASH... ON 6TH DEC 2013
                if (obj == null) {
                    JOptionPane.showMessageDialog(this, AppLocal.getIntString("message.custnotpresent"), AppLocal.getIntString("message.custtitle"), JOptionPane.WARNING_MESSAGE);
                } else {
                    custoid = obj[0].toString();
                    customer = dlSales.loadCustomerExt(custoid);
                    jTextField7.setText(obj[1].toString());
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jTextField6KeyPressed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    
       
        
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        if(jCheckBox1.isSelected()){
            jCheckBox2.setSelected(false);
        
            try{
                fxd_table1 = QtLimitTable.GetQt(m_App, 0);
                jTable1.setModel(fxd_table1.getTableModel());
                jTable1.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

                TableColumnModel cmodel = jTable1.getColumnModel();
                cmodel.getColumn(0).setPreferredWidth(30);
                cmodel.getColumn(1).setPreferredWidth(100);
                cmodel.getColumn(2).setPreferredWidth(100);
                cmodel.getColumn(3).setPreferredWidth(100);
                cmodel.getColumn(4).setPreferredWidth(100);
                cmodel.getColumn(5).setPreferredWidth(100);
                cmodel.getColumn(6).setPreferredWidth(70);
            } catch (BasicException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jCheckBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox2ItemStateChanged
        // TODO add your handling code here:
        
          if(jCheckBox2.isSelected()){
            jCheckBox1.setSelected(false);
        
            try{
                fxd_table1 = QtLimitTable.GetQt(m_App, 1);
                jTable1.setModel(fxd_table1.getTableModel());
                jTable1.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

                TableColumnModel cmodel = jTable1.getColumnModel();
                cmodel.getColumn(0).setPreferredWidth(30);
                cmodel.getColumn(1).setPreferredWidth(100);
                cmodel.getColumn(2).setPreferredWidth(100);
                cmodel.getColumn(3).setPreferredWidth(100);
                cmodel.getColumn(4).setPreferredWidth(100);
                cmodel.getColumn(5).setPreferredWidth(100);
                cmodel.getColumn(6).setPreferredWidth(70);
            } catch (BasicException ex) {
                ex.printStackTrace();
            }
          }
    }//GEN-LAST:event_jCheckBox2ItemStateChanged

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        try {
            int row = jTable1.getSelectedRow();
            if (row < jTable1.getRowCount() && row >= 0) {
//                String id = jTable1.getModel().getValueAt(row, 3).toString();
//                 System.out.println("iddddddd1111111111111111111:::::::"+id);
               // String fname1 = jTable1.getModel().getValueAt(row, 0).toString();
                if (JOptionPane.showConfirmDialog(this, "Do you want to deactivate" + " QTCREDIT ?", null, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                   //  int row = jTable1.getSelectedRow();
                QtLimitTable.QtData  showdata = fxd_table1.getList().get(row);
                    
                    deac_id = showdata.getMemno();
                    deactQtlimit();  
                   
//                    new PreparedSentence(m_App.getSession(), "UPDATE qtcr_limitauth SET ACTIVE='0' WHERE ADDAMOUNT=?", new SerializerWriteBasic(new Datas[]{Datas.STRING})).exec(new Object[]{id});
//                   JOptionPane.showMessageDialog(this, "Deactivated  Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);
               }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton9ActionPerformed
//////////////////////////////////////////////////////////////////////////
    
   private void deactQtlimit() {
        try {

            new PreparedSentence(m_App.getSession(), "update qtcr_limitauth  set  active=0  where id = ? ", new SerializerWriteBasic(new Datas[]{Datas.STRING})).exec(new Object[]{ deac_id});

            if (jCheckBox1.isSelected()) {
                  fxd_table1 = QtLimitTable.GetQt(m_App, 0);
                jTable1.setModel(fxd_table1.getTableModel());
            }
            if (jCheckBox2.isSelected()) {
                fxd_table1 = QtLimitTable.GetQt(m_App, 1);
                jTable1.setModel(fxd_table1.getTableModel());
            }
            
            JOptionPane.showMessageDialog(this, "De-Activated Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);
//            assetListModel = new ComboBoxValModel(getAssetList());
//            assetcombo.setModel(assetListModel);

        } catch (NullPointerException e) {

            e.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }  
    
    
///////////////////////////////////////////////////////////////////////////    
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        if(jRadioButton2.isSelected()){ 
           if(jRadioButton3.isSelected()){
          if(jTextField8.getText()!=null && jTextField8.getText().length()>0){ 
        if(jTextField9.getText()!=null && jTextField9.getText().length()>0){
           
                try {
                    Date sdate = (Date) Formats.TIMESTAMP.parseValue(jTextField8.getText());
                    Date edate = (Date) Formats.TIMESTAMP.parseValue(jTextField9.getText());
                    gtablemodel = QtLimitTable.GetQt1(m_App, sdate, edate);
                      jTable2.setModel(gtablemodel.getTableModel());
                       jTable2.setVisible(true);
                } catch (BasicException ex) {
                    Logger.getLogger(QtCreditByPassAuthr.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
          }
          }
           else{
                if(jTextField8.getText()!=null && jTextField8.getText().length()>0){ 
        if(jTextField9.getText()!=null && jTextField9.getText().length()>0){
           
                try {
                    Date sdate = (Date) Formats.TIMESTAMP.parseValue(jTextField8.getText());
                    Date edate = (Date) Formats.TIMESTAMP.parseValue(jTextField9.getText());
                    gtablemodel = QtLimitTable.GetQt11(m_App, sdate, edate);
                      jTable2.setModel(gtablemodel.getTableModel());
                      jTable2.setVisible(true);
                } catch (BasicException ex) {
                    Logger.getLogger(QtCreditByPassAuthr.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
          }
           }
           
        }
        
        if(jRadioButton1.isSelected()){ 
           if(jRadioButton3.isSelected()){
          if(jTextField6.getText()!=null && jTextField6.getText().length()>0){ 
        if(jTextField7.getText()!=null && jTextField7.getText().length()>0){
           
                try {
                    String id;
                  String search = jTextField6.getText();
                  Object obj = new StaticSentence(m_App.getSession(), "SELECT  id FROM customers WHERE searchkey=?", SerializerWriteString.INSTANCE,SerializerReadString.INSTANCE).find(search);
                   if(obj!=null){
                    id = obj.toString();
                }
                else{
                    id="";
                }
                 // Date edate = (Date) Formats.TIMESTAMP.parseValue(jTextField9.getText());
                    gtablemodel = QtLimitTable.GetQt2(m_App, id);
                      jTable2.setModel(gtablemodel.getTableModel());
                      jTable2.setVisible(true);
                } catch (BasicException ex) {
                    Logger.getLogger(QtCreditByPassAuthr.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
          }
         }
           else{
               if(jTextField6.getText()!=null && jTextField6.getText().length()>0){ 
        if(jTextField7.getText()!=null && jTextField7.getText().length()>0){
           
                try {
                    String id;
                  String search = jTextField6.getText();
                  Object obj = new StaticSentence(m_App.getSession(), "SELECT  id FROM customers WHERE searchkey=?", SerializerWriteString.INSTANCE,SerializerReadString.INSTANCE).find(search);
                   if(obj!=null){
                    id = obj.toString();
                }
                else{
                    id="";
                }
                 // Date edate = (Date) Formats.TIMESTAMP.parseValue(jTextField9.getText());
                    gtablemodel = QtLimitTable.GetQt22(m_App, id);
                      jTable2.setModel(gtablemodel.getTableModel());
                      jTable2.setVisible(true);
                } catch (BasicException ex) {
                    Logger.getLogger(QtCreditByPassAuthr.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
          }
           }
        }
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jTextField10KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField10KeyPressed
        try {
            // TODO add your handling code here:
            String custoid;
            String custid2;
            double amt=0.0;
             double amt1=0.0;
              custlist=(List<String>) new StaticSentence(m_App.getSession(), " select  customer from qtcrlimit_immediate", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).list();

            searchkey_list1=(List<String>) new StaticSentence(m_App.getSession(), " select  id from billingmember", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).list();
            searchkey_list2=(List<String>) new StaticSentence(m_App.getSession(), " select  customer from QTCR_LIMITAUTH where active = '1'", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).list();
            if (evt.getKeyText(evt.getKeyCode()).equals("Enter")) {
                String cust = jTextField10.getText();
               
                    Object[] obj = (Object[]) new StaticSentence(m_App.getSession(), "SELECT ID,NAME,MEMTYPE FROM CUSTOMERS WHERE SEARCHKEY = ? AND VISIBLE = TRUE", SerializerWriteString.INSTANCE, new SerializerReadBasic(new Datas[]{Datas.STRING, Datas.STRING, Datas.STRING})).find(cust.toUpperCase());                      // #CHANGE BY AAKASH... ON 6TH DEC 2013
                    if (obj == null) {
                        JOptionPane.showMessageDialog(this, AppLocal.getIntString("message.custnotpresent"), AppLocal.getIntString("message.custtitle"), JOptionPane.WARNING_MESSAGE);
                    } else {
                        custoid = obj[0].toString();
                        custid2=  obj[2].toString();
                        customer = dlSales.loadCustomerExt(custoid);
                        cusid1=custoid;
                        jTextField11.setText(obj[1].toString());
                        Object[] obj1 = (Object[]) new StaticSentence(m_App.getSession(), "SELECT NAME,DEBTMAX FROM  MEMTYPE  WHERE ID = ? AND ACTIVE = TRUE", SerializerWriteString.INSTANCE, new SerializerReadBasic(new Datas[]{ Datas.STRING,Datas.DOUBLE})).find(custid2.toUpperCase());
                        jTextField12.setText( obj1[0].toString());
                       // Object[] obj2 = (Object[]) new StaticSentence(m_App.getSession(), "SELECT ADDAMOUNT FROM  QTCR_LIMITAUTH  WHERE customer = ? AND ACTIVE = TRUE", SerializerWriteString.INSTANCE, new SerializerReadBasic(new Datas[]{ Datas.STRING})).find(cusid1);
                        amt=Double.parseDouble(obj1[1].toString());
                        jTextField13.setText(decimalFormat.format(amt));
//                         if(custlist.contains(cusid1))  {
//                                 // Date d = new Date();
//                                 
//                          SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
//                        Date dateWithoutTime = sdf.parse(sdf.format(new Date()));
//                        Object[] obj3 = (Object[]) new StaticSentence(m_App.getSession(), "SELECT sum(limit1) from  qtcrlimit_immediate where customer=? and createddate=?",
//                              new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.TIMESTAMP}), new SerializerReadBasic(new Datas[]{Datas.DOUBLE})).find(new Object[]{cusid1,dateWithoutTime});
//                           double admt1 = Double.parseDouble(obj3[0].toString());
//                          jTextField18.setText(decimalFormat.format(admt1));
//                                                           }
//                         else{
//                                jTextField18.setText(null);
//                            }
                            Object[] obj2 = (Object[]) new StaticSentence(m_App.getSession(), "SELECT ADDAMOUNT,FROMDATE,TODATE FROM  QTCR_LIMITAUTH  WHERE customer = ? AND ACTIVE = TRUE", SerializerWriteString.INSTANCE, new SerializerReadBasic(new Datas[]{ Datas.DOUBLE,Datas.TIMESTAMP,Datas.TIMESTAMP})).find(cusid1);
                          amt1=Double.parseDouble(obj2[0].toString());
                          jTextField14.setText(decimalFormat.format(amt1));
                         jTextField15.setText(obj2[1].toString());
                         jTextField16.setText(obj2[2].toString());
                          if(custlist.contains(cusid1))  {
                                 // Date d = new Date();
                                 
                          SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                        Date dateWithoutTime = sdf.parse(sdf.format(new Date()));
                        Object[] obj3 = (Object[]) new StaticSentence(m_App.getSession(), "SELECT sum(limit1) from  qtcrlimit_immediate where customer=? and createddate=?",
                              new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.TIMESTAMP}), new SerializerReadBasic(new Datas[]{Datas.DOUBLE})).find(new Object[]{cusid1,dateWithoutTime});
                           double admt1 = Double.parseDouble(obj3[0].toString());
                          jTextField18.setText(decimalFormat.format(admt1));
                                                           }
                         else{
                                jTextField18.setText(null);
                            }
                       if(searchkey_list1.contains(cusid1)){
                   
                        }
                       else{
                              JOptionPane.showMessageDialog(this, AppLocal.getIntString("Member not billed yet, use the create menu to bypass Qtcredit limit...!"), AppLocal.getIntString("message.custtitle"), JOptionPane.WARNING_MESSAGE);
                        }
                     
                    }
            }
            else{
              jTextField14.setText(null);
            jTextField15.setText(null);
            jTextField16.setText(null);
            }
        } catch (BasicException ex) {
            Logger.getLogger(QtCreditByPassAuthr.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(QtCreditByPassAuthr.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTextField10KeyPressed

    private void jTextField10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField10ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        try {
            // TODO add your handling code here:
            String custoid;
            String custid2;
            double amt=0.0;
            double amt1=0.0;
             custlist=(List<String>) new StaticSentence(m_App.getSession(), " select  customer from qtcrlimit_immediate", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).list();
            searchkey_list1=(List<String>) new StaticSentence(m_App.getSession(), " select  id from billingmember", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).list();
        //    searchkey_list2=(List<String>) new StaticSentence(m_App.getSession(), " select  customer from QTCR_LIMITAUTH where active = '1'", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).list();
            JCustomerFinder finder = JCustomerFinder.getCustomerFinder(this, dlCustomers);
            finder.setVisible(true);
             jTextField14.setText(null);
            jTextField15.setText(null);
            jTextField16.setText(null);
            CustomerInfo customerInfo = finder.getSelectedCustomer();
            //CustomerInfo customerInfo1 = finder.getSelectedCustomer();
            String cusid = customerInfo.getId();
            cusid1 =cusid;
            System.out.println("cusid to ID:::::"+cusid);
            if (customerInfo != null)
                    customer = dlSales.loadCustomerExt(customerInfo.getId());
                    jTextField11.setText(customerInfo.toString());
                    jTextField10.setText(customerInfo.getSearchkey());
                    ///////////////////////////////////////////////////////////////////////////
                    Object[] obj = (Object[]) new StaticSentence(m_App.getSession(), "SELECT MEMTYPE FROM CUSTOMERS WHERE id = ? AND VISIBLE = TRUE", SerializerWriteString.INSTANCE, new SerializerReadBasic(new Datas[]{ Datas.STRING})).find(cusid1.toUpperCase());
                    custid2=  obj[0].toString();
                    Object[] obj1 = (Object[]) new StaticSentence(m_App.getSession(), "SELECT NAME,DEBTMAX FROM  MEMTYPE  WHERE ID = ? AND ACTIVE = TRUE", SerializerWriteString.INSTANCE, new SerializerReadBasic(new Datas[]{ Datas.STRING,Datas.DOUBLE})).find(custid2.toUpperCase());
                    amt=Double.parseDouble(obj1[1].toString());
                    jTextField12.setText( obj1[0].toString());
                    jTextField13.setText(decimalFormat.format(amt));
//                     if(custlist.contains(cusid1))  {
//                      //  Date d = new Date();
//                      SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
//                   Date dateWithoutTime = sdf.parse(sdf.format(new Date()));
//             Object[] obj3 = (Object[]) new StaticSentence(m_App.getSession(), "SELECT sum(limit1) from  qtcrlimit_immediate where customer=? and createddate",
//            new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.TIMESTAMP}), new SerializerReadBasic(new Datas[]{Datas.DOUBLE})).find(new Object[]{cusid1,dateWithoutTime});
//          double admt1 = Double.parseDouble(obj3[0].toString());
//          jTextField18.setText(decimalFormat.format(admt1));
//                                                    }
//                        else{
//                            jTextField18.setText(null);
//                        }
                   // if(searchkey_list2.contains(cusid1)){
                        Object[] obj2 = (Object[]) new StaticSentence(m_App.getSession(), "SELECT ADDAMOUNT,FROMDATE,TODATE FROM  QTCR_LIMITAUTH  WHERE customer = ? AND ACTIVE = TRUE", SerializerWriteString.INSTANCE, new SerializerReadBasic(new Datas[]{ Datas.DOUBLE,Datas.TIMESTAMP,Datas.TIMESTAMP})).find(cusid1);
                        amt1=Double.parseDouble(obj2[0].toString());
                        jTextField14.setText(decimalFormat.format(amt1));
                        jTextField15.setText(obj2[1].toString());
                        jTextField16.setText(obj2[2].toString());
                           if(custlist.contains(cusid1))  {
                      //  Date d = new Date();
                      SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                   Date dateWithoutTime = sdf.parse(sdf.format(new Date()));
             Object[] obj3 = (Object[]) new StaticSentence(m_App.getSession(), "SELECT sum(limit1) from  qtcrlimit_immediate where customer=? and createddate=?",
            new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.TIMESTAMP}), new SerializerReadBasic(new Datas[]{Datas.DOUBLE})).find(new Object[]{cusid1,dateWithoutTime});
          double admt1 = Double.parseDouble(obj3[0].toString());
          jTextField18.setText(decimalFormat.format(admt1));
                                                    }
                        else{
                            jTextField18.setText(null);
                        }
                        //////////////////////////////////////////
                        if(searchkey_list1.contains(cusid1)){
                                            
                        }
                        else{
                            JOptionPane.showMessageDialog(this, AppLocal.getIntString("Member not billed yet, use the create menu to bypass Qtcredit limit...!"), AppLocal.getIntString("message.custtitle"), JOptionPane.WARNING_MESSAGE);
                        }
        } catch (BasicException ex) {
            Logger.getLogger(QtCreditByPassAuthr.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(QtCreditByPassAuthr.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton10ActionPerformed

    private void jTextField13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
                                               
            try {
                searchkey_list1=(List<String>) new StaticSentence(m_App.getSession(), " select  id from billingmember", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).list();
                Object[] obj2 = (Object[]) new StaticSentence(m_App.getSession(), "SELECT curropb FROM  billingmember  WHERE id = ?", SerializerWriteString.INSTANCE, new SerializerReadBasic(new Datas[]{ Datas.DOUBLE})).find(cusid1);
                                             if(searchkey_list1.contains(cusid1)){
                                            if (obj2 != null) {
                                                Double max = Double.parseDouble(obj2[0].toString());
                                                Double cust =  Double.parseDouble(jTextField17.getText());
                                                Double rmax=  max-cust;
                                                    insert1();
                                     new PreparedSentence(m_App.getSession(), "update billingmember  set  curropb=? where id = ? ", new SerializerWriteBasic(new Datas[]{Datas.DOUBLE,Datas.STRING})).exec(new Object[]{rmax,cusid1});
                                            
                                     JOptionPane.showMessageDialog(null, "Data updated Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);
                                            }
                                      }
                                             else {
                                            JOptionPane.showMessageDialog(this, "Member Not Billed Yet use the create menu to bypass Qtcredit limit...!", null, JOptionPane.OK_OPTION);
                                            }    
            jTextField10.setText(null);
            jTextField11.setText(null);
            jTextField12.setText(null);
            jTextField13.setText(null);
            jTextField14.setText(null);
            jTextField15.setText(null);
            jTextField16.setText(null);
            jTextField17.setText(null);
            jTextField18.setText(null);
        } catch (BasicException ex) {
            Logger.getLogger(QtCreditByPassAuthr.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton11ActionPerformed
 ///////////////////////////////////////////////////////////////////////////////
   /// To insert the valuse into the qtcrlimit_immediate
      private void insert1(){
          try {
              custlist=(List<String>) new StaticSentence(m_App.getSession(), " select  customer from qtcrlimit_immediate", SerializerWriteString.INSTANCE, SerializerReadString.INSTANCE).list();
              if(custlist.contains(cusid1))  {
    
             Object[] obj = (Object[]) new StaticSentence(m_App.getSession(), "SELECT limit1 from  qtcrlimit_immediate where customer=?  order by createddate desc",
                              new SerializerWriteBasic(new Datas[]{Datas.STRING}), new SerializerReadBasic(new Datas[]{Datas.DOUBLE})).find(new Object[]{cusid1});
       double admt1 = Double.parseDouble(obj[0].toString());
          jTextField18.setText(decimalFormat.format(admt1));
                                              }
              try {
                  
                  Transaction t;
                  t = new Transaction(m_App.getSession()) {
                      
                      public Object transact() throws BasicException {
                          Date d = new Date();
                          String crtby =    m_App.getAppUserView().getUser().getUserInfo().getId();
                          String id = UUID.randomUUID().toString();
                          double admt = Double.parseDouble(jTextField17.getText());
                          Object[] param2 = new Object[]{id, cusid1 ,crtby, d, admt};
         new PreparedSentence(m_App.getSession(),"INSERT INTO qtcrlimit_immediate (ID,CUSTOMER,CREATEDBY,CREATEDDATE,Limit1) VALUES(?,?,?,?,?)", new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.STRING,Datas.STRING,Datas.TIMESTAMP,Datas.DOUBLE})).exec(param2);
      
         return null;
                      } 
                  };
                  t.execute(); 
              } catch (Exception e) {
                  e.printStackTrace();
                  JOptionPane.showMessageDialog(this, "Error inserting values.Ensure Correct values are inserted", "Error", JOptionPane.OK_OPTION);
              } 
          } catch (BasicException ex) {
            Logger.getLogger(QtCreditByPassAuthr.class.getName()).log(Level.SEVERE, null, ex);
        }  
    } 
    
    ////////////////////////////////////////////////////////////////////////////
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables

    @Override
    public String getTitle() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        return "Qt Credit Limit ByPass Authorization";
    }

    @Override
    public void activate() throws BasicException {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates
        loadData();
    }

    @Override
    public boolean deactivate() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        return true;
    }

    @Override
    public JComponent getComponent() {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates
       return this;
    }

    @Override
    public Object getBean() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        return this;
    }

    private void loadData() {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        //jButton3.setSelected(true);
          jLabel8.setVisible(false);
        jTextField6.setVisible(false);
        jButton5.setVisible(false);
        jLabel9.setVisible(false);
        jTextField7.setVisible(false);
        jTable2.setVisible(false);
           jLabel10.setVisible(false);
         jTextField8.setVisible(false);
         jButton6.setVisible(false);
         jLabel11.setVisible(false);
         jTextField9.setVisible(false);
         jButton7.setVisible(false);
        jTable1.setVisible(true);
         jTextField10.setText(null);
        jTextField11.setText(null);
        jTextField12.setText(null);
        jTextField13.setText(null);
        jTextField14.setText(null);
        
        jTextField15.setText(null);
        jTextField16.setText(null);
        jTextField17.setText(null);
         jTextField18.setText(null);
       
        try {
            fxd_table1 = QtLimitTable.GetQt(m_App, 0);
            jTable1.setModel(fxd_table1.getTableModel());
        } catch (BasicException ex) {
            Logger.getLogger(QtCreditByPassAuthr.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public Object createValue() throws BasicException {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        return this;
    }
    
 

    private static class string {

        public string() {
        }
    }
    
    
    
    }

     
 
     
     

