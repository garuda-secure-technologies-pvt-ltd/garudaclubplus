/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JUserAuthorisation.java
 *
 * Created on 17-Aug-2011, 15:36:56
 */
package com.openbravo.pos.sales.restaurant;

import com.openbravo.basic.BasicException;
import com.openbravo.data.loader.Datas;
import com.openbravo.data.loader.PreparedSentence;
import com.openbravo.data.loader.SerializerWriteBasic;
import com.openbravo.data.loader.SerializerReadBasic;
import com.openbravo.data.loader.SerializerWriteString;
import com.openbravo.data.loader.StaticSentence;
import com.openbravo.pos.customers.CustomerInfoExt;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.BeanFactoryApp;
import com.openbravo.pos.forms.BeanFactoryException;
import com.openbravo.pos.forms.DataLogicSales;
import com.openbravo.pos.forms.JPanelView;
import com.openbravo.pos.sales.DataLogicReceipts;
import com.openbravo.pos.ticket.TicketInfo;
import com.openbravo.pos.sales.DataConstants;
        
import java.util.Date;
import java.util.UUID;
import javax.swing.JComponent;
import javax.swing.JOptionPane;

/**
 *
 * @author swathi
 */
public class JUserAuthorisation extends javax.swing.JPanel implements JPanelView, BeanFactoryApp {

    private AppView m_App;
    private UserAuthorisationModel uamodel;
    private UserAuthorisationModel uamodel1;
    private CustomerInfoExt customer;
    private DataLogicSales dlSales = null;
    private DataLogicReceipts dlReceipts = null;
    private TicketInfo m_oTicket;
    

    /** Creates new form JUserAuthorisation */
    public JUserAuthorisation() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setName("jTable1"); // NOI18N
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Reject");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Allow");
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable2.setName("jTable2"); // NOI18N
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton3.setText("Reject");
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Allow");
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton3))
                .addContainerGap(58, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        double addmnt1=0.0;
        m_oTicket = new TicketInfo();        
        String memid = (String) uamodel.getApprovalTableModel().getValueAt(row, 7);
        String id = (String) uamodel.getApprovalTableModel().getValueAt(row, 8);
        String waiter = (String) uamodel.getApprovalTableModel().getValueAt(row, 9);
        String place = (String) uamodel.getApprovalTableModel().getValueAt(row, 10);
        String floor = (String) uamodel.getApprovalTableModel().getValueAt(row, 11);
        String role = (String) uamodel.getApprovalTableModel().getValueAt(row, 12);
        String approvedby = m_App.getAppUserView().getUser().getName();
        try {
            customer = dlSales.loadCustomerExt(memid);
            m_oTicket.setCustomer(customer);
            m_oTicket.setPlace(dlSales.getPlaceByID(place));
            m_oTicket.setWaiter(dlSales.getWaiterByID(waiter));
            m_oTicket.setFloor(dlSales.getFloorByID(floor));
            m_oTicket.setUser(m_App.getAppUserView().getUser().getUserInfo());            
            new StaticSentence(m_App.getSession(), "UPDATE USERAUTHORISATION SET APPROVEDBY=?,STATUS_=?,APPDATE=?  WHERE ID=?",
                    new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.BOOLEAN, Datas.TIMESTAMP,  Datas.STRING})).exec(new Object[]{approvedby, true, new Date(), id});
            //initiator changes - start
            dlReceipts.insertSharedTicket(memid, m_oTicket, role,memid,DataConstants.SALES);




///aaa            
            Object[] obj = (Object[]) new StaticSentence(m_App.getSession(), "SELECT ACCOUNT FROM CUSTOMERS where ID=?", SerializerWriteString.INSTANCE, new SerializerReadBasic(new Datas[]{Datas.STRING})).find(memid);
            String aid = obj[0].toString();
            Object[] obj1 = (Object[]) new StaticSentence(m_App.getSession(), "SELECT ((OBDEBIT+CURDEBIT)-(OBCREDIT+CURCREDIT)) FROM trailbalance where ACCOUNTID=?", SerializerWriteString.INSTANCE, new SerializerReadBasic(new Datas[]{Datas.DOUBLE})).find(aid);
             String opbs = obj1[0].toString();
             Double opb = new Double(opbs);
             
             
             ///////
             Double opb1=opb;
                                 
                                 Object[] objstotal1 = (Object[]) new StaticSentence(m_App.getSession(), "SELECT FROMDATE,TODATE,ADDAMOUNT FROM QTCR_LIMITAUTH WHERE CUSTOMER=? AND ACTIVE IS TRUE",
                                        new SerializerWriteBasic(new Datas[]{Datas.STRING}), new SerializerReadBasic(new Datas[]{Datas.TIMESTAMP,Datas.TIMESTAMP,Datas.DOUBLE})).find(new Object[]{memid});
                              Date fromdate=new Date();
                               Date todate=new Date();
                             Date currentdate=new Date();
                                
                                if(objstotal1 !=null){
                                 fromdate     =(Date) objstotal1[0]; 
                                 todate       =(Date) objstotal1[1];
                                   addmnt1       =(double) objstotal1[2];
                                   if(currentdate.after(fromdate) && currentdate.before(todate)){
                                   if(opb>0){
                                       opb1=opb-addmnt1;
                                   
                        
                                  }
                          
                     else if(opb<0){
                       opb1=opb-addmnt1;
                        
                            }
                    else{
                         opb1=opb-addmnt1;                          
                     }
                                   }                               
                                }
                                /////
                                
            Object[] obj2 = (Object[]) new StaticSentence(m_App.getSession(), "SELECT ID FROM billingmember where ID=?", SerializerWriteString.INSTANCE, new SerializerReadBasic(new Datas[]{Datas.STRING})).find(memid);
            if(obj2==null){
                
            new PreparedSentence(m_App.getSession(), "INSERT INTO billingmember(ID, OPB, CURROPB) values(?,?,?)", new SerializerWriteBasic(new Datas[]{Datas.STRING,Datas.DOUBLE, Datas.DOUBLE})).exec(new Object[]{memid,opb,opb1});
            }
///aaa            
            //initiator changes - end

            
            
            
            
            JOptionPane.showMessageDialog(this, "Shared ticket is created");
            jButton1.setVisible(false);
            jButton2.setVisible(false);
            load();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            int row = jTable1.getSelectedRow();
            String id = (String) uamodel.getApprovalTableModel().getValueAt(row, 8);
            String approvedby = m_App.getAppUserView().getUser().getName();
            new StaticSentence(m_App.getSession(), "UPDATE USERAUTHORISATION SET APPROVEDBY=?,STATUS_=?,APPDATE=? WHERE ID=?",
                    new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.BOOLEAN, Datas.TIMESTAMP, Datas.STRING})).exec(new Object[]{approvedby, false, new Date(), id});
            jButton1.setVisible(false);
            jButton2.setVisible(false);
            load();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        jButton1.setVisible(true);
        jButton2.setVisible(true);

    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        jButton3.setVisible(true);
        jButton4.setVisible(true);
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         try {
            int row = jTable2.getSelectedRow();
            String id = (String) uamodel1.getCreditApprovalTableModel().getValueAt(row, 8);
            String approvedby = m_App.getAppUserView().getUser().getName();
            new StaticSentence(m_App.getSession(), "UPDATE USERAUTHORISATION SET APPROVEDBY=?,STATUS_=?,APPDATE=? WHERE ID=?",
            new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.BOOLEAN, Datas.TIMESTAMP, Datas.STRING})).exec(new Object[]{approvedby, false, new Date(), id});
            jButton3.setVisible(false);
            jButton4.setVisible(false);
            load();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
         try {
            int row = jTable2.getSelectedRow();
            String id = (String) uamodel1.getCreditApprovalTableModel().getValueAt(row, 8);
            String approvedby = m_App.getAppUserView().getUser().getName();
            new StaticSentence(m_App.getSession(), "UPDATE USERAUTHORISATION SET APPROVEDBY=?,STATUS_=?,APPDATE=? WHERE ID=?",
            new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.BOOLEAN, Datas.TIMESTAMP, Datas.STRING})).exec(new Object[]{approvedby, true, new Date(), id});
            jButton3.setVisible(false);
            jButton4.setVisible(false);
            load();
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    public void load() throws BasicException {

        try {
            uamodel = UserAuthorisationModel.loadinstance(m_App);
            jTable1.setModel(uamodel.getApprovalTableModel());
            uamodel1 = UserAuthorisationModel.loadinstance1(m_App);
            jTable2.setModel(uamodel1.getCreditApprovalTableModel());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void insertToUserAuthorisation(CustomerInfoExt ac_cust, String ac_place, String ac_waiter, String ac_floor, String appuser, AppView app, String role) throws BasicException {

        new StaticSentence(app.getSession(), "INSERT INTO USERAUTHORISATION(ID,MEMID,RDATE,REQUESTEDBY,COUNTER,WAITER,PLACE,FLOOR) VALUES (?,?,?,?,?,?,?,?)", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.STRING, Datas.TIMESTAMP, Datas.STRING, Datas.STRING, Datas.STRING, Datas.STRING,Datas.STRING}),null).exec(new Object[]{UUID.randomUUID().toString(), ac_cust.getId(), new Date(), appuser,app.getAppUserView().getUser().getRole(),ac_waiter,ac_place,ac_floor});
        JOptionPane.showMessageDialog(this, "Request is sent for approval");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables

    public String getTitle() {
        return "User Authorisation";
    }

    public void activate() throws BasicException {
        jButton1.setVisible(false);
        jButton2.setVisible(false);
        jButton3.setVisible(false);
        jButton4.setVisible(false);
        load();
    }

    public boolean deactivate() {
        return true;
    }

    public JComponent getComponent() {
        return this;
    }

    public void init(AppView app) throws BeanFactoryException {
        m_App = app;
        dlSales = (DataLogicSales) m_App.getBean("com.openbravo.pos.forms.DataLogicSalesCreate");
        dlReceipts = (DataLogicReceipts) app.getBean("com.openbravo.pos.sales.DataLogicReceipts");

    }

    public Object getBean() {
        return this;
    }
}
