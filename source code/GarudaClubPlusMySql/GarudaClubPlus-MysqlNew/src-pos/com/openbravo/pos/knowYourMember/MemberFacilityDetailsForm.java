
package com.openbravo.pos.knowYourMember;

import com.openbravo.basic.BasicException;
import com.openbravo.data.gui.MessageInf;
import com.openbravo.data.loader.Datas;
import com.openbravo.data.loader.PreparedSentence;
import com.openbravo.data.loader.SerializerReadBasic;
import com.openbravo.data.loader.SerializerReadString;
import com.openbravo.data.loader.SerializerWriteBasic;
import com.openbravo.data.loader.SerializerWriteString;
import com.openbravo.data.loader.StaticSentence;
import com.openbravo.pos.forms.AppLocal;
import com.openbravo.pos.forms.AppView;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dialog;
import java.awt.Frame;
import java.awt.Window;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractListModel;
import javax.swing.JFrame;
import javax.swing.ListModel;
import javax.swing.table.AbstractTableModel;

public class MemberFacilityDetailsForm extends javax.swing.JDialog {
    private AppView app;
    private boolean flag;
    //private MemberFacilityDetailsForm facilitydetails; 
    private String Memno;
    private String FacilityName;
   //MemberFacilityDetailsForm mds = new MemberFacilityDetailsForm();
    public MemberFacilityDetailsForm() {
        initComponents();
    }

     public MemberFacilityDetailsForm(java.awt.Frame parent, boolean modal ) throws BasicException
     {
        super(parent, modal);
        initComponents();
     
        
    }
      public MemberFacilityDetailsForm(java.awt.Dialog parent,  AppView app, boolean flag , String Memno, String FacilityName)  {
        super(parent, true);
       
        this.app = app;
        this.flag = flag;
        this.Memno=Memno;
        this.FacilityName =FacilityName;
        
      
    }
    String fullstrFinal = null;
     public MemberFacilityDetailsForm(java.awt.Frame parent,  AppView app, boolean flag,String Memno, String FacilityName) throws BasicException  {
        super(parent, true);
       
        this.app = app;
        this.flag = flag;
        this.Memno=Memno;
        this.FacilityName =FacilityName;
        
        fullstrFinal = getFacilitydetails(app);
       
      //  List facility_details = getFacilitydetails();
      //  Facility_details_Jlist.setModel(new MemberFacilityDetailsForm.ItemsListModel(facility_details));
      //  Facility_details_Jlist.setVisible(true);
        
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel21 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        facility_details_jTextArea = new javax.swing.JTextArea();
        Facility_Name = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel21.setBackground(new java.awt.Color(255, 255, 255));
        jLabel21.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 153, 255));
        jLabel21.setText("Facility details");
        jLabel21.setAutoscrolls(true);
        jLabel21.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        facility_details_jTextArea.setColumns(20);
        facility_details_jTextArea.setRows(5);
        jScrollPane1.setViewportView(facility_details_jTextArea);

        Facility_Name.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Facility_Name.setForeground(new java.awt.Color(0, 102, 204));
        Facility_Name.setText("Facility Name :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Facility_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(158, 158, 158))
            .addGroup(layout.createSequentialGroup()
                .addGap(217, 217, 217)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(257, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(Facility_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  public static MemberFacilityDetailsForm getDialog(Component parent,  AppView app, boolean flag,String Memno , String FacilityName) throws BasicException {
    //To change body of generated methods, choose Tools | Templates.
    Window window = getWindow(parent);
        
        MemberFacilityDetailsForm details;
        

        if (window instanceof Frame) {
            details = new MemberFacilityDetailsForm((Frame) window , app, flag,Memno,FacilityName);
        } else {
            details = new MemberFacilityDetailsForm((Dialog) window, app, flag,Memno,FacilityName);
        }
 
        return details;
        
    
    }
 

     public boolean showDialog() {
        try {
            init();
            setVisible(true);
           
        } catch (BasicException e) {
            new MessageInf(e).show(getParent());
        }
        return true;
    }
   
     
     
     
       
   protected static Window getWindow(Component parent) {
        if (parent == null) {
            return new JFrame();
        } else if (parent instanceof Frame || parent instanceof Dialog) {
            return (Window) parent;
        } else {
            return getWindow(parent.getParent());
        }
    } 
    
   
   public void init() throws BasicException {
        initComponents();   
        
        facility_details_jTextArea.setText(fullstrFinal);
        facility_details_jTextArea.setEditable(false);
        Facility_Name.setText(FacilityName);
        facility_details_jTextArea.setVisible(true);
       
    }

    private void reset() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Facility_Name;
    private javax.swing.JTextArea facility_details_jTextArea;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
public String getFacilitydetails(AppView app) throws  BasicException{
         String fullstr="";
         List<Object> fdetailslist = new ArrayList<Object>();
         String FacilityId="";
         Object o=null;
         o =    new StaticSentence(app.getSession(), "select id from facility  where  active=1 and name=?",  SerializerWriteString.INSTANCE , SerializerReadString.INSTANCE).find(FacilityName);
         if(o!=null){
             FacilityId=o.toString();
             fdetailslist = (List<Object>) new StaticSentence(app.getSession(), " select  concat('FROM : ',ifnull(DATE(nbilldate),'') ,'\n','TO       : ', ifnull(DATE(lbilldate),'')) as facilitydetails from memfacilityusage f , customers c ,facility m where f.memno=c.id and f.facilitytype=m.id and c.searchkey=? and  f.active=1 and m.id = ?  and nbilldate is not null", new SerializerWriteBasic(new Datas[]{Datas.STRING ,Datas.STRING }),SerializerReadString.INSTANCE ).list(new Object[]{Memno, FacilityId }); 
         }
         
           for(int i = 0;i<fdetailslist.size();i++)
           {
              String x  = fdetailslist.get(i).toString();
              fullstr  = fullstr+"\n"+x+"\n";
           }
           
           return fullstr;

        
  
}



          private class ItemsListModel extends AbstractListModel {
          private java.util.List items;
          public ItemsListModel(java.util.List items) {
          this.items = items;
          }
          @Override
          public int getSize() {
            return items.size();
          }
          @Override
          public Object getElementAt(int i) {
            return items.get(i);
        }
     }     
}


          
