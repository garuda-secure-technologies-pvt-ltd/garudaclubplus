/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.openbravo.pos.FixedAssetRegistration;

import com.openbravo.basic.BasicException;
import com.openbravo.beans.JCalendarDialog;
import com.openbravo.data.gui.MessageInf;
import com.openbravo.data.loader.Datas;
import com.openbravo.data.loader.PreparedSentence;
import com.openbravo.data.loader.SerializerWriteBasic;
import com.openbravo.data.loader.Transaction;
import com.openbravo.data.user.DirtyManager;
import com.openbravo.format.Formats;
import com.openbravo.pos.forms.AppConfig;
import com.openbravo.pos.forms.AppView;
import java.awt.Component;
import java.awt.Dialog;
import java.awt.Frame;
import java.awt.Window;
import java.util.Calendar;
import java.util.Date;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.TableColumnModel;
import com.openbravo.pos.FixedAssetRegistration.WriteOffDetailsTableModel.WriteOffDetailsInfo;
import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.TableCellRenderer;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import javax.swing.JComponent;

/**
 *
 * @author dev3
 */
public class WriteOffDetailsDialog extends javax.swing.JDialog {

    private AppView app;
    private boolean flag;
    String link = null;
    private DirtyManager dirty = new DirtyManager();
    private WriteOffDetailsTableModel wo_table;

    public static String WID = null;
    String deactid;
    File documentfile;
    File file = null;
    String filename;
    File selectedFile;
    String doc_link;
   private int flagkey;
    /**
     * Creates new form WriteOffDetailsDialog
     */
    public WriteOffDetailsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public WriteOffDetailsDialog(java.awt.Dialog parent, AppView app, boolean flag) {
        super(parent, true);

        this.app = app;
        this.flag = flag;
    }

    public WriteOffDetailsDialog(java.awt.Frame parent, AppView app, boolean flag) {
        super(parent, true);

        this.app = app;
        this.flag = flag;
    }

    protected static Window getWindow(Component parent) {
        if (parent == null) {
            return new JFrame();
        } else if (parent instanceof Frame || parent instanceof Dialog) {
            return (Window) parent;
        } else {
            return getWindow(parent.getParent());
        }
    }

    public static WriteOffDetailsDialog getDialog(Component parent, AppView app, boolean flag) throws BasicException {

        Window window = getWindow(parent);

        WriteOffDetailsDialog bill;

        if (window instanceof Frame) {
            bill = new WriteOffDetailsDialog((Frame) window, app, flag);
        } else {
            bill = new WriteOffDetailsDialog((Dialog) window, app, flag);
        }

        return bill;

    }

    public boolean showDialog() {
        try {
            init();
            setVisible(true);

        } catch (BasicException e) {
            new MessageInf(e).show(getParent());
        }
        return true;
    }

    public void init() throws BasicException {
        initComponents();
        jPanel15.setVisible(true);
        wo_table = WriteOffDetailsTableModel.GetWriteOffDetailsTableModel(app);
        jTable1.setModel(wo_table.getTableModel());
        jTable1.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        wodoclink_txt.setEditable(false);
        dateofwo.setEditable(false);
    }

    public void loadProperties(AppConfig config) {

        wodoclink_txt.setText(config.getProperty("folder"));

        dirty.setDirty(false);
    }

    public void saveProperties(AppConfig config) {

        config.setProperty("FOLDER", wodoclink_txt.getText());

        dirty.setDirty(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel15 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel55 = new javax.swing.JLabel();
        dateofwo = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel56 = new javax.swing.JLabel();
        jScrollPane16 = new javax.swing.JScrollPane();
        wores_txt = new javax.swing.JTextArea();
        jLabel59 = new javax.swing.JLabel();
        wodoclink_txt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel60 = new javax.swing.JLabel();
        wovalue_txt = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        jScrollPane17 = new javax.swing.JScrollPane();
        wovocherdet_txt = new javax.swing.JTextArea();
        jLabel57 = new javax.swing.JLabel();
        woinitiate_txt = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        woaprby_txt = new javax.swing.JTextField();
        add_but = new javax.swing.JButton();
        reset_but = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable(){public Component prepareRenderer(TableCellRenderer renderer,
            int rowIndex, int vColIndex) {
            Component c = super.prepareRenderer(renderer, rowIndex, vColIndex);
            if (c instanceof JComponent) {
                JComponent jc = (JComponent)c;
                jc.setToolTipText(String.valueOf(getValueAt(rowIndex, vColIndex)));

                if (rowIndex % 2 == 0 && !isCellSelected(rowIndex, vColIndex)) {
                    jc.setBackground(Color.lightGray);
                }
                else {
                    jc.setBackground(Color.white);
                }
                if(isCellSelected(rowIndex, vColIndex))
                jc.setBackground(Color.cyan);
            }
            return c;
        }};
        Deactivate_but = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel55.setText("Date of WO");

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/date.png")));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel56.setText("Reason of WO");

        wores_txt.setColumns(20);
        wores_txt.setRows(5);
        jScrollPane16.setViewportView(wores_txt);

        jLabel59.setText("Link to WO Document");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/mime2.png")));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel60.setText("Scrap/Recovered Value");

        wovalue_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                wovalue_txtKeyTyped(evt);
            }
        });

        jLabel61.setText("Vocher Details");

        wovocherdet_txt.setColumns(20);
        wovocherdet_txt.setRows(5);
        jScrollPane17.setViewportView(wovocherdet_txt);

        jLabel57.setText("WO initiated By");

        jLabel58.setText("WO approved By");

        add_but.setText("Add");
        add_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_butActionPerformed(evt);
            }
        });

        reset_but.setText("Reset");
        reset_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_butActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel59)
                    .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane16, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                            .addComponent(dateofwo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(wovalue_txt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                            .addComponent(wodoclink_txt, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(woaprby_txt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                        .addComponent(woinitiate_txt, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(101, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(reset_but, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(add_but, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dateofwo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(wodoclink_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wovalue_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel57)
                    .addComponent(woinitiate_txt))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(woaprby_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_but)
                    .addComponent(reset_but))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(21, 21, 21))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Write Off", jPanel15);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jScrollPane2.setViewportView(jScrollPane1);

        Deactivate_but.setText("Deactivate");
        Deactivate_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Deactivate_butActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Deactivate_but, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 629, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Deactivate_but)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("View List", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public boolean hasChanged() {
        return dirty.isDirty();
    }

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        javax.swing.JTabbedPane tabpane = (javax.swing.JTabbedPane) evt.getSource();
        int tabno = tabpane.getSelectedIndex();

        if (tabno == 1) {
            try {
                wo_table = WriteOffDetailsTableModel.GetWriteOffDetailsTableModel(app);

                jTable1.setModel(wo_table.getTableModel());
                jTable1.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

                TableColumnModel cmodel = jTable1.getColumnModel();
                cmodel.getColumn(0).setPreferredWidth(30);
                cmodel.getColumn(1).setPreferredWidth(100);
                cmodel.getColumn(2).setPreferredWidth(100);
                cmodel.getColumn(3).setPreferredWidth(100);
                cmodel.getColumn(4).setPreferredWidth(100);
                cmodel.getColumn(5).setPreferredWidth(70);
                cmodel.getColumn(6).setPreferredWidth(120);

            } catch (BasicException ex) {
                ex.printStackTrace();
            }

        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void Deactivate_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Deactivate_butActionPerformed
        if (jTable1.getSelectedRow() != -1) {
            int bill = JOptionPane.showConfirmDialog(jTable1, " Do you want to deactivate ?? ", "Deactivation", JOptionPane.YES_NO_OPTION);
            if (bill == JOptionPane.YES_OPTION) {
                
                    int row = jTable1.getSelectedRow();
                    WriteOffDetailsInfo showdata = wo_table.getList().get(row);

                    deactid = showdata.getId();
                    deactWo();

                
            }
        }else{
        JOptionPane.showMessageDialog(this, "Please select row in the table ", null, JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_Deactivate_butActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Date d;
        try {
            d = (Date) Formats.TIMESTAMP.parseValue(dateofwo.getText());
        } catch (BasicException e) {
            d = null;
        }
        d = JCalendarDialog.showCalendarTimeHours(this, d);
        if (d != null) {

            dateofwo.setText(Formats.TIMESTAMP.formatValue(d));
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new java.io.File("."));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("PDF Documents", "pdf", "MS Office Documents", "docx", "xlsx", "pptx",
                "html", "wpd", "wp", "doc", "zip", "Library file");
        fileChooser.setFileFilter(filter);
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile();
            filename = selectedFile.getAbsolutePath();
            wodoclink_txt.setText(filename);
            file = new File(filename);

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void reset_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_butActionPerformed
        reset();
    }//GEN-LAST:event_reset_butActionPerformed
    @Override
    public String getTitle() {
        return "WriteOff";
    }
    private void add_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_butActionPerformed
        
        try {
            
            if (dateofwo.getText()!= null  && dateofwo.getText().trim().length() > 0 ) {
                if (wores_txt.getText() != null && wores_txt.getText().trim().length() > 0) {
                    if (woinitiate_txt.getText() != null && woinitiate_txt.getText().trim().length() > 0) {
                        if (woaprby_txt.getText() != null && woaprby_txt.getText().trim().length() > 0) {
                            if (wovalue_txt.getText() != null && wovalue_txt.getText().trim().length() > 0) {
                                if (wodoclink_txt.getText() != null) {
                                    if (wovocherdet_txt.getText() != null && wovocherdet_txt.getText().trim().length() > 0) {
                                        Transaction t = new Transaction(app.getSession()) {
                                            @Override
                                            protected Object transact() throws BasicException {

                                                Date photo = new Date();
                                                Double value=null;
                                                Date effectivedate = new Date();
                                                Calendar cal = Calendar.getInstance();
                                                cal.setTimeInMillis(photo.getTime());

                                                photo.setTime(cal.getTimeInMillis());
                                                photo = (Date) Formats.TIMESTAMP.parseValue(dateofwo.getText());
                                                link = wodoclink_txt.getText();
                                                FixedAsset2 fx = new FixedAsset2();
                                                WID = UUID.randomUUID().toString();
                                                 value = (Double) Formats.DOUBLE.parseValue(wovalue_txt.getText());
                                                //how to copy paste document files to particular folder
                                                String string = UUID.randomUUID().toString();
                                                String[] parts = string.split("-");
                                                String part1 = parts[0];
                                                String part2 = parts[1];
                                                String flnm = wodoclink_txt.getText();
                                                String name = "";
                                                String x = "";
                                                if (flnm.equals("")) {
                                                    name = "";
                                                } else {
                                                   // String arr[] = flnm.split("/");
                                                   // x = "wo" + part1 + arr[arr.length - 1];;
                                                     x="wo" + part1 +flnm.substring(flnm.lastIndexOf("."),flnm.length());
                                                    name = "./Asset Documents/" + x;
                                                }

                                                Object[] param = new Object[]{WID, FixedAsset2.fixedid, photo, wores_txt.getText().trim(), woinitiate_txt.getText().trim(), woaprby_txt.getText().trim(), name, value, wovocherdet_txt.getText().trim(), app.getAppUserView().getUser().getName(), new Date(), true};
                                                new PreparedSentence(app.getSession(), "insert into fa_write_off_details ( id,faid,date_of_wo,reason_of_wo,wo_initiated_by,wo_approved_by,wo_doc_links,scrap_or_rec_val,voucher_details,created_by,created_date,active) values (?,?,?,?,?,?,?,?,?,?,?,?)", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.STRING, Datas.TIMESTAMP, Datas.STRING, Datas.STRING, Datas.STRING, Datas.STRING, Datas.DOUBLE, Datas.STRING, Datas.STRING, Datas.TIMESTAMP, Datas.BOOLEAN})).exec(param);
                                               int update_writeoff = new PreparedSentence(app.getSession(), "update fa_master set wo=? where id=? ", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.STRING})).exec(new Object[]{WID, FixedAsset2.fixedid});
                                        
                                                flagkey=1;
                                                //continuation of copy paste doc
                                                if (wodoclink_txt.getText() != null) {
                                                    File srcDir = new File(wodoclink_txt.getText());
                                                    FileInputStream fii;
                                                    FileOutputStream fio;
                                                    try {

                                                        fii = new FileInputStream(srcDir);

                                                
                                                        fio = new FileOutputStream("./Asset Documents/" + x + "");
                                                        byte[] b = new byte[1024];
                                                        int i = 0;
                                                        try {
                                                            while ((fii.read(b)) > 0) {

                                                                fio.write(b);
                                                            }
                                                            fii.close();
                                                            fio.close();
                                                        } catch (Exception e) {
                                                            e.printStackTrace();

                                                            Logger.getLogger(WriteOffDetailsDialog.class.getName()).log(Level.SEVERE, null, e);

                                                        }
                                                    } catch (Exception e) {
                                                        e.printStackTrace();

                                                        Logger.getLogger(WriteOffDetailsDialog.class.getName()).log(Level.SEVERE, null, e);

                                                    }
                                                }

                                                return null;
                                            }
                                        };
                                        t.execute();
                                        if(flagkey==1){
                                        JOptionPane.showMessageDialog(this, "Write Off Detail inserted Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);
                                        reset();
                                        
                                        }
                                    } else {
                                        JOptionPane.showMessageDialog(this, "Please ensure that Vocher Details is not empty", null, JOptionPane.OK_OPTION);

                                    }

                                } else {
                                    JOptionPane.showMessageDialog(this, "Please ensure that Link is not empty", null, JOptionPane.OK_OPTION);

                                }
                            } else {
                                JOptionPane.showMessageDialog(this, "Please ensure that Value field is not empty", null, JOptionPane.OK_OPTION);

                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Please ensure that Approved by field is not empty", null, JOptionPane.OK_OPTION);

                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Please ensure that Initiated by field is not empty", null, JOptionPane.OK_OPTION);

                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Please ensure that Reason of WO field is not empty", null, JOptionPane.OK_OPTION);

                }
            } else {
                JOptionPane.showMessageDialog(this, "Please ensure that Date is not empty", null, JOptionPane.OK_OPTION);

            }
            
        } catch (NullPointerException e) {

            e.printStackTrace();
        } catch (NumberFormatException nfe) {
            nfe.printStackTrace();
            JOptionPane.showMessageDialog(this, "Please enter the correct price  ", null, JOptionPane.OK_OPTION);

        } catch (BasicException nfe) {
            nfe.printStackTrace();
            JOptionPane.showMessageDialog(this, "Please enter the correct price  ", null, JOptionPane.OK_OPTION);

        }
        catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Please enter the correct price  ", null, JOptionPane.OK_OPTION);

           // Logger.getLogger(WriteOffDetailsDialog.class.getName()).log(Level.SEVERE, null, e);
           // new MessageInf(e).show(new JFrame());

        }
    }//GEN-LAST:event_add_butActionPerformed

    private void wovalue_txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_wovalue_txtKeyTyped
       char value = evt.getKeyChar();
        if (!(Character.isDigit(value) || (value == KeyEvent.VK_BACK_SPACE) || value == KeyEvent.VK_DELETE || value == '.')) {

            evt.consume();
        }
    }//GEN-LAST:event_wovalue_txtKeyTyped
    private void deactWo() {
        try {

            new PreparedSentence(app.getSession(), "update fa_write_off_details  set  active=0  , deacby=? , deacdate=?  where id = ? ", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.TIMESTAMP, Datas.STRING})).exec(new Object[]{app.getAppUserView().getUser().getName(), new Date(), deactid});

            wo_table = WriteOffDetailsTableModel.GetWriteOffDetailsTableModel(app);
            jTable1.setModel(wo_table.getTableModel());

            reset();
            JOptionPane.showMessageDialog(this, "De-Activated Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);

        } catch (NullPointerException e) {

            e.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void reset() {
        dateofwo.setText(null);
        woaprby_txt.setText(null);
        wodoclink_txt.setText(null);
        woinitiate_txt.setText(null);
        wores_txt.setText(null);
        wovalue_txt.setText(null);
        wovocherdet_txt.setText(null);
        woaprby_txt.setText(null);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Deactivate_but;
    private javax.swing.JButton add_but;
    private javax.swing.JTextField dateofwo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton reset_but;
    private javax.swing.JTextField woaprby_txt;
    private javax.swing.JTextField wodoclink_txt;
    private javax.swing.JTextField woinitiate_txt;
    private javax.swing.JTextArea wores_txt;
    private javax.swing.JTextField wovalue_txt;
    private javax.swing.JTextArea wovocherdet_txt;
    // End of variables declaration//GEN-END:variables
}
