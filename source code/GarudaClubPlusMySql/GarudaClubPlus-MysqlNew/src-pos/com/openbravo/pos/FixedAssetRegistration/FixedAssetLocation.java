/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.openbravo.pos.FixedAssetRegistration;

import com.openbravo.basic.BasicException;
import com.openbravo.beans.JCalendarDialog;
import com.openbravo.data.gui.ComboBoxValModel;
import com.openbravo.data.loader.DataRead;
import com.openbravo.data.loader.Datas;
import com.openbravo.data.loader.PreparedSentence;
import com.openbravo.data.loader.SerializableRead;
import com.openbravo.data.loader.SerializerReadBasic;
import com.openbravo.data.loader.SerializerReadClass;
import com.openbravo.data.loader.SerializerReadString;
import com.openbravo.data.loader.SerializerWriteBasic;
import com.openbravo.data.loader.SerializerWriteString;
import com.openbravo.data.loader.StaticSentence;
import com.openbravo.data.loader.Transaction;
import com.openbravo.data.user.DirtyManager;
import com.openbravo.format.Formats;
import com.openbravo.pos.Accounts.AccountMasterExt;
import com.openbravo.pos.forms.AppConfig;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.BeanFactoryApp;
import com.openbravo.pos.forms.BeanFactoryException;
import com.openbravo.pos.forms.JPanelView;
import com.openbravo.pos.FixedAssetRegistration.MaintenanceTableModel.MaintenanceInfo;
import com.openbravo.pos.FixedAssetRegistration.FixedAssetTableModel.FixedAssetInfo;
import com.openbravo.pos.clubmang.DataLogicFacilities;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.Calendar;
import javax.swing.ButtonGroup;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.awt.event.KeyEvent;
import com.openbravo.pos.Accounts.AccountTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.TableColumnModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.TableCellRenderer;
import java.awt.Color;
import javax.swing.JComponent;
import java.awt.Component;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.text.DecimalFormat;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTextField;

/**
 *
 * @author dev3
 */
public class FixedAssetLocation extends javax.swing.JPanel implements JPanelView, BeanFactoryApp {

    
    private AppView m_App;
    private AppConfig config;
    private DirtyManager dirty = new DirtyManager();
    private static DataLogicFacilities dmang;
    private int flagkey;
    private String deac_id;
    private FALocationsTableModel fxd_table;
    private List<String> namelist = new ArrayList<String>();
    private List <LocationBean> buildingList=new ArrayList<LocationBean>();
     private    List <LocationBean> blockList=new ArrayList<LocationBean>();
      private    List <LocationBean> blockListofBuilding=new ArrayList<LocationBean>();
         private    List <LocationBean>floorListofBlock=new ArrayList<LocationBean>();
      private   List<LocationBean> floorList=new ArrayList<LocationBean>(); 
       private List <String> buildingListNames=new ArrayList<String>();
     private    List <String> blockListNames=new ArrayList<String>();
      private    List <String> blockListofBuildingNames=new ArrayList<String>();
         private    List <String>floorListofBlockNames=new ArrayList<String>();
      private   List<String> floorListNames=new ArrayList<String>(); 
        private ComboBoxValModel buildingModel;
          private ComboBoxValModel blockModel;
            private ComboBoxValModel floorModel;
       
    /**
     * Creates new form FixedAsset2
     */
    public FixedAssetLocation() {
        initComponents();
        savebutt.setVisible(true);
        

    }

    public boolean hasChanged() {
        return dirty.isDirty();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        msgdlg2 = new javax.swing.JLabel();
        msgdlg4 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jComboBox7 = new javax.swing.JComboBox();
        jComboBox8 = new javax.swing.JComboBox();
        jComboBox6 = new javax.swing.JComboBox();
        savebutt = new javax.swing.JButton();
        savecha_but = new javax.swing.JButton();
        reset_but = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable(){public Component prepareRenderer(TableCellRenderer renderer,
            int rowIndex, int vColIndex) {
            Component c = super.prepareRenderer(renderer, rowIndex, vColIndex);
            if (c instanceof JComponent) {
                JComponent jc = (JComponent)c;
                jc.setToolTipText(String.valueOf(getValueAt(rowIndex, vColIndex)));

                if (rowIndex % 2 == 0 && !isCellSelected(rowIndex, vColIndex)) {
                    jc.setBackground(Color.lightGray);
                }
                else {
                    jc.setBackground(Color.white);
                }
                if(isCellSelected(rowIndex, vColIndex))
                jc.setBackground(Color.cyan);
            }
            return c;
        }};
        edit_but = new javax.swing.JButton();
        removeButt = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jComboBoxBuilding = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jComboBox4 = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jButton5 = new javax.swing.JButton();
        jComboBox9 = new javax.swing.JComboBox();
        jComboBox10 = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.setHorizontalScrollBar(null);

        jLabel1.setText(" Select Building");

        jLabel2.setText("Name");

        jLabel3.setText("Select Block");

        jLabel4.setText("Select Floor");

        msgdlg2.setForeground(java.awt.Color.red);
        msgdlg2.setText("Capitalisation Date Should be (Greater than)  Installation Date,Commission date and  (Greater than or Equal to) Put To Use Date");

        msgdlg4.setForeground(java.awt.Color.red);
        msgdlg4.setText("Installation Date Should be Greater than or Equal to Purchase Date");

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel(new String[] {  }));
        jComboBox7.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox7ItemStateChanged(evt);
            }
        });
        jComboBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox7ActionPerformed(evt);
            }
        });

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel(new String[] {  }));
        jComboBox8.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox8ItemStateChanged(evt);
            }
        });
        jComboBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox8ActionPerformed(evt);
            }
        });

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] {  }));
        jComboBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(msgdlg2, javax.swing.GroupLayout.PREFERRED_SIZE, 924, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(msgdlg4, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(814, 814, 814)))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(153, 153, 153)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nameText)
                                    .addComponent(jComboBox7, 0, 257, Short.MAX_VALUE)
                                    .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel2))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(773, 773, 773)
                .addComponent(msgdlg2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(msgdlg4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(446, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(720, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel2);

        savebutt.setText("Save");
        savebutt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savebuttActionPerformed(evt);
            }
        });

        savecha_but.setText("Save Changes");
        savecha_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savecha_butActionPerformed(evt);
            }
        });

        reset_but.setText("Reset");
        reset_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_butActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 695, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(reset_but, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(221, 221, 221)
                        .addComponent(savebutt, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(savecha_but)))
                .addContainerGap(201, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reset_but)
                    .addComponent(savebutt)
                    .addComponent(savecha_but))
                .addContainerGap(115, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Create New Location", jPanel1);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(110, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        edit_but.setText("Edit");
        edit_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_butActionPerformed(evt);
            }
        });

        removeButt.setText("Remove");
        removeButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(462, Short.MAX_VALUE)
                .addComponent(edit_but, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(removeButt)
                .addGap(259, 259, 259))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(16, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(425, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit_but)
                    .addComponent(removeButt))
                .addGap(46, 46, 46))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 114, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("View List", jPanel5);

        jLabel5.setText("Building Name:");

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBoxBuilding.setModel(new javax.swing.DefaultComboBoxModel(new String[] {  }));

        jLabel6.setText("Existing Building  Names");

        jButton4.setText("Remove");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(42, 42, 42)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxBuilding, 0, 219, Short.MAX_VALUE)
                    .addComponent(jTextField1))
                .addGap(128, 128, 128)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton4))
                .addContainerGap(252, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel5)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxBuilding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jButton4))
                .addContainerGap(330, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Create New Building", jPanel4);

        jLabel9.setText("Block Name :");

        jButton3.setText("Add");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] {  }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jLabel10.setText("Existing Block Names:");

        jButton6.setText("Remove");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] {  }));
        jComboBox4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox4ItemStateChanged(evt);
            }
        });
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jLabel11.setText("Select Building");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(92, 92, 92)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(jButton6))
                .addContainerGap(276, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(31, 31, 31)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jButton3))
                .addGap(26, 26, 26)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jButton6))
                .addContainerGap(335, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Create New Block", jPanel8);

        jLabel7.setText("Floor Name:");

        jButton2.setText("Add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel8.setText("Existing Floor Names :");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] {  }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton5.setText("Remove");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel(new String[] {  }));
        jComboBox9.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox9ItemStateChanged(evt);
            }
        });

        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel(new String[] {  }));
        jComboBox10.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox10ItemStateChanged(evt);
            }
        });
        jComboBox10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox10ActionPerformed(evt);
            }
        });

        jLabel12.setText("Select Block");

        jLabel13.setText("Select Building");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox10, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox9, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jButton5))
                .addGap(297, 297, 297))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(26, 26, 26)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBox9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(29, 29, 29)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jButton2))
                .addGap(23, 23, 23)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addContainerGap(304, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Create New Floor", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 911, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void edit_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_butActionPerformed
             
        
        if (jTable1.getSelectedRow() != -1) {
            int bill = JOptionPane.showConfirmDialog(jPanel1, " Do you want to Edit Location ?? ", "Editing Menu", JOptionPane.YES_NO_OPTION);
            if (bill == JOptionPane.YES_OPTION) {
                savecha_but.setVisible(true);
                savebutt.setVisible(false);
                edit_but.setVisible(false);
                if (jTable1.getSelectedRow() < fxd_table.getSize()) {
                    int row = jTable1.getSelectedRow();
                    int rowcount=jTable1.getRowCount();
                    FALocationsTableModel.FALocationsInfo showdata = fxd_table.getList().get(row);
                    jPanel1.setVisible(true);
                    savebutt.setVisible(false);
                    savecha_but.setVisible(true);
                    nameText.setText(showdata.getName());
                   
                   
                    for(int j=0;j<buildingList.size();j++){
                    if(buildingList.get(j).getId().equals( showdata.getBuilding())){
                   jComboBox7.setSelectedIndex(j);
                    }
                        }
                    for(int k=0;k<blockList.size();k++){
                    if(blockList.get(k).getId().equals( showdata.getBlock())){
                   jComboBox8.setSelectedIndex(k);
                        }
                    }
                     for(int i=0;i<floorList.size();i++){
                    if(floorList.get(i).getId().equals( showdata.getFloor())){
                   jComboBox6.setSelectedIndex(i);
                        }
                     }
                    }
                }
            }
             
    }//GEN-LAST:event_edit_butActionPerformed

    private void savecha_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savecha_butActionPerformed
 if (jTable1.getSelectedRow() != -1) {
    
     
        try{
           if (nameText.getText() != null && nameText.getText().trim().length() > 0) {
        Transaction t = new Transaction(m_App.getSession()) {
                                @Override
                                protected Object transact() throws BasicException {
                                     int row = jTable1.getSelectedRow();
                                    FALocationsTableModel.FALocationsInfo showdata = fxd_table.getList().get(row);
                                    String id=showdata.getId();
                                    String name= nameText.getText();
                                        String floorId=floorList.get(jComboBox6.getSelectedIndex()).getId();
                                     String buildingId=buildingList.get(jComboBox7.getSelectedIndex()).getId();
                                     String blockId=blockList.get(jComboBox8.getSelectedIndex()).getId();
                                   Object[] param = new Object[]{name,floorId,buildingId,blockId,id};
                                        new PreparedSentence(m_App.getSession(), "update fa_locations set NAME=?,FLOOR=?,BUILDING=?,BLOCK=? where id=?", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.STRING, Datas.STRING, Datas.STRING, Datas.STRING})).exec(param);
                                    flagkey=1;
                                    return null;
                                }
                            };
                            t.execute();
                            if(flagkey==1){
                            JOptionPane.showMessageDialog(this, "Location Editted Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);
                             loaddata();
                            
                jTabbedPane1.setSelectedIndex(1);
                 jPanel7.setVisible(true);
                            }
        }else {
                JOptionPane.showMessageDialog(this, "Please ensure that Name is not empty", null, JOptionPane.OK_OPTION);
            }

        } catch (Exception e) {

            e.printStackTrace();
        }
    }    
    }//GEN-LAST:event_savecha_butActionPerformed
    
    private void savebuttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savebuttActionPerformed
      
       try{
           if (nameText.getText() != null && nameText.getText().trim().length() > 0) {
               if(jComboBox7.getSelectedIndex()!=-1){
                    if(jComboBox8.getSelectedIndex()!=-1){
                         if(jComboBox6.getSelectedIndex()!=-1){
        Transaction t = new Transaction(m_App.getSession()) {
                                @Override
                                protected Object transact() throws BasicException {
                                    String id = UUID.randomUUID().toString(); 
                                    String name= nameText.getText();
                                     String floorId=floorList.get(jComboBox6.getSelectedIndex()).getId();
                                     String buildingId=buildingList.get(jComboBox7.getSelectedIndex()).getId();
                                     String blockId=blockList.get(jComboBox8.getSelectedIndex()).getId();

                                    Object[] param = new Object[]{id,"lo",name,floorId,buildingId,blockId};
                                        new PreparedSentence(m_App.getSession(), "insert into fa_locations(ID,TYPE,NAME,FLOOR,BUILDING,BLOCK) values (?,?,?,?,?,?)", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.STRING, Datas.STRING, Datas.STRING, Datas.STRING,Datas.STRING})).exec(param);
                                    flagkey=1;
                                    return null;
                                }
                            };
                            t.execute();
                            if(flagkey==1){
                            JOptionPane.showMessageDialog(this, "Location Added Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);
                             loaddata();
                            }
        }else {
                JOptionPane.showMessageDialog(this, "Please ensure that Floor is selected", null, JOptionPane.OK_OPTION);
            }
                    }else {
                JOptionPane.showMessageDialog(this, "Please ensure that Block is selected", null, JOptionPane.OK_OPTION);
            }
               }else {
                JOptionPane.showMessageDialog(this, "Please ensure that Building is selected", null, JOptionPane.OK_OPTION);
            }
           }else {
                JOptionPane.showMessageDialog(this, "Please ensure that Name is not empty", null, JOptionPane.OK_OPTION);
            }

        } catch (Exception e) {

            e.printStackTrace();
        }
        
    }//GEN-LAST:event_savebuttActionPerformed

    private void reset_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_butActionPerformed
        reset();
    }//GEN-LAST:event_reset_butActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
             

        
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void removeButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtActionPerformed
        // TODO add your handling code here:
       if (jTable1.getSelectedRow() != -1) {
        List<String> tempList=new ArrayList<String>();
        try{
            int row1 = jTable1.getSelectedRow();
        
        FALocationsTableModel.FALocationsInfo showdata1 = fxd_table.getList().get(row1);
                                    
          tempList=new ArrayList<String>(new StaticSentence(m_App.getSession(), "select location from  fa_physicalverification ",null,SerializerReadString.INSTANCE).list());

                       
       if(!tempList.contains(showdata1.getId())){
        
                                  
        try{
                  Transaction t = new Transaction(m_App.getSession()) {
                                @Override
                                protected Object transact() throws BasicException {
                                    int row = jTable1.getSelectedRow();
                                
                                     FALocationsTableModel.FALocationsInfo showdata = fxd_table.getList().get(row);
                                    String id=showdata.getId();
                                    
                                  
     
                                   
                                    Object[] param = new Object[]{id};
                                    new PreparedSentence(m_App.getSession(), "delete from fa_locations where id=?", new SerializerWriteBasic(new Datas[]{Datas.STRING})).exec(param);
                                  

                                    flagkey=1;
                                    return null;
                                     
                                }
                            };
                            t.execute();
                            if(flagkey==1){
                                flagkey=0;
                            JOptionPane.showMessageDialog(this, "Location Deleted Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);
                             loaddata();
                                }
                  
                  
        } catch (Exception e) {

            e.printStackTrace();
        }
          
        
       
        } else{  JOptionPane.showMessageDialog(this, "Can not delete ....! This Location is assigned to Asset..!", "Success", JOptionPane.INFORMATION_MESSAGE);
    
                                   } 
          }catch(Exception e){}         }
    }//GEN-LAST:event_removeButtActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
      String buildingId= UUID.randomUUID().toString();
           String buildingName=jTextField1.getText();
        try{
         int row_inserted=  new PreparedSentence(m_App.getSession(), "insert into fa_locations(ID,TYPE,NAME) values (?,?,?)", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.STRING,Datas.STRING})).exec( new Object[]{buildingId,"bl",buildingName});
               
               if(row_inserted >0)
               {  
                   JOptionPane.showMessageDialog(this, "Added Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);    
                    locationTables();
                    jComboBoxBuilding.setModel( new ComboBoxValModel( buildingListNames));
                    jComboBox7.setModel( new ComboBoxValModel( buildingListNames));
                    jTextField1.setText(null);
               }
        }catch(Exception ex){
                ex.printStackTrace();
                }
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         String blockId= UUID.randomUUID().toString();
           String blockName=jTextField3.getText();
         if(jComboBox4.getSelectedIndex()!=-1){
      String buildingId=  buildingList.get(jComboBox4.getSelectedIndex()).getId();
       
        try{
           
            int row_insertted=   new PreparedSentence(m_App.getSession(), "insert into fa_locations(ID,TYPE,NAME,BUILDING) values (?,?,?,?)", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.STRING,Datas.STRING,Datas.STRING})).exec( new Object[]{blockId,"bk",blockName, buildingId});
               if(row_insertted >0)
               {
                   JOptionPane.showMessageDialog(this, "Added Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);
                
               locationTables();
                    jComboBox3.setModel( new ComboBoxValModel( blockListNames));
                    jComboBox8.setModel( new ComboBoxValModel( blockListNames));
                   jTextField3.setText(null);
                   jComboBox4.setSelectedIndex(-1);
               }
        }catch(Exception ex){
                ex.printStackTrace();
                }
    }  else {
                JOptionPane.showMessageDialog(this, "Please ensure that Building is selected", null, JOptionPane.OK_OPTION);
            }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
          String floorId= UUID.randomUUID().toString();
           String floorName=jTextField2.getText();
          String buildingId=buildingList.get( jComboBox10.getSelectedIndex()).getId();
         String blockId=blockListofBuilding.get(jComboBox9.getSelectedIndex()).getId();
        
        try{
           
                int row_inserted= new PreparedSentence(m_App.getSession(), "insert into fa_locations(ID,TYPE,NAME,BUILDING,BLOCK) values (?,?,?,?,?)", new SerializerWriteBasic(new Datas[]{Datas.STRING, Datas.STRING,Datas.STRING, Datas.STRING,Datas.STRING})).exec( new Object[]{floorId,"fl",floorName,buildingId,blockId});
               if(row_inserted>0)
               {
                   JOptionPane.showMessageDialog(this, "Added Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);   
                   locationTables();
                    jComboBox2.setModel( new ComboBoxValModel( floorListNames));
                    jComboBox6.setModel( new ComboBoxValModel( floorListNames));
                    jTextField2.setText(null);
                    jComboBox10.setSelectedIndex(-1);
                    jComboBox9.setSelectedIndex(-1);
               }
                   }catch(Exception ex){
                ex.printStackTrace();
                }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int count=0;
         try{
             for(int x=0;x<fxd_table.getSize();x++){
           if(  fxd_table.getList().get(x).getBuilding().equals(buildingList.get(jComboBoxBuilding.getSelectedIndex()).getId()))
           {count++;
            break;
           }
             }
             if(count==0){
              blockList=new ArrayList<LocationBean>(new StaticSentence(m_App.getSession(), "select name,id from  fa_locations where type='bk' and building=? and active=1 order by name",SerializerWriteString.INSTANCE,new SerializerReadClass(LocationBean.class)).list(buildingList.get(jComboBoxBuilding.getSelectedIndex()).getId()));
       if(blockList.size()>0){
        JOptionPane.showMessageDialog(this, "Please first remove blocks under this Building has..!", "Success", JOptionPane.INFORMATION_MESSAGE);    
       }else{
              int row1      =  new PreparedSentence(m_App.getSession(), "delete from  fa_locations where id=?  "
                                                                      , new SerializerWriteBasic(new Datas[]{ Datas.STRING  })).exec
                                                                       (new Object[]{buildingList.get(jComboBoxBuilding.getSelectedIndex()).getId()}); 
             
       
       if(row1 >0)
               {  
                   JOptionPane.showMessageDialog(this, "Removed Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);    
                    locationTables();
                    jComboBoxBuilding.setModel( new ComboBoxValModel( buildingListNames));
                    jComboBox7.setModel( new ComboBoxValModel( buildingListNames));
                    jComboBox7.setSelectedIndex(-1);
               }
       }
             }else{
                 JOptionPane.showMessageDialog(this, "This Building is part of location. First remove the location ..!", "Success", JOptionPane.INFORMATION_MESSAGE);    
             }
        }catch(Exception ex){
                ex.printStackTrace();
                }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int count=0;
        if(  jComboBox4.getSelectedIndex()!=-1){
        try{
             for(int x=0;x<fxd_table.getSize();x++){
           if(  fxd_table.getList().get(x).getBlock().equals(blockListofBuilding.get(jComboBox3.getSelectedIndex()).getId()))
           {
               count++;
            break;
           }
             }
             if(count==0){
                  floorList=new ArrayList<LocationBean>(new StaticSentence(m_App.getSession(), "select name,id from  fa_locations where type='fl' and block=? and active=1 order by name",SerializerWriteString.INSTANCE,new SerializerReadClass(LocationBean.class)).list(blockList.get(jComboBox3.getSelectedIndex()).getId()));
       if(floorList.size()>0){
        JOptionPane.showMessageDialog(this, "Please first remove floors under this Building ..!", "Success", JOptionPane.INFORMATION_MESSAGE);    
       }else{
        int row1      =  new PreparedSentence(m_App.getSession(), "delete from  fa_locations where id=?  "
                                                                      , new SerializerWriteBasic(new Datas[]{ Datas.STRING  })).exec
                                                                       (new Object[]{blockList.get(jComboBox3.getSelectedIndex()).getId()}); 
             
               if(row1 >0)
               {  
                   JOptionPane.showMessageDialog(this, "Removed Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);    
                    locationTables();
                    jComboBox8.setModel( new ComboBoxValModel( blockListNames));
                    jComboBox3.setModel( new ComboBoxValModel( blockListNames));
                    jTextField3.setText(null);
                   jComboBox4.setSelectedIndex(-1);
                   jComboBox3.setSelectedIndex(-1);
               }}
        }else{
                 JOptionPane.showMessageDialog(this, "This Block is part of location. First remove the location ..!", "Success", JOptionPane.INFORMATION_MESSAGE);    
             }
        }catch(Exception ex){
                ex.printStackTrace();
                }
        }else{
        JOptionPane.showMessageDialog(this, "Select Building first.", "Success", JOptionPane.INFORMATION_MESSAGE); 
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
      
        int count=0;
            if(  jComboBox10.getSelectedIndex()!=-1){
            if(  jComboBox9.getSelectedIndex()!=-1){
        try{
            for(int x=0;x<fxd_table.getSize();x++){
              
           if(  fxd_table.getList().get(x).getFloor().equals(floorListofBlock.get(jComboBox2.getSelectedIndex()).getId()))
           {
               count++;
            break;
           }
             }
             if(count==0){
        int row1      =  new PreparedSentence(m_App.getSession(), "delete from  fa_locations where id=?  "
                                                                      , new SerializerWriteBasic(new Datas[]{ Datas.STRING  })).exec
                                                                       (new Object[]{floorList.get(jComboBox2.getSelectedIndex()).getId()}); 
             
               if(row1 >0)
               {  
                   JOptionPane.showMessageDialog(this, "Removed Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);    
                    locationTables();
                    jComboBox2.setModel( new ComboBoxValModel( floorListNames));
                    jComboBox6.setModel( new ComboBoxValModel( floorListNames));
                         jTextField2.setText(null);
                    jComboBox10.setSelectedIndex(-1);
                    jComboBox9.setSelectedIndex(-1);
               }
                }else{
                 JOptionPane.showMessageDialog(this, "This floor is part of location. First remove the location ..!", "Success", JOptionPane.INFORMATION_MESSAGE);    
             }
        }catch(Exception ex){
                ex.printStackTrace();
                }
        }else{
        JOptionPane.showMessageDialog(this, "Select Block first.", "Success", JOptionPane.INFORMATION_MESSAGE); 
        }
            }else{
        JOptionPane.showMessageDialog(this, "Select Building first.", "Success", JOptionPane.INFORMATION_MESSAGE); 
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jComboBox10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox10ActionPerformed

    private void jComboBox10ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox10ItemStateChanged
        // TODO add your handling code here:
        try{
        String buildingId=buildingList.get(jComboBox10.getSelectedIndex()).getId();
           blockListofBuilding=new PreparedSentence(m_App.getSession(),  "select name,id from  fa_locations where type='bk' and active=1 and building=?  order by name",SerializerWriteString.INSTANCE,new SerializerReadClass(LocationBean.class)).list(buildingId);
         
           blockListofBuildingNames= new PreparedSentence(m_App.getSession(), "select name from  fa_locations where type='bk' and active=1 and building=? order by name",SerializerWriteString.INSTANCE,SerializerReadString.INSTANCE).list(buildingId);
            jComboBox9.setModel(new ComboBoxValModel(  blockListofBuildingNames));
        }catch(Exception ex){
        ex.printStackTrace();
        }
    }//GEN-LAST:event_jComboBox10ItemStateChanged

    private void jComboBox7ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox7ItemStateChanged
        // TODO add your handling code here:
        if(jComboBox7.getSelectedIndex()!=-1){
        try{
        String buildingId=buildingList.get(jComboBox7.getSelectedIndex()).getId();
           blockListofBuilding=new PreparedSentence(m_App.getSession(),  "select name,id from  fa_locations where type='bk' and active=1 and building=? and active=1 order by name",SerializerWriteString.INSTANCE,new SerializerReadClass(LocationBean.class)).list(buildingId);
           blockListofBuildingNames= new PreparedSentence(m_App.getSession(), "select name from  fa_locations where type='bk' and active=1 and building=? and active=1 order by name",SerializerWriteString.INSTANCE,SerializerReadString.INSTANCE).list(buildingId);
           
         
           jComboBox8.setModel(new ComboBoxValModel(  blockListofBuildingNames));
        }catch(Exception ex){
        ex.printStackTrace();
        }
        }
    }//GEN-LAST:event_jComboBox7ItemStateChanged

    private void jComboBox8ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox8ItemStateChanged
        // TODO add your handling code here:
      if(jComboBox7.getSelectedIndex()!=-1){
             if(jComboBox8.getSelectedIndex()!=-1){
        try{
          String blockId=blockList.get(jComboBox8.getSelectedIndex()).getId();
        
           floorListofBlock=new PreparedSentence(m_App.getSession(),  "select name,id from  fa_locations where type='fl' and active=1  and block=? and active=1 order by name",SerializerWriteString.INSTANCE,new SerializerReadClass(LocationBean.class)).list(blockId);
           floorListofBlockNames=new PreparedSentence(m_App.getSession(),  "select name from  fa_locations where type='fl' and active=1 and block=? and active=1 order by name",SerializerWriteString.INSTANCE,SerializerReadString.INSTANCE).list(blockId);
           
           jComboBox6.setModel(new ComboBoxValModel(  floorListofBlockNames));
        }catch(Exception ex){
        ex.printStackTrace();
        }
      }
      }
    }//GEN-LAST:event_jComboBox8ItemStateChanged

    private void jComboBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox8ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox6ActionPerformed

    private void jComboBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox7ActionPerformed

    private void jComboBox4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox4ItemStateChanged
        // TODO add your handling code here:
        if(jComboBox4.getSelectedIndex()!=-1){
           try{
        String buildingId=buildingList.get(jComboBox4.getSelectedIndex()).getId();
           blockListofBuilding=new PreparedSentence(m_App.getSession(),  "select name,id from  fa_locations where type='bk' and active=1 and building=? order by name",SerializerWriteString.INSTANCE,new SerializerReadClass(LocationBean.class)).list(buildingId);
           blockListofBuildingNames= new PreparedSentence(m_App.getSession(), "select name from  fa_locations where type='bk' and active=1 and building=? order by name",SerializerWriteString.INSTANCE,SerializerReadString.INSTANCE).list(buildingId);
           
         
           jComboBox3.setModel(new ComboBoxValModel(  blockListofBuildingNames));
        }catch(Exception ex){
        ex.printStackTrace();
        }
        }
    }//GEN-LAST:event_jComboBox4ItemStateChanged

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jComboBox9ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox9ItemStateChanged
        // TODO add your handling code here:
           if(jComboBox10.getSelectedIndex()!=-1){
             if(jComboBox9.getSelectedIndex()!=-1){
        try{
          String blockId=blockListofBuilding.get(jComboBox9.getSelectedIndex()).getId();
        
           floorListofBlock=new PreparedSentence(m_App.getSession(),  "select name,id from  fa_locations where type='fl' and active=1  and block=?  order by name",SerializerWriteString.INSTANCE,new SerializerReadClass(LocationBean.class)).list(blockId);
           floorListofBlockNames=new PreparedSentence(m_App.getSession(),  "select name from  fa_locations where type='fl' and active=1 and block=?  order by name",SerializerWriteString.INSTANCE,SerializerReadString.INSTANCE).list(blockId);
           
           jComboBox2.setModel(new ComboBoxValModel(  floorListofBlockNames));
        }catch(Exception ex){
        ex.printStackTrace();
        }
      }
      }
    }//GEN-LAST:event_jComboBox9ItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton edit_but;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox jComboBox10;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JComboBox jComboBox7;
    private javax.swing.JComboBox jComboBox8;
    private javax.swing.JComboBox jComboBox9;
    private javax.swing.JComboBox jComboBoxBuilding;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JLabel msgdlg2;
    private javax.swing.JLabel msgdlg4;
    private javax.swing.JTextField nameText;
    private javax.swing.JButton removeButt;
    private javax.swing.JButton reset_but;
    private javax.swing.JButton savebutt;
    private javax.swing.JButton savecha_but;
    // End of variables declaration//GEN-END:variables

   

    @Override
    public String getTitle() {
        return "Fixed Asset Location";
    }

    @Override
    public void activate() throws BasicException {
        
        loaddata();
        
        

    }

    @Override
    public boolean deactivate() {
        return true;
    }

    @Override
    public JComponent getComponent() {
        return this;
    }

    @Override
    public void init(AppView app) throws BeanFactoryException {
        m_App = app;
        dmang = (DataLogicFacilities) m_App.getBean("com.openbravo.pos.clubmang.DataLogicFacilitiesCreate");

    }

    public void init() throws BasicException {
        initComponents();

    }

    @Override
    public Object getBean() {
        return this;
    }

    public void reset() {
         nameText.setText(null);
          jComboBox6.setSelectedItem(-1);
           jComboBox7.setSelectedItem(-1);
            jComboBox8.setSelectedItem(-1);
         savebutt.setVisible(true);
         savecha_but.setVisible(false);
        
    }

    public void loadProperties(AppConfig config) {

      //  linktxt.setText(config.getProperty("folder"));

        dirty.setDirty(false);
    }

    public void saveProperties(AppConfig config) {

        //config.setProperty("FOLDER", linktxt.getText());

        dirty.setDirty(false);
    }

    public void loaddata() throws BasicException {
       reset();
        flagkey=0;
        fxd_table = FALocationsTableModel.GetFALocationsTableModel(m_App);
        jTable1.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jTable1.setModel(fxd_table.getTableModel());
        
        
        savebutt.setVisible(true);
        savecha_but.setVisible(false);
        edit_but.setVisible(true);
       locationTables();
       buildingModel= new ComboBoxValModel( buildingListNames);
        blockModel=new ComboBoxValModel( blockListNames);
       floorModel= new ComboBoxValModel(floorListNames);
       jComboBox7.setModel( buildingModel);
         jComboBox4.setModel(  buildingModel);
           jComboBox10.setModel( buildingModel);
         jComboBoxBuilding.setModel(  buildingModel);
          ComboBoxValModel blankModel= new ComboBoxValModel( new ArrayList<LocationBean>());
         jComboBox3.setModel(blankModel);
         jComboBox2.setModel( blankModel);
         jComboBox8.setModel(blankModel);
         jComboBox6.setModel(blankModel);
         jComboBox9.setModel(blankModel);
         
    }

   
  public void locationTables(){
   try{
           
               
               buildingList=new ArrayList<LocationBean>(new StaticSentence(m_App.getSession(), "select name,id from  fa_locations where type='bl' and active=1 order by name",null,new SerializerReadClass(LocationBean.class)).list());
               blockList=new ArrayList<LocationBean>(new StaticSentence(m_App.getSession(),  "select name,id from  fa_locations where type='bk' and active=1 order by name",null,new SerializerReadClass(LocationBean.class)).list());
              floorList=new ArrayList<LocationBean>(new StaticSentence(m_App.getSession(), "select name,id from  fa_locations where type='fl' and active=1 order by name",null,new SerializerReadClass(LocationBean.class)).list());
               buildingListNames=new ArrayList<String>(new StaticSentence(m_App.getSession(), "select name from  fa_locations where type='bl' and active=1 order by name",null,SerializerReadString.INSTANCE).list());
               blockListNames=new ArrayList<String>(new StaticSentence(m_App.getSession(),  "select name from  fa_locations where type='bk' and active=1 order by name",null,SerializerReadString.INSTANCE).list());
              floorListNames=new ArrayList<String>(new StaticSentence(m_App.getSession(), "select name from  fa_locations where type='fl' and active=1 order by name",null,SerializerReadString.INSTANCE).list());
        }catch(Exception ex){
                ex.printStackTrace();
                }
  }
 public static class LocationBean implements SerializableRead { 
     private String id;
     private String  name;
 @Override
      public void readValues(DataRead dr) throws BasicException {
       id = dr.getString(2);
        name = dr.getString(1);
      
      }
        public String getId() {
            return id;
        }

        public void setId(String id) {
            this.id = id;
        }

        public String getName() {
            return name;
        }

        public void setName(String name) {
            this.name = name;
        }
        
 }  
}
