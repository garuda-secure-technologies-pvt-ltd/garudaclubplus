<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<!-- By default, only the Clean and Build commands use this build script. -->
<!-- Commands such as Run, Debug, and Test only use this build script if -->
<!-- the Compile on Save feature is turned off for the project. -->
<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
<!-- in the project's Project Properties dialog box.-->


<project name="BCI" default="dist" basedir=".">
    <!-- properties -->
    <!-- program name -->
    <property name="name" value="garudafingerprint"/>

    <!-- project version -->
    <property name="version" value="1.10"/>

    <!-- javac properties -->
    <property name="javac.deprecation" value="off"/>
    <property name="javac.optimize" value="on"/>
    <property name="javac.debug" value="off"/>
    <property name="javac.minVMVersion" value="1.5"/>

    <property file="build.properties" />

    <property name="src" value="${basedir}/src"/>

    <!-- where the distribution files go -->
    <property name="dest.dist" value="${basedir}/build/dist"/>

    <!-- the jar directory -->
    <property name="dest.jar" value="${basedir}/build/jar"/>

    <!-- where the class files go -->
    <property name="dest.classes" value="${basedir}/build/classes"/>
		
    <!-- init -->
    <target name="init">
        <delete dir="${dest.classes}" />
        <delete dir="${dest.dist}" />
        <delete dir="${dest.jar}" />
    </target>



<target name="compile" depends="init">
        <mkdir dir="${dest.classes}" />
        <javac srcdir="${src}"
               destdir="${dest.classes}"
               debug="${javac.debug}"
               deprecation="${javac.deprecation}"
               optimize="${javac.optimize}"
               target="${javac.minVMVersion}">
        </javac>
        <copy todir="${dest.classes}">
            <fileset dir="${src}">
                <exclude name="**/*.java"/>
                <exclude name="**/*.form"/>
                <exclude name="**/.nbattrs"/>
                <exclude name="**/Thumbs.db"/>
                <exclude name="**/filesystem.attributes"/>
            </fileset>
        </copy>                
    </target>

<!-- jar -->

<target name="jar" depends="compile" description="Generate the .jar file.">
        <copy todir="${dest.classes}/BCI">
            <fileset dir="${dest.classes}"/>
        </copy>  
        <mkdir dir="${dest.dist}" />
        <jar jarfile="${dest.dist}/BCI.jar"
             compress="true"
             basedir="${dest.classes}/BCI">
        </jar>
    </target>

<!-- Distribution file -->

<target name="dist" depends="dist.bin,dist.src" description="Generate the release files">
    </target>

   
    <target name="dist.bin" depends="init,jar" description="Generate the bin zip file.">
        <mkdir dir="${basedir}/build/zip" />

        <copy file="${basedir}/start.bat" todir="${basedir}/build/zip"/> 
        <copy file="${basedir}/start.sh" todir="${basedir}/build/zip"/>
        <copy file="${dest.dist}/BCI.jar" todir="${basedir}/build/zip"/>
        
      <!--  <copy todir="${basedir}/build/zip/licensing">
            <fileset dir="${basedir}/licensing"/>
        </copy> -->       
		
        <copy todir="${basedir}/build/zip/lib">
            <fileset dir="${basedir}/lib"/>
        </copy>

      <!--  <copy todir="${basedir}/build/zip/locales">
            <fileset dir="${basedir}/locales"/>
        </copy> -->
        
      <!--  <copy todir="${basedir}/build/zip/reports">
            <fileset dir="${basedir}/reports"/>
        </copy>  
        <copy todir="${basedir}/build/zip/dbmanager">
            <fileset dir="${basedir}/dbmanager"/>
        </copy>  -->
        
	<mkdir dir="${dest.dist}" />	
        <zip zipfile="${dest.dist}/${name}_${version}_bin.zip" basedir="${basedir}/build/zip" />
        <delete dir="${basedir}/build/zip" />
    </target>            
    

    <target name="dist.src" depends="init" description="Generate the src zip file.">
        <mkdir dir="${basedir}/build/zip" />

        <copy todir="${basedir}/build/zip/src">
            <fileset dir="${src}">
                <exclude name="**/.nbattrs"/>
                <exclude name="**/Thumbs.db"/>
                <exclude name="**/filesystem.attributes"/>
            </fileset>
        </copy>
        
       <!-- <copy todir="${basedir}/build/zip/locales">
            <fileset dir="${basedir}/locales"/>
        </copy>
        <copy todir="${basedir}/build/zip/reports">
            <fileset dir="${basedir}/reports"/>
        </copy>
        <copy todir="${basedir}/build/zip/dbmanager">
            <fileset dir="${basedir}/dbmanager"/>
        </copy>  -->

        <copy todir="${basedir}/build/zip/lib">
            <fileset dir="${basedir}/lib"/>
        </copy>
        
     <!--   <copy todir="${basedir}/build/zip/licensing">
            <fileset dir="${basedir}/licensing"/>
        </copy>   -->     
		       
        <copy file="${basedir}/start.bat" todir="${basedir}/build/zip"/>
        <copy file="${basedir}/start.sh" todir="${basedir}/build/zip"/>
        <copy file="${basedir}/build.xml" todir="${basedir}/build/zip" />
        <copy file="${basedir}/.project" todir="${basedir}/build/zip" />
        <copy file="${basedir}/.classpath" todir="${basedir}/build/zip" />
       
       
        
        <mkdir dir="${dest.dist}" />
        <zip zipfile="${dest.dist}/${name}_${version}_src.zip" basedir="${basedir}/build/zip" />
        <delete dir="${basedir}/build/zip" />
    </target>     
    


    
</project>
