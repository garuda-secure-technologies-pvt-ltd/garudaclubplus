/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * passwordCheck.java
 *
 * Created on 30-Jul-2010, 16:13:35
 */

package bci.initForm;


import DBConnection.Session;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import bci.BCIMainFrame;
import bci.Property;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JFrame;
import javax.swing.KeyStroke;
import org.apache.commons.codec.binary.Base64;
/**
 *
 * @author swathi
 */
public class passwordCheck extends javax.swing.JDialog {

    /** Creates new form passwordCheck */
    public static Session checkSession;
    public static BCIMainFrame bciData;
    public String labeltext;
    public BCIMainFrame frame;

    public passwordCheck(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        getRootPane().setDefaultButton(jButton1);
    }
    public passwordCheck(String labelName,BCIMainFrame frame) {
        initComponents();        
        labeltext = labelName;
        this.frame = frame;
        jLabel1.setText(labelName); 
        getRootPane().setDefaultButton(jButton1);
         }
    public passwordCheck() {
        initComponents();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Password");

        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 0, 102)));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bci/images/yast_sysadmin.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel2.setText("PASSWORD");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bci/images/apply.png"))); // NOI18N
        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPasswordField1, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(222, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void hitButton(){
         try{
          String passwordVal = jPasswordField1.getText();
          if(passwordVal.equals("")){
              JOptionPane.showMessageDialog(null, "Enter the password!!");
          }else{
          Connection checkCon = checkSession.getConnection();
          String checkQry = "select password from userinfo where name = '"+labeltext+"'";
          PreparedStatement checkPstm = checkCon.prepareStatement(checkQry);
          ResultSet checkRs = checkPstm.executeQuery();
          String passwordGet = null;
           while (checkRs.next()) {
               passwordGet = checkRs.getString(1);
           }
          byte[] passval = Base64.decodeBase64(passwordGet);
          String password = new String(passval);
          if(password.equals(passwordVal)){
              if(labeltext.equals("Installer")){
                        this.dispose();
                        frame.installerMethod(jLabel1.getText());
              }else if(labeltext.equals("Administrator")){
                  this.dispose();
                  frame.adminMethod(jLabel1.getText());
              }else{
                 this.dispose();
                 frame.EnrollerMethod(jLabel1.getText());
              }
              this.dispose();
          }else{
              JOptionPane.showMessageDialog(null, "Wrong Password");
          }
         }
       }catch(Exception e){
           System.out.println("ok button erro!!");
       }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        hitButton();

    }//GEN-LAST:event_jButton1ActionPerformed

  
    /**
    * @param args the command line arguments
    */
    public static void getPasswordCheck(final String Bname,final BCIMainFrame Bciframe) {
        try{
                Property prop =new Property();
                prop.Read();
                String eServer = prop.getAdbServer();
                String eDBName = prop.getAdbdbname();
                String pno = prop.getAdbport();
                String eDBuser = prop.getDBusername();
                String pass = prop.getDBpassword();
                int essPort = Integer.parseInt(pno);
                try {
                    checkSession = new Session(eServer, essPort, eDBName, eDBuser,pass);
                    } catch (Exception ex) {
                        ex.printStackTrace();
                  }
        }catch(Exception e1){
            e1.printStackTrace();
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                final passwordCheck dialog = new passwordCheck(Bname,Bciframe);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        dialog.dispose();
                    }
                });
                dialog.setLocationRelativeTo(null);
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    // End of variables declaration//GEN-END:variables

}
