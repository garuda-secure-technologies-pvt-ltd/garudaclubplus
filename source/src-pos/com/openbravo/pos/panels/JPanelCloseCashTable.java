/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JPanelCloseSaleTable.java
 *
 * Created on 30-May-2011, 10:23:37
 */
package com.openbravo.pos.panels;

import com.openbravo.basic.BasicException;
import com.openbravo.beans.JCalendarDialog;
import com.openbravo.data.gui.ComboBoxValModel;
import com.openbravo.format.Formats;
import com.openbravo.pos.clubmang.AllUsers;
import com.openbravo.pos.clubmang.DataLogicFacilities;
import com.openbravo.pos.clubmang.DataSourceProvider;
import com.openbravo.pos.forms.AppLocal;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.BeanFactoryApp;
import com.openbravo.pos.forms.BeanFactoryException;
import com.openbravo.pos.forms.JPanelView;
import java.util.Date;
import javax.swing.JComponent;
import javax.swing.ListSelectionModel;
import com.openbravo.pos.clubmang.JRBasicField;
import com.openbravo.pos.clubmang.JasperReportNew;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRField;
import net.sf.jasperreports.engine.JasperPrint;

/**
 *
 * @author swathi
 */
public class JPanelCloseCashTable extends javax.swing.JPanel implements JPanelView, BeanFactoryApp {

    private AppView m_App;
    private CloseCashTableModel dbmodel;
    private ComboBoxValModel rmodel;
    Date fdate;
    Date todate;
    private String companyName = null;
    private String companyAddress = null;
    private DataLogicFacilities dlfac;
    private String user;
    private Double cashTotal = null;

    /** Creates new form JPanelCloseCashTable */
    public JPanelCloseCashTable() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        fromDate = new javax.swing.JTextField();
        toDate = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        roles = new javax.swing.JComboBox();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        jDialog1.setName("jDialog1"); // NOI18N

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jDialog2.setName("jDialog2"); // NOI18N

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        fromDate.setName("fromDate"); // NOI18N

        toDate.setName("toDate"); // NOI18N

        jLabel1.setText("From");
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText("To");
        jLabel2.setName("jLabel2"); // NOI18N

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/date.png"))); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/date.png"))); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Users");
        jLabel3.setName("jLabel3"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        table1.setName("table1"); // NOI18N
        jScrollPane1.setViewportView(table1);

        jButton3.setText("Print");
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        roles.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        roles.setName("roles"); // NOI18N
        roles.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rolesItemStateChanged(evt);
            }
        });
        roles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rolesActionPerformed(evt);
            }
        });

        jButton4.setText("Execute");
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("back");
        jButton5.setName("jButton5"); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("print");
        jButton6.setName("jButton6"); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton6)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5)
                        .addGap(8, 8, 8))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel1))
                                        .addGap(24, 24, 24)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(toDate)
                                            .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(roles, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton1)
                                            .addComponent(jButton2)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addComponent(jButton4)))
                                .addGap(94, 94, 94)))))
                .addGap(709, 709, 709))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(roles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)))
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton3)
                    .addComponent(jButton5))
                .addContainerGap(57, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Date date1;
        try {
            date1 = (Date) Formats.DATE.parseValue(fromDate.getText());
        } catch (BasicException e) {
            date1 = null;
        }
        date1 = JCalendarDialog.showCalendar(this, date1);
        if (date1 != null) {
            fromDate.setText(Formats.DATE.formatValue(date1));
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Date date1;
        try {
            date1 = (Date) Formats.DATE.parseValue(toDate.getText());
        } catch (BasicException e) {
            date1 = null;
        }
        date1 = JCalendarDialog.showCalendar(this, date1);
        if (date1 != null) {
            toDate.setText(Formats.DATE.formatValue(date1));
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private JRField[] getFields() throws JRException, UnsupportedOperationException {
        JRField[] fields = new JRField[12];
        fields[0] = (JRField) new JRBasicField("sequence", "seq", java.lang.String.class, "java.lang.String");
        fields[1] = (JRField) new JRBasicField("dateStart", "sdate", java.util.Date.class, "java.util.Date");
        fields[2] = (JRField) new JRBasicField("dateEnd", "edate", java.util.Date.class, "java.util.Date");
        fields[3] = (JRField) new JRBasicField("host", "host", java.lang.String.class, "java.lang.String");
        fields[4] = (JRField) new JRBasicField("user", "user", java.lang.String.class, "java.lang.String");
        fields[5] = (JRField) new JRBasicField("ReceiptNo", "rno", java.lang.String.class, "java.lang.String");
        fields[6] = (JRField) new JRBasicField("user1", "user1", java.lang.String.class, "java.lang.String");
        fields[7] = (JRField) new JRBasicField("date", "date", java.util.Date.class, "java.util.Date");
        fields[8] = (JRField) new JRBasicField("Description", "descr", java.lang.String.class, "java.lang.String");
        fields[9] = (JRField) new JRBasicField("amountt", "amount", java.lang.Double.class, "java.lang.Double");

        return fields;
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            // TODO add your handling code here:
            companyName = m_App.getSession().getCompanyName();
            companyAddress = m_App.getSession().getCompanyAddress();
            Map reportparams = new HashMap();
            reportparams.put("fromDate", fdate);
            reportparams.put("toDate", todate);
            reportparams.put("companyName", companyName);
            reportparams.put("companyAddress", companyAddress);
            DataSourceProvider data1 = new DataSourceProvider(dbmodel.getClosedCashLine());
            data1.setFields(getFields());
            ClosedCashDataSource ds = new ClosedCashDataSource(dbmodel.getClosedCashLine());
            data1.setDataSource(ds);
            JasperPrint jp = JasperReportNew.runReport(m_App, "./reports/com/openbravo/reports/ClosedCashReport.jrxml", reportparams, false, data1, true, null);
        } catch (Exception ex) {
            ex.printStackTrace();
        }



    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (fromDate.getText().length() > 0 && toDate.getText().length() > 0 && roles.getSelectedItem() != null) {
            try {
                jButton5.setVisible(false);
                jButton6.setVisible(false);
                if (fromDate.getText().isEmpty() == true && toDate.getText().isEmpty() == true) {
                    JOptionPane.showMessageDialog(this, "Please Enter both start an end date");
                } else if (fromDate.getText().isEmpty() == true) {
                    JOptionPane.showMessageDialog(this, "Please Enter Start Date");
                } else if (toDate.getText().isEmpty() == true) {
                    JOptionPane.showMessageDialog(this, "Please Enter End Date");
                } else if (fromDate.getText().isEmpty() == false && toDate.getText().isEmpty() == false && roles.getSelectedIndex() >= 0) {
                    fdate = (Date) Formats.DATE.parseValue(fromDate.getText());
                    todate = (Date) Formats.DATE.parseValue(toDate.getText());
                    Calendar cal1 = Calendar.getInstance();
                    Calendar cal2 = Calendar.getInstance();
                    cal1.setTime(fdate);
                    cal1.set(Calendar.HOUR_OF_DAY, 00);
                    cal1.set(Calendar.MINUTE, 00);
                    cal1.set(Calendar.SECOND, 00);
                    cal1.set(Calendar.MILLISECOND, 00);
                    cal2.setTime(todate);
                    cal2.set(Calendar.HOUR_OF_DAY, 23);
                    cal2.set(Calendar.MINUTE, 59);
                    cal2.set(Calendar.SECOND, 59);
                    cal2.set(Calendar.MILLISECOND, 59);

                    AllUsers alluser = (AllUsers) roles.getSelectedItem();
                    user = alluser.getName();
                    dbmodel = CloseCashTableModel.loadInstantce(m_App, cal1.getTime(), cal2.getTime(), user);
                    table1.setModel(dbmodel.getTableModel());
                    jButton3.setVisible(true);
                    table1.addMouseListener(new java.awt.event.MouseAdapter() {

                        @Override
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            TableMouseClicked(evt);
                        }
                    });

                } else {
                    JOptionPane.showMessageDialog(this, "Select any one user", "incomplete form", JOptionPane.WARNING_MESSAGE);
                }

            } catch (BasicException ex) {
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "fill the form completely", "incomplete form", JOptionPane.WARNING_MESSAGE);

        }



    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            // TODO add your handling code here:
            fdate = (Date) Formats.DATE.parseValue(fromDate.getText());
            todate = (Date) Formats.DATE.parseValue(toDate.getText());
            dbmodel = CloseCashTableModel.loadInstantce(m_App, fdate, todate, user);
            table1.setModel(dbmodel.getTableModel());
            jButton3.setVisible(true);
            jButton6.setVisible(false);
            jButton5.setVisible(false);
        } catch (BasicException ex) {
            ex.printStackTrace();
        }


    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        try {
            companyName = m_App.getSession().getCompanyName();
            companyAddress = m_App.getSession().getCompanyAddress();
            Map reportparams = new HashMap();
            reportparams.put("companyName", companyName);
            reportparams.put("companyAddress", companyAddress);
            reportparams.put("fromDate", fdate);
            reportparams.put("toDate", todate);
            reportparams.put("total", cashTotal);
            DataSourceProvider data1 = new DataSourceProvider(dbmodel.getCashList());
            data1.setFields(getFields());
            ClosedCashDataSource1 ds = new ClosedCashDataSource1(dbmodel.getCashList());
            data1.setDataSource(ds);
            JasperPrint jp = JasperReportNew.runReport(m_App, "./reports/com/openbravo/reports/ClosedCashReport_1.jrxml", reportparams, false, data1, true, null);
        } catch (Exception ex) {
            ex.printStackTrace();
        }


    }//GEN-LAST:event_jButton6ActionPerformed

    private void rolesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rolesActionPerformed
    // TODO add your handling code here:
}//GEN-LAST:event_rolesActionPerformed

    private void rolesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rolesItemStateChanged
    // TODO add your handling code here:
}//GEN-LAST:event_rolesItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fromDate;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox roles;
    private javax.swing.JTable table1;
    private javax.swing.JTextField toDate;
    // End of variables declaration//GEN-END:variables
    public String getTitle() {
        return AppLocal.getIntString("Menu.ClosedCashReprint");
    }

    public void activate() throws BasicException {
        loadData();
    }

    private void loadData() throws BasicException {
        toDate.setText(null);
        fromDate.setText(null);
        dbmodel = CloseCashTableModel.emptyinstance();
        table1.setModel(dbmodel.getTableModel());
        jButton5.setVisible(false);
        jButton3.setVisible(false);
        jButton6.setVisible(false);
        List<AllUsers> userlist = dlfac.getAllusers();
        rmodel = new ComboBoxValModel(userlist);
        roles.setModel(rmodel);
    }

    public boolean deactivate() {
        return true;
    }

    public JComponent getComponent() {
        return this;
    }

    public void init(AppView app) throws BeanFactoryException {
        m_App = app;
        table1.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        dlfac = (DataLogicFacilities) app.getBean("com.openbravo.pos.clubmang.DataLogicFacilitiesCreate");

    }

    public Object getBean() {
        return this;
    }

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {
        try {
            int row = 0;
            if (evt.getClickCount() == 2) {
                if (jScrollPane1.getViewport().getView() instanceof JTable) {
                    row = table1.getSelectedRow();
                }
                DateFormat df = new SimpleDateFormat("dd MMM,yyyy");
                fdate = df.parse(fromDate.getText().toString());
                todate = df.parse(toDate.getText().toString());
                Calendar cal1 = Calendar.getInstance();
                Calendar cal2 = Calendar.getInstance();
                cal1.setTime(fdate);
                cal1.set(Calendar.HOUR_OF_DAY, 00);
                cal1.set(Calendar.MINUTE, 00);
                cal1.set(Calendar.SECOND, 00);
                cal1.set(Calendar.MILLISECOND, 00);
                cal2.setTime(todate);
                cal2.set(Calendar.HOUR_OF_DAY, 23);
                cal2.set(Calendar.MINUTE, 59);
                cal2.set(Calendar.SECOND, 59);
                cal2.set(Calendar.MILLISECOND, 59);
                String host = (String) dbmodel.getTableModel().getValueAt(row, 4);
                String hostsequence = (String) dbmodel.getTableModel().getValueAt(row, 0);
                String id = host + " : " + hostsequence;
                String ruser = (String) dbmodel.getTableModel().getValueAt(row, 3);
                System.out.println(id);
                dbmodel = CloseCashTableModel.loadInstanceOfCash(m_App, cal1.getTime(), cal2.getTime(), id,ruser);
                table1.setModel(dbmodel.getTableModel1());
                cashTotal = dbmodel.getCashTotal();
                jButton3.setVisible(false);
                jButton5.setVisible(true);
                jButton6.setVisible(true);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
